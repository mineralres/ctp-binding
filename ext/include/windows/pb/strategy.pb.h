// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: strategy.proto

#ifndef PROTOBUF_INCLUDED_strategy_2eproto
#define PROTOBUF_INCLUDED_strategy_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_strategy_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_strategy_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_strategy_2eproto();
namespace pb {
class ReqDeleteStrategy;
class ReqDeleteStrategyDefaultTypeInternal;
extern ReqDeleteStrategyDefaultTypeInternal _ReqDeleteStrategy_default_instance_;
class ReqGetStrategy;
class ReqGetStrategyDefaultTypeInternal;
extern ReqGetStrategyDefaultTypeInternal _ReqGetStrategy_default_instance_;
class Strategy;
class StrategyDefaultTypeInternal;
extern StrategyDefaultTypeInternal _Strategy_default_instance_;
class StrategyList;
class StrategyListDefaultTypeInternal;
extern StrategyListDefaultTypeInternal _StrategyList_default_instance_;
class Strategy_ParamsEntry_DoNotUse;
class Strategy_ParamsEntry_DoNotUseDefaultTypeInternal;
extern Strategy_ParamsEntry_DoNotUseDefaultTypeInternal _Strategy_ParamsEntry_DoNotUse_default_instance_;
}  // namespace pb
namespace google {
namespace protobuf {
template<> ::pb::ReqDeleteStrategy* Arena::CreateMaybeMessage<::pb::ReqDeleteStrategy>(Arena*);
template<> ::pb::ReqGetStrategy* Arena::CreateMaybeMessage<::pb::ReqGetStrategy>(Arena*);
template<> ::pb::Strategy* Arena::CreateMaybeMessage<::pb::Strategy>(Arena*);
template<> ::pb::StrategyList* Arena::CreateMaybeMessage<::pb::StrategyList>(Arena*);
template<> ::pb::Strategy_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage<::pb::Strategy_ParamsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pb {

// ===================================================================

class Strategy_ParamsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Strategy_ParamsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Strategy_ParamsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Strategy_ParamsEntry_DoNotUse();
  Strategy_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Strategy_ParamsEntry_DoNotUse& other);
  static const Strategy_ParamsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Strategy_ParamsEntry_DoNotUse*>(&_Strategy_ParamsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Strategy :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Strategy) */ {
 public:
  Strategy();
  virtual ~Strategy();

  Strategy(const Strategy& from);

  inline Strategy& operator=(const Strategy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Strategy(Strategy&& from) noexcept
    : Strategy() {
    *this = ::std::move(from);
  }

  inline Strategy& operator=(Strategy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Strategy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Strategy* internal_default_instance() {
    return reinterpret_cast<const Strategy*>(
               &_Strategy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Strategy* other);
  friend void swap(Strategy& a, Strategy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Strategy* New() const final {
    return CreateMaybeMessage<Strategy>(nullptr);
  }

  Strategy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Strategy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Strategy& from);
  void MergeFrom(const Strategy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Strategy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> params = 4;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      params() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_params();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string user = 3;
  void clear_user();
  static const int kUserFieldNumber = 3;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  #if LANG_CXX11
  void set_user(::std::string&& value);
  #endif
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // @@protoc_insertion_point(class_scope:pb.Strategy)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Strategy_ParamsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > params_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_strategy_2eproto;
};
// -------------------------------------------------------------------

class StrategyList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.StrategyList) */ {
 public:
  StrategyList();
  virtual ~StrategyList();

  StrategyList(const StrategyList& from);

  inline StrategyList& operator=(const StrategyList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StrategyList(StrategyList&& from) noexcept
    : StrategyList() {
    *this = ::std::move(from);
  }

  inline StrategyList& operator=(StrategyList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StrategyList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StrategyList* internal_default_instance() {
    return reinterpret_cast<const StrategyList*>(
               &_StrategyList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(StrategyList* other);
  friend void swap(StrategyList& a, StrategyList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StrategyList* New() const final {
    return CreateMaybeMessage<StrategyList>(nullptr);
  }

  StrategyList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StrategyList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StrategyList& from);
  void MergeFrom(const StrategyList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StrategyList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Strategy list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::pb::Strategy* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::pb::Strategy >*
      mutable_list();
  const ::pb::Strategy& list(int index) const;
  ::pb::Strategy* add_list();
  const ::google::protobuf::RepeatedPtrField< ::pb::Strategy >&
      list() const;

  // @@protoc_insertion_point(class_scope:pb.StrategyList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::Strategy > list_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_strategy_2eproto;
};
// -------------------------------------------------------------------

class ReqDeleteStrategy :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqDeleteStrategy) */ {
 public:
  ReqDeleteStrategy();
  virtual ~ReqDeleteStrategy();

  ReqDeleteStrategy(const ReqDeleteStrategy& from);

  inline ReqDeleteStrategy& operator=(const ReqDeleteStrategy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqDeleteStrategy(ReqDeleteStrategy&& from) noexcept
    : ReqDeleteStrategy() {
    *this = ::std::move(from);
  }

  inline ReqDeleteStrategy& operator=(ReqDeleteStrategy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqDeleteStrategy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqDeleteStrategy* internal_default_instance() {
    return reinterpret_cast<const ReqDeleteStrategy*>(
               &_ReqDeleteStrategy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ReqDeleteStrategy* other);
  friend void swap(ReqDeleteStrategy& a, ReqDeleteStrategy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqDeleteStrategy* New() const final {
    return CreateMaybeMessage<ReqDeleteStrategy>(nullptr);
  }

  ReqDeleteStrategy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqDeleteStrategy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqDeleteStrategy& from);
  void MergeFrom(const ReqDeleteStrategy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqDeleteStrategy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:pb.ReqDeleteStrategy)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_strategy_2eproto;
};
// -------------------------------------------------------------------

class ReqGetStrategy :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqGetStrategy) */ {
 public:
  ReqGetStrategy();
  virtual ~ReqGetStrategy();

  ReqGetStrategy(const ReqGetStrategy& from);

  inline ReqGetStrategy& operator=(const ReqGetStrategy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqGetStrategy(ReqGetStrategy&& from) noexcept
    : ReqGetStrategy() {
    *this = ::std::move(from);
  }

  inline ReqGetStrategy& operator=(ReqGetStrategy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqGetStrategy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqGetStrategy* internal_default_instance() {
    return reinterpret_cast<const ReqGetStrategy*>(
               &_ReqGetStrategy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ReqGetStrategy* other);
  friend void swap(ReqGetStrategy& a, ReqGetStrategy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqGetStrategy* New() const final {
    return CreateMaybeMessage<ReqGetStrategy>(nullptr);
  }

  ReqGetStrategy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqGetStrategy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqGetStrategy& from);
  void MergeFrom(const ReqGetStrategy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqGetStrategy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:pb.ReqGetStrategy)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_strategy_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Strategy

// string id = 1;
inline void Strategy::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Strategy::id() const {
  // @@protoc_insertion_point(field_get:pb.Strategy.id)
  return id_.GetNoArena();
}
inline void Strategy::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Strategy.id)
}
#if LANG_CXX11
inline void Strategy::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Strategy.id)
}
#endif
inline void Strategy::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Strategy.id)
}
inline void Strategy::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Strategy.id)
}
inline ::std::string* Strategy::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.Strategy.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Strategy::release_id() {
  // @@protoc_insertion_point(field_release:pb.Strategy.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Strategy::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.Strategy.id)
}

// string name = 2;
inline void Strategy::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Strategy::name() const {
  // @@protoc_insertion_point(field_get:pb.Strategy.name)
  return name_.GetNoArena();
}
inline void Strategy::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Strategy.name)
}
#if LANG_CXX11
inline void Strategy::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Strategy.name)
}
#endif
inline void Strategy::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Strategy.name)
}
inline void Strategy::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Strategy.name)
}
inline ::std::string* Strategy::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.Strategy.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Strategy::release_name() {
  // @@protoc_insertion_point(field_release:pb.Strategy.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Strategy::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.Strategy.name)
}

// string user = 3;
inline void Strategy::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Strategy::user() const {
  // @@protoc_insertion_point(field_get:pb.Strategy.user)
  return user_.GetNoArena();
}
inline void Strategy::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Strategy.user)
}
#if LANG_CXX11
inline void Strategy::set_user(::std::string&& value) {
  
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Strategy.user)
}
#endif
inline void Strategy::set_user(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Strategy.user)
}
inline void Strategy::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Strategy.user)
}
inline ::std::string* Strategy::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:pb.Strategy.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Strategy::release_user() {
  // @@protoc_insertion_point(field_release:pb.Strategy.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Strategy::set_allocated_user(::std::string* user) {
  if (user != nullptr) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:pb.Strategy.user)
}

// map<string, string> params = 4;
inline int Strategy::params_size() const {
  return params_.size();
}
inline void Strategy::clear_params() {
  params_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Strategy::params() const {
  // @@protoc_insertion_point(field_map:pb.Strategy.params)
  return params_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Strategy::mutable_params() {
  // @@protoc_insertion_point(field_mutable_map:pb.Strategy.params)
  return params_.MutableMap();
}

// -------------------------------------------------------------------

// StrategyList

// repeated .pb.Strategy list = 1;
inline int StrategyList::list_size() const {
  return list_.size();
}
inline void StrategyList::clear_list() {
  list_.Clear();
}
inline ::pb::Strategy* StrategyList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:pb.StrategyList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Strategy >*
StrategyList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:pb.StrategyList.list)
  return &list_;
}
inline const ::pb::Strategy& StrategyList::list(int index) const {
  // @@protoc_insertion_point(field_get:pb.StrategyList.list)
  return list_.Get(index);
}
inline ::pb::Strategy* StrategyList::add_list() {
  // @@protoc_insertion_point(field_add:pb.StrategyList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Strategy >&
StrategyList::list() const {
  // @@protoc_insertion_point(field_list:pb.StrategyList.list)
  return list_;
}

// -------------------------------------------------------------------

// ReqDeleteStrategy

// string id = 1;
inline void ReqDeleteStrategy::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqDeleteStrategy::id() const {
  // @@protoc_insertion_point(field_get:pb.ReqDeleteStrategy.id)
  return id_.GetNoArena();
}
inline void ReqDeleteStrategy::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ReqDeleteStrategy.id)
}
#if LANG_CXX11
inline void ReqDeleteStrategy::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ReqDeleteStrategy.id)
}
#endif
inline void ReqDeleteStrategy::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ReqDeleteStrategy.id)
}
inline void ReqDeleteStrategy::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ReqDeleteStrategy.id)
}
inline ::std::string* ReqDeleteStrategy::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.ReqDeleteStrategy.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqDeleteStrategy::release_id() {
  // @@protoc_insertion_point(field_release:pb.ReqDeleteStrategy.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqDeleteStrategy::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.ReqDeleteStrategy.id)
}

// -------------------------------------------------------------------

// ReqGetStrategy

// string id = 1;
inline void ReqGetStrategy::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqGetStrategy::id() const {
  // @@protoc_insertion_point(field_get:pb.ReqGetStrategy.id)
  return id_.GetNoArena();
}
inline void ReqGetStrategy::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ReqGetStrategy.id)
}
#if LANG_CXX11
inline void ReqGetStrategy::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ReqGetStrategy.id)
}
#endif
inline void ReqGetStrategy::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ReqGetStrategy.id)
}
inline void ReqGetStrategy::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ReqGetStrategy.id)
}
inline ::std::string* ReqGetStrategy::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.ReqGetStrategy.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqGetStrategy::release_id() {
  // @@protoc_insertion_point(field_release:pb.ReqGetStrategy.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqGetStrategy::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.ReqGetStrategy.id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_strategy_2eproto
