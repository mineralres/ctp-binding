// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: position.proto

#ifndef PROTOBUF_INCLUDED_position_2eproto
#define PROTOBUF_INCLUDED_position_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "order.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_position_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_position_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_position_2eproto();
namespace pb {
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class PositionList;
class PositionListDefaultTypeInternal;
extern PositionListDefaultTypeInternal _PositionList_default_instance_;
class PositionSummation;
class PositionSummationDefaultTypeInternal;
extern PositionSummationDefaultTypeInternal _PositionSummation_default_instance_;
class ReqForceClosePosition;
class ReqForceClosePositionDefaultTypeInternal;
extern ReqForceClosePositionDefaultTypeInternal _ReqForceClosePosition_default_instance_;
}  // namespace pb
namespace google {
namespace protobuf {
template<> ::pb::Position* Arena::CreateMaybeMessage<::pb::Position>(Arena*);
template<> ::pb::PositionList* Arena::CreateMaybeMessage<::pb::PositionList>(Arena*);
template<> ::pb::PositionSummation* Arena::CreateMaybeMessage<::pb::PositionSummation>(Arena*);
template<> ::pb::ReqForceClosePosition* Arena::CreateMaybeMessage<::pb::ReqForceClosePosition>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pb {

// ===================================================================

class PositionSummation :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.PositionSummation) */ {
 public:
  PositionSummation();
  virtual ~PositionSummation();

  PositionSummation(const PositionSummation& from);

  inline PositionSummation& operator=(const PositionSummation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PositionSummation(PositionSummation&& from) noexcept
    : PositionSummation() {
    *this = ::std::move(from);
  }

  inline PositionSummation& operator=(PositionSummation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PositionSummation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PositionSummation* internal_default_instance() {
    return reinterpret_cast<const PositionSummation*>(
               &_PositionSummation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PositionSummation* other);
  friend void swap(PositionSummation& a, PositionSummation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PositionSummation* New() const final {
    return CreateMaybeMessage<PositionSummation>(nullptr);
  }

  PositionSummation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PositionSummation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PositionSummation& from);
  void MergeFrom(const PositionSummation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionSummation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string route_account = 3;
  void clear_route_account();
  static const int kRouteAccountFieldNumber = 3;
  const ::std::string& route_account() const;
  void set_route_account(const ::std::string& value);
  #if LANG_CXX11
  void set_route_account(::std::string&& value);
  #endif
  void set_route_account(const char* value);
  void set_route_account(const char* value, size_t size);
  ::std::string* mutable_route_account();
  ::std::string* release_route_account();
  void set_allocated_route_account(::std::string* route_account);

  // string branch = 21;
  void clear_branch();
  static const int kBranchFieldNumber = 21;
  const ::std::string& branch() const;
  void set_branch(const ::std::string& value);
  #if LANG_CXX11
  void set_branch(::std::string&& value);
  #endif
  void set_branch(const char* value);
  void set_branch(const char* value, size_t size);
  ::std::string* mutable_branch();
  ::std::string* release_branch();
  void set_allocated_branch(::std::string* branch);

  // string branch_name = 22;
  void clear_branch_name();
  static const int kBranchNameFieldNumber = 22;
  const ::std::string& branch_name() const;
  void set_branch_name(const ::std::string& value);
  #if LANG_CXX11
  void set_branch_name(::std::string&& value);
  #endif
  void set_branch_name(const char* value);
  void set_branch_name(const char* value, size_t size);
  ::std::string* mutable_branch_name();
  ::std::string* release_branch_name();
  void set_allocated_branch_name(::std::string* branch_name);

  // int32 direction = 1;
  void clear_direction();
  static const int kDirectionFieldNumber = 1;
  ::google::protobuf::int32 direction() const;
  void set_direction(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // double amount = 5;
  void clear_amount();
  static const int kAmountFieldNumber = 5;
  double amount() const;
  void set_amount(double value);

  // int32 position = 4;
  void clear_position();
  static const int kPositionFieldNumber = 4;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // int32 frozen = 7;
  void clear_frozen();
  static const int kFrozenFieldNumber = 7;
  ::google::protobuf::int32 frozen() const;
  void set_frozen(::google::protobuf::int32 value);

  // double cost = 6;
  void clear_cost();
  static const int kCostFieldNumber = 6;
  double cost() const;
  void set_cost(double value);

  // double position_profit = 9;
  void clear_position_profit();
  static const int kPositionProfitFieldNumber = 9;
  double position_profit() const;
  void set_position_profit(double value);

  // double closed_profit = 10;
  void clear_closed_profit();
  static const int kClosedProfitFieldNumber = 10;
  double closed_profit() const;
  void set_closed_profit(double value);

  // double margin = 11;
  void clear_margin();
  static const int kMarginFieldNumber = 11;
  double margin() const;
  void set_margin(double value);

  // double frozen_margin = 12;
  void clear_frozen_margin();
  static const int kFrozenMarginFieldNumber = 12;
  double frozen_margin() const;
  void set_frozen_margin(double value);

  // double commission = 13;
  void clear_commission();
  static const int kCommissionFieldNumber = 13;
  double commission() const;
  void set_commission(double value);

  // double frozen_commission = 14;
  void clear_frozen_commission();
  static const int kFrozenCommissionFieldNumber = 14;
  double frozen_commission() const;
  void set_frozen_commission(double value);

  // double interest = 15;
  void clear_interest();
  static const int kInterestFieldNumber = 15;
  double interest() const;
  void set_interest(double value);

  // double frozen_interest = 16;
  void clear_frozen_interest();
  static const int kFrozenInterestFieldNumber = 16;
  double frozen_interest() const;
  void set_frozen_interest(double value);

  // double mtm_profit = 17;
  void clear_mtm_profit();
  static const int kMtmProfitFieldNumber = 17;
  double mtm_profit() const;
  void set_mtm_profit(double value);

  // double cleared_closed_profit = 18;
  void clear_cleared_closed_profit();
  static const int kClearedClosedProfitFieldNumber = 18;
  double cleared_closed_profit() const;
  void set_cleared_closed_profit(double value);

  // double stamp_tax = 19;
  void clear_stamp_tax();
  static const int kStampTaxFieldNumber = 19;
  double stamp_tax() const;
  void set_stamp_tax(double value);

  // double transfer_fee = 20;
  void clear_transfer_fee();
  static const int kTransferFeeFieldNumber = 20;
  double transfer_fee() const;
  void set_transfer_fee(double value);

  // int32 available = 8;
  void clear_available();
  static const int kAvailableFieldNumber = 8;
  ::google::protobuf::int32 available() const;
  void set_available(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.PositionSummation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr route_account_;
  ::google::protobuf::internal::ArenaStringPtr branch_;
  ::google::protobuf::internal::ArenaStringPtr branch_name_;
  ::google::protobuf::int32 direction_;
  ::google::protobuf::int32 type_;
  double amount_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 frozen_;
  double cost_;
  double position_profit_;
  double closed_profit_;
  double margin_;
  double frozen_margin_;
  double commission_;
  double frozen_commission_;
  double interest_;
  double frozen_interest_;
  double mtm_profit_;
  double cleared_closed_profit_;
  double stamp_tax_;
  double transfer_fee_;
  ::google::protobuf::int32 available_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_position_2eproto;
};
// -------------------------------------------------------------------

class Position :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Position(Position&& from) noexcept
    : Position() {
    *this = ::std::move(from);
  }

  inline Position& operator=(Position&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
               &_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Position* other);
  friend void swap(Position& a, Position& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Position* New() const final {
    return CreateMaybeMessage<Position>(nullptr);
  }

  Position* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Position>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string symbol_name = 14;
  void clear_symbol_name();
  static const int kSymbolNameFieldNumber = 14;
  const ::std::string& symbol_name() const;
  void set_symbol_name(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol_name(::std::string&& value);
  #endif
  void set_symbol_name(const char* value);
  void set_symbol_name(const char* value, size_t size);
  ::std::string* mutable_symbol_name();
  ::std::string* release_symbol_name();
  void set_allocated_symbol_name(::std::string* symbol_name);

  // string account = 15;
  void clear_account();
  static const int kAccountFieldNumber = 15;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string account_name = 16;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 16;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  #if LANG_CXX11
  void set_account_name(::std::string&& value);
  #endif
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // string branch = 18;
  void clear_branch();
  static const int kBranchFieldNumber = 18;
  const ::std::string& branch() const;
  void set_branch(const ::std::string& value);
  #if LANG_CXX11
  void set_branch(::std::string&& value);
  #endif
  void set_branch(const char* value);
  void set_branch(const char* value, size_t size);
  ::std::string* mutable_branch();
  ::std::string* release_branch();
  void set_allocated_branch(::std::string* branch);

  // string branch_name = 20;
  void clear_branch_name();
  static const int kBranchNameFieldNumber = 20;
  const ::std::string& branch_name() const;
  void set_branch_name(const ::std::string& value);
  #if LANG_CXX11
  void set_branch_name(::std::string&& value);
  #endif
  void set_branch_name(const char* value);
  void set_branch_name(const char* value, size_t size);
  ::std::string* mutable_branch_name();
  ::std::string* release_branch_name();
  void set_allocated_branch_name(::std::string* branch_name);

  // string user = 22;
  void clear_user();
  static const int kUserFieldNumber = 22;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  #if LANG_CXX11
  void set_user(::std::string&& value);
  #endif
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // string user_name = 23;
  void clear_user_name();
  static const int kUserNameFieldNumber = 23;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // .pb.Symbol symbol = 1;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::pb::Symbol& symbol() const;
  ::pb::Symbol* release_symbol();
  ::pb::Symbol* mutable_symbol();
  void set_allocated_symbol(::pb::Symbol* symbol);

  // .pb.PositionSummation summation = 2;
  bool has_summation() const;
  void clear_summation();
  static const int kSummationFieldNumber = 2;
  const ::pb::PositionSummation& summation() const;
  ::pb::PositionSummation* release_summation();
  ::pb::PositionSummation* mutable_summation();
  void set_allocated_summation(::pb::PositionSummation* summation);

  // .pb.PositionSummation today_summation = 3;
  bool has_today_summation() const;
  void clear_today_summation();
  static const int kTodaySummationFieldNumber = 3;
  const ::pb::PositionSummation& today_summation() const;
  ::pb::PositionSummation* release_today_summation();
  ::pb::PositionSummation* mutable_today_summation();
  void set_allocated_today_summation(::pb::PositionSummation* today_summation);

  // .pb.PositionSummation yesterday_summation = 4;
  bool has_yesterday_summation() const;
  void clear_yesterday_summation();
  static const int kYesterdaySummationFieldNumber = 4;
  const ::pb::PositionSummation& yesterday_summation() const;
  ::pb::PositionSummation* release_yesterday_summation();
  ::pb::PositionSummation* mutable_yesterday_summation();
  void set_allocated_yesterday_summation(::pb::PositionSummation* yesterday_summation);

  // .pb.ProductID product_id = 12;
  bool has_product_id() const;
  void clear_product_id();
  static const int kProductIdFieldNumber = 12;
  const ::pb::ProductID& product_id() const;
  ::pb::ProductID* release_product_id();
  ::pb::ProductID* mutable_product_id();
  void set_allocated_product_id(::pb::ProductID* product_id);

  // double pre_settlement_price = 5;
  void clear_pre_settlement_price();
  static const int kPreSettlementPriceFieldNumber = 5;
  double pre_settlement_price() const;
  void set_pre_settlement_price(double value);

  // double settlement_price = 6;
  void clear_settlement_price();
  static const int kSettlementPriceFieldNumber = 6;
  double settlement_price() const;
  void set_settlement_price(double value);

  // double last_price = 7;
  void clear_last_price();
  static const int kLastPriceFieldNumber = 7;
  double last_price() const;
  void set_last_price(double value);

  // int32 trading_day = 8;
  void clear_trading_day();
  static const int kTradingDayFieldNumber = 8;
  ::google::protobuf::int32 trading_day() const;
  void set_trading_day(::google::protobuf::int32 value);

  // int32 product_type = 9;
  void clear_product_type();
  static const int kProductTypeFieldNumber = 9;
  ::google::protobuf::int32 product_type() const;
  void set_product_type(::google::protobuf::int32 value);

  // int32 settlement_group = 10;
  void clear_settlement_group();
  static const int kSettlementGroupFieldNumber = 10;
  ::google::protobuf::int32 settlement_group() const;
  void set_settlement_group(::google::protobuf::int32 value);

  // int32 volume_multiple = 11;
  void clear_volume_multiple();
  static const int kVolumeMultipleFieldNumber = 11;
  ::google::protobuf::int32 volume_multiple() const;
  void set_volume_multiple(::google::protobuf::int32 value);

  // double price_tick = 13;
  void clear_price_tick();
  static const int kPriceTickFieldNumber = 13;
  double price_tick() const;
  void set_price_tick(double value);

  // int64 company = 17;
  void clear_company();
  static const int kCompanyFieldNumber = 17;
  ::google::protobuf::int64 company() const;
  void set_company(::google::protobuf::int64 value);

  // int32 expire_date = 19;
  void clear_expire_date();
  static const int kExpireDateFieldNumber = 19;
  ::google::protobuf::int32 expire_date() const;
  void set_expire_date(::google::protobuf::int32 value);

  // bool is_close_today_allowed = 21;
  void clear_is_close_today_allowed();
  static const int kIsCloseTodayAllowedFieldNumber = 21;
  bool is_close_today_allowed() const;
  void set_is_close_today_allowed(bool value);

  // @@protoc_insertion_point(class_scope:pb.Position)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr symbol_name_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  ::google::protobuf::internal::ArenaStringPtr branch_;
  ::google::protobuf::internal::ArenaStringPtr branch_name_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::pb::Symbol* symbol_;
  ::pb::PositionSummation* summation_;
  ::pb::PositionSummation* today_summation_;
  ::pb::PositionSummation* yesterday_summation_;
  ::pb::ProductID* product_id_;
  double pre_settlement_price_;
  double settlement_price_;
  double last_price_;
  ::google::protobuf::int32 trading_day_;
  ::google::protobuf::int32 product_type_;
  ::google::protobuf::int32 settlement_group_;
  ::google::protobuf::int32 volume_multiple_;
  double price_tick_;
  ::google::protobuf::int64 company_;
  ::google::protobuf::int32 expire_date_;
  bool is_close_today_allowed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_position_2eproto;
};
// -------------------------------------------------------------------

class PositionList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.PositionList) */ {
 public:
  PositionList();
  virtual ~PositionList();

  PositionList(const PositionList& from);

  inline PositionList& operator=(const PositionList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PositionList(PositionList&& from) noexcept
    : PositionList() {
    *this = ::std::move(from);
  }

  inline PositionList& operator=(PositionList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PositionList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PositionList* internal_default_instance() {
    return reinterpret_cast<const PositionList*>(
               &_PositionList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PositionList* other);
  friend void swap(PositionList& a, PositionList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PositionList* New() const final {
    return CreateMaybeMessage<PositionList>(nullptr);
  }

  PositionList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PositionList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PositionList& from);
  void MergeFrom(const PositionList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Position list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::pb::Position* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::pb::Position >*
      mutable_list();
  const ::pb::Position& list(int index) const;
  ::pb::Position* add_list();
  const ::google::protobuf::RepeatedPtrField< ::pb::Position >&
      list() const;

  // @@protoc_insertion_point(class_scope:pb.PositionList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::Position > list_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_position_2eproto;
};
// -------------------------------------------------------------------

class ReqForceClosePosition :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqForceClosePosition) */ {
 public:
  ReqForceClosePosition();
  virtual ~ReqForceClosePosition();

  ReqForceClosePosition(const ReqForceClosePosition& from);

  inline ReqForceClosePosition& operator=(const ReqForceClosePosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqForceClosePosition(ReqForceClosePosition&& from) noexcept
    : ReqForceClosePosition() {
    *this = ::std::move(from);
  }

  inline ReqForceClosePosition& operator=(ReqForceClosePosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqForceClosePosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqForceClosePosition* internal_default_instance() {
    return reinterpret_cast<const ReqForceClosePosition*>(
               &_ReqForceClosePosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ReqForceClosePosition* other);
  friend void swap(ReqForceClosePosition& a, ReqForceClosePosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqForceClosePosition* New() const final {
    return CreateMaybeMessage<ReqForceClosePosition>(nullptr);
  }

  ReqForceClosePosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqForceClosePosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqForceClosePosition& from);
  void MergeFrom(const ReqForceClosePosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqForceClosePosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  #if LANG_CXX11
  void set_user(::std::string&& value);
  #endif
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // string account = 6;
  void clear_account();
  static const int kAccountFieldNumber = 6;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string comment = 8;
  void clear_comment();
  static const int kCommentFieldNumber = 8;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // .pb.Symbol symbol = 2;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 2;
  const ::pb::Symbol& symbol() const;
  ::pb::Symbol* release_symbol();
  ::pb::Symbol* mutable_symbol();
  void set_allocated_symbol(::pb::Symbol* symbol);

  // double price = 4;
  void clear_price();
  static const int kPriceFieldNumber = 4;
  double price() const;
  void set_price(double value);

  // .pb.OrderDirection direction = 3;
  void clear_direction();
  static const int kDirectionFieldNumber = 3;
  ::pb::OrderDirection direction() const;
  void set_direction(::pb::OrderDirection value);

  // int32 volume = 5;
  void clear_volume();
  static const int kVolumeFieldNumber = 5;
  ::google::protobuf::int32 volume() const;
  void set_volume(::google::protobuf::int32 value);

  // bool repurchase = 7;
  void clear_repurchase();
  static const int kRepurchaseFieldNumber = 7;
  bool repurchase() const;
  void set_repurchase(bool value);

  // @@protoc_insertion_point(class_scope:pb.ReqForceClosePosition)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::pb::Symbol* symbol_;
  double price_;
  int direction_;
  ::google::protobuf::int32 volume_;
  bool repurchase_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_position_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PositionSummation

// int32 direction = 1;
inline void PositionSummation::clear_direction() {
  direction_ = 0;
}
inline ::google::protobuf::int32 PositionSummation::direction() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.direction)
  return direction_;
}
inline void PositionSummation::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.direction)
}

// int32 type = 2;
inline void PositionSummation::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 PositionSummation::type() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.type)
  return type_;
}
inline void PositionSummation::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.type)
}

// string route_account = 3;
inline void PositionSummation::clear_route_account() {
  route_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PositionSummation::route_account() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.route_account)
  return route_account_.GetNoArena();
}
inline void PositionSummation::set_route_account(const ::std::string& value) {
  
  route_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.PositionSummation.route_account)
}
#if LANG_CXX11
inline void PositionSummation::set_route_account(::std::string&& value) {
  
  route_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.PositionSummation.route_account)
}
#endif
inline void PositionSummation::set_route_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  route_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.PositionSummation.route_account)
}
inline void PositionSummation::set_route_account(const char* value, size_t size) {
  
  route_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.PositionSummation.route_account)
}
inline ::std::string* PositionSummation::mutable_route_account() {
  
  // @@protoc_insertion_point(field_mutable:pb.PositionSummation.route_account)
  return route_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PositionSummation::release_route_account() {
  // @@protoc_insertion_point(field_release:pb.PositionSummation.route_account)
  
  return route_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PositionSummation::set_allocated_route_account(::std::string* route_account) {
  if (route_account != nullptr) {
    
  } else {
    
  }
  route_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), route_account);
  // @@protoc_insertion_point(field_set_allocated:pb.PositionSummation.route_account)
}

// int32 position = 4;
inline void PositionSummation::clear_position() {
  position_ = 0;
}
inline ::google::protobuf::int32 PositionSummation::position() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.position)
  return position_;
}
inline void PositionSummation::set_position(::google::protobuf::int32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.position)
}

// double amount = 5;
inline void PositionSummation::clear_amount() {
  amount_ = 0;
}
inline double PositionSummation::amount() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.amount)
  return amount_;
}
inline void PositionSummation::set_amount(double value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.amount)
}

// double cost = 6;
inline void PositionSummation::clear_cost() {
  cost_ = 0;
}
inline double PositionSummation::cost() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.cost)
  return cost_;
}
inline void PositionSummation::set_cost(double value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.cost)
}

// int32 frozen = 7;
inline void PositionSummation::clear_frozen() {
  frozen_ = 0;
}
inline ::google::protobuf::int32 PositionSummation::frozen() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.frozen)
  return frozen_;
}
inline void PositionSummation::set_frozen(::google::protobuf::int32 value) {
  
  frozen_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.frozen)
}

// int32 available = 8;
inline void PositionSummation::clear_available() {
  available_ = 0;
}
inline ::google::protobuf::int32 PositionSummation::available() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.available)
  return available_;
}
inline void PositionSummation::set_available(::google::protobuf::int32 value) {
  
  available_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.available)
}

// double position_profit = 9;
inline void PositionSummation::clear_position_profit() {
  position_profit_ = 0;
}
inline double PositionSummation::position_profit() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.position_profit)
  return position_profit_;
}
inline void PositionSummation::set_position_profit(double value) {
  
  position_profit_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.position_profit)
}

// double closed_profit = 10;
inline void PositionSummation::clear_closed_profit() {
  closed_profit_ = 0;
}
inline double PositionSummation::closed_profit() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.closed_profit)
  return closed_profit_;
}
inline void PositionSummation::set_closed_profit(double value) {
  
  closed_profit_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.closed_profit)
}

// double margin = 11;
inline void PositionSummation::clear_margin() {
  margin_ = 0;
}
inline double PositionSummation::margin() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.margin)
  return margin_;
}
inline void PositionSummation::set_margin(double value) {
  
  margin_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.margin)
}

// double frozen_margin = 12;
inline void PositionSummation::clear_frozen_margin() {
  frozen_margin_ = 0;
}
inline double PositionSummation::frozen_margin() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.frozen_margin)
  return frozen_margin_;
}
inline void PositionSummation::set_frozen_margin(double value) {
  
  frozen_margin_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.frozen_margin)
}

// double commission = 13;
inline void PositionSummation::clear_commission() {
  commission_ = 0;
}
inline double PositionSummation::commission() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.commission)
  return commission_;
}
inline void PositionSummation::set_commission(double value) {
  
  commission_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.commission)
}

// double frozen_commission = 14;
inline void PositionSummation::clear_frozen_commission() {
  frozen_commission_ = 0;
}
inline double PositionSummation::frozen_commission() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.frozen_commission)
  return frozen_commission_;
}
inline void PositionSummation::set_frozen_commission(double value) {
  
  frozen_commission_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.frozen_commission)
}

// double interest = 15;
inline void PositionSummation::clear_interest() {
  interest_ = 0;
}
inline double PositionSummation::interest() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.interest)
  return interest_;
}
inline void PositionSummation::set_interest(double value) {
  
  interest_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.interest)
}

// double frozen_interest = 16;
inline void PositionSummation::clear_frozen_interest() {
  frozen_interest_ = 0;
}
inline double PositionSummation::frozen_interest() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.frozen_interest)
  return frozen_interest_;
}
inline void PositionSummation::set_frozen_interest(double value) {
  
  frozen_interest_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.frozen_interest)
}

// double mtm_profit = 17;
inline void PositionSummation::clear_mtm_profit() {
  mtm_profit_ = 0;
}
inline double PositionSummation::mtm_profit() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.mtm_profit)
  return mtm_profit_;
}
inline void PositionSummation::set_mtm_profit(double value) {
  
  mtm_profit_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.mtm_profit)
}

// double cleared_closed_profit = 18;
inline void PositionSummation::clear_cleared_closed_profit() {
  cleared_closed_profit_ = 0;
}
inline double PositionSummation::cleared_closed_profit() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.cleared_closed_profit)
  return cleared_closed_profit_;
}
inline void PositionSummation::set_cleared_closed_profit(double value) {
  
  cleared_closed_profit_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.cleared_closed_profit)
}

// double stamp_tax = 19;
inline void PositionSummation::clear_stamp_tax() {
  stamp_tax_ = 0;
}
inline double PositionSummation::stamp_tax() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.stamp_tax)
  return stamp_tax_;
}
inline void PositionSummation::set_stamp_tax(double value) {
  
  stamp_tax_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.stamp_tax)
}

// double transfer_fee = 20;
inline void PositionSummation::clear_transfer_fee() {
  transfer_fee_ = 0;
}
inline double PositionSummation::transfer_fee() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.transfer_fee)
  return transfer_fee_;
}
inline void PositionSummation::set_transfer_fee(double value) {
  
  transfer_fee_ = value;
  // @@protoc_insertion_point(field_set:pb.PositionSummation.transfer_fee)
}

// string branch = 21;
inline void PositionSummation::clear_branch() {
  branch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PositionSummation::branch() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.branch)
  return branch_.GetNoArena();
}
inline void PositionSummation::set_branch(const ::std::string& value) {
  
  branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.PositionSummation.branch)
}
#if LANG_CXX11
inline void PositionSummation::set_branch(::std::string&& value) {
  
  branch_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.PositionSummation.branch)
}
#endif
inline void PositionSummation::set_branch(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.PositionSummation.branch)
}
inline void PositionSummation::set_branch(const char* value, size_t size) {
  
  branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.PositionSummation.branch)
}
inline ::std::string* PositionSummation::mutable_branch() {
  
  // @@protoc_insertion_point(field_mutable:pb.PositionSummation.branch)
  return branch_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PositionSummation::release_branch() {
  // @@protoc_insertion_point(field_release:pb.PositionSummation.branch)
  
  return branch_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PositionSummation::set_allocated_branch(::std::string* branch) {
  if (branch != nullptr) {
    
  } else {
    
  }
  branch_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), branch);
  // @@protoc_insertion_point(field_set_allocated:pb.PositionSummation.branch)
}

// string branch_name = 22;
inline void PositionSummation::clear_branch_name() {
  branch_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PositionSummation::branch_name() const {
  // @@protoc_insertion_point(field_get:pb.PositionSummation.branch_name)
  return branch_name_.GetNoArena();
}
inline void PositionSummation::set_branch_name(const ::std::string& value) {
  
  branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.PositionSummation.branch_name)
}
#if LANG_CXX11
inline void PositionSummation::set_branch_name(::std::string&& value) {
  
  branch_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.PositionSummation.branch_name)
}
#endif
inline void PositionSummation::set_branch_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.PositionSummation.branch_name)
}
inline void PositionSummation::set_branch_name(const char* value, size_t size) {
  
  branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.PositionSummation.branch_name)
}
inline ::std::string* PositionSummation::mutable_branch_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.PositionSummation.branch_name)
  return branch_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PositionSummation::release_branch_name() {
  // @@protoc_insertion_point(field_release:pb.PositionSummation.branch_name)
  
  return branch_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PositionSummation::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name != nullptr) {
    
  } else {
    
  }
  branch_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), branch_name);
  // @@protoc_insertion_point(field_set_allocated:pb.PositionSummation.branch_name)
}

// -------------------------------------------------------------------

// Position

// .pb.Symbol symbol = 1;
inline bool Position::has_symbol() const {
  return this != internal_default_instance() && symbol_ != nullptr;
}
inline const ::pb::Symbol& Position::symbol() const {
  const ::pb::Symbol* p = symbol_;
  // @@protoc_insertion_point(field_get:pb.Position.symbol)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::Symbol*>(
      &::pb::_Symbol_default_instance_);
}
inline ::pb::Symbol* Position::release_symbol() {
  // @@protoc_insertion_point(field_release:pb.Position.symbol)
  
  ::pb::Symbol* temp = symbol_;
  symbol_ = nullptr;
  return temp;
}
inline ::pb::Symbol* Position::mutable_symbol() {
  
  if (symbol_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::Symbol>(GetArenaNoVirtual());
    symbol_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.Position.symbol)
  return symbol_;
}
inline void Position::set_allocated_symbol(::pb::Symbol* symbol) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(symbol_);
  }
  if (symbol) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      symbol = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, symbol, submessage_arena);
    }
    
  } else {
    
  }
  symbol_ = symbol;
  // @@protoc_insertion_point(field_set_allocated:pb.Position.symbol)
}

// .pb.PositionSummation summation = 2;
inline bool Position::has_summation() const {
  return this != internal_default_instance() && summation_ != nullptr;
}
inline void Position::clear_summation() {
  if (GetArenaNoVirtual() == nullptr && summation_ != nullptr) {
    delete summation_;
  }
  summation_ = nullptr;
}
inline const ::pb::PositionSummation& Position::summation() const {
  const ::pb::PositionSummation* p = summation_;
  // @@protoc_insertion_point(field_get:pb.Position.summation)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::PositionSummation*>(
      &::pb::_PositionSummation_default_instance_);
}
inline ::pb::PositionSummation* Position::release_summation() {
  // @@protoc_insertion_point(field_release:pb.Position.summation)
  
  ::pb::PositionSummation* temp = summation_;
  summation_ = nullptr;
  return temp;
}
inline ::pb::PositionSummation* Position::mutable_summation() {
  
  if (summation_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::PositionSummation>(GetArenaNoVirtual());
    summation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.Position.summation)
  return summation_;
}
inline void Position::set_allocated_summation(::pb::PositionSummation* summation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete summation_;
  }
  if (summation) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      summation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, summation, submessage_arena);
    }
    
  } else {
    
  }
  summation_ = summation;
  // @@protoc_insertion_point(field_set_allocated:pb.Position.summation)
}

// .pb.PositionSummation today_summation = 3;
inline bool Position::has_today_summation() const {
  return this != internal_default_instance() && today_summation_ != nullptr;
}
inline void Position::clear_today_summation() {
  if (GetArenaNoVirtual() == nullptr && today_summation_ != nullptr) {
    delete today_summation_;
  }
  today_summation_ = nullptr;
}
inline const ::pb::PositionSummation& Position::today_summation() const {
  const ::pb::PositionSummation* p = today_summation_;
  // @@protoc_insertion_point(field_get:pb.Position.today_summation)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::PositionSummation*>(
      &::pb::_PositionSummation_default_instance_);
}
inline ::pb::PositionSummation* Position::release_today_summation() {
  // @@protoc_insertion_point(field_release:pb.Position.today_summation)
  
  ::pb::PositionSummation* temp = today_summation_;
  today_summation_ = nullptr;
  return temp;
}
inline ::pb::PositionSummation* Position::mutable_today_summation() {
  
  if (today_summation_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::PositionSummation>(GetArenaNoVirtual());
    today_summation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.Position.today_summation)
  return today_summation_;
}
inline void Position::set_allocated_today_summation(::pb::PositionSummation* today_summation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete today_summation_;
  }
  if (today_summation) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      today_summation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, today_summation, submessage_arena);
    }
    
  } else {
    
  }
  today_summation_ = today_summation;
  // @@protoc_insertion_point(field_set_allocated:pb.Position.today_summation)
}

// .pb.PositionSummation yesterday_summation = 4;
inline bool Position::has_yesterday_summation() const {
  return this != internal_default_instance() && yesterday_summation_ != nullptr;
}
inline void Position::clear_yesterday_summation() {
  if (GetArenaNoVirtual() == nullptr && yesterday_summation_ != nullptr) {
    delete yesterday_summation_;
  }
  yesterday_summation_ = nullptr;
}
inline const ::pb::PositionSummation& Position::yesterday_summation() const {
  const ::pb::PositionSummation* p = yesterday_summation_;
  // @@protoc_insertion_point(field_get:pb.Position.yesterday_summation)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::PositionSummation*>(
      &::pb::_PositionSummation_default_instance_);
}
inline ::pb::PositionSummation* Position::release_yesterday_summation() {
  // @@protoc_insertion_point(field_release:pb.Position.yesterday_summation)
  
  ::pb::PositionSummation* temp = yesterday_summation_;
  yesterday_summation_ = nullptr;
  return temp;
}
inline ::pb::PositionSummation* Position::mutable_yesterday_summation() {
  
  if (yesterday_summation_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::PositionSummation>(GetArenaNoVirtual());
    yesterday_summation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.Position.yesterday_summation)
  return yesterday_summation_;
}
inline void Position::set_allocated_yesterday_summation(::pb::PositionSummation* yesterday_summation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete yesterday_summation_;
  }
  if (yesterday_summation) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      yesterday_summation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, yesterday_summation, submessage_arena);
    }
    
  } else {
    
  }
  yesterday_summation_ = yesterday_summation;
  // @@protoc_insertion_point(field_set_allocated:pb.Position.yesterday_summation)
}

// double pre_settlement_price = 5;
inline void Position::clear_pre_settlement_price() {
  pre_settlement_price_ = 0;
}
inline double Position::pre_settlement_price() const {
  // @@protoc_insertion_point(field_get:pb.Position.pre_settlement_price)
  return pre_settlement_price_;
}
inline void Position::set_pre_settlement_price(double value) {
  
  pre_settlement_price_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.pre_settlement_price)
}

// double settlement_price = 6;
inline void Position::clear_settlement_price() {
  settlement_price_ = 0;
}
inline double Position::settlement_price() const {
  // @@protoc_insertion_point(field_get:pb.Position.settlement_price)
  return settlement_price_;
}
inline void Position::set_settlement_price(double value) {
  
  settlement_price_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.settlement_price)
}

// double last_price = 7;
inline void Position::clear_last_price() {
  last_price_ = 0;
}
inline double Position::last_price() const {
  // @@protoc_insertion_point(field_get:pb.Position.last_price)
  return last_price_;
}
inline void Position::set_last_price(double value) {
  
  last_price_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.last_price)
}

// int32 trading_day = 8;
inline void Position::clear_trading_day() {
  trading_day_ = 0;
}
inline ::google::protobuf::int32 Position::trading_day() const {
  // @@protoc_insertion_point(field_get:pb.Position.trading_day)
  return trading_day_;
}
inline void Position::set_trading_day(::google::protobuf::int32 value) {
  
  trading_day_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.trading_day)
}

// int32 product_type = 9;
inline void Position::clear_product_type() {
  product_type_ = 0;
}
inline ::google::protobuf::int32 Position::product_type() const {
  // @@protoc_insertion_point(field_get:pb.Position.product_type)
  return product_type_;
}
inline void Position::set_product_type(::google::protobuf::int32 value) {
  
  product_type_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.product_type)
}

// int32 settlement_group = 10;
inline void Position::clear_settlement_group() {
  settlement_group_ = 0;
}
inline ::google::protobuf::int32 Position::settlement_group() const {
  // @@protoc_insertion_point(field_get:pb.Position.settlement_group)
  return settlement_group_;
}
inline void Position::set_settlement_group(::google::protobuf::int32 value) {
  
  settlement_group_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.settlement_group)
}

// int32 volume_multiple = 11;
inline void Position::clear_volume_multiple() {
  volume_multiple_ = 0;
}
inline ::google::protobuf::int32 Position::volume_multiple() const {
  // @@protoc_insertion_point(field_get:pb.Position.volume_multiple)
  return volume_multiple_;
}
inline void Position::set_volume_multiple(::google::protobuf::int32 value) {
  
  volume_multiple_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.volume_multiple)
}

// .pb.ProductID product_id = 12;
inline bool Position::has_product_id() const {
  return this != internal_default_instance() && product_id_ != nullptr;
}
inline const ::pb::ProductID& Position::product_id() const {
  const ::pb::ProductID* p = product_id_;
  // @@protoc_insertion_point(field_get:pb.Position.product_id)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::ProductID*>(
      &::pb::_ProductID_default_instance_);
}
inline ::pb::ProductID* Position::release_product_id() {
  // @@protoc_insertion_point(field_release:pb.Position.product_id)
  
  ::pb::ProductID* temp = product_id_;
  product_id_ = nullptr;
  return temp;
}
inline ::pb::ProductID* Position::mutable_product_id() {
  
  if (product_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ProductID>(GetArenaNoVirtual());
    product_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.Position.product_id)
  return product_id_;
}
inline void Position::set_allocated_product_id(::pb::ProductID* product_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(product_id_);
  }
  if (product_id) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      product_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, product_id, submessage_arena);
    }
    
  } else {
    
  }
  product_id_ = product_id;
  // @@protoc_insertion_point(field_set_allocated:pb.Position.product_id)
}

// double price_tick = 13;
inline void Position::clear_price_tick() {
  price_tick_ = 0;
}
inline double Position::price_tick() const {
  // @@protoc_insertion_point(field_get:pb.Position.price_tick)
  return price_tick_;
}
inline void Position::set_price_tick(double value) {
  
  price_tick_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.price_tick)
}

// string symbol_name = 14;
inline void Position::clear_symbol_name() {
  symbol_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Position::symbol_name() const {
  // @@protoc_insertion_point(field_get:pb.Position.symbol_name)
  return symbol_name_.GetNoArena();
}
inline void Position::set_symbol_name(const ::std::string& value) {
  
  symbol_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Position.symbol_name)
}
#if LANG_CXX11
inline void Position::set_symbol_name(::std::string&& value) {
  
  symbol_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Position.symbol_name)
}
#endif
inline void Position::set_symbol_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  symbol_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Position.symbol_name)
}
inline void Position::set_symbol_name(const char* value, size_t size) {
  
  symbol_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Position.symbol_name)
}
inline ::std::string* Position::mutable_symbol_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.Position.symbol_name)
  return symbol_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position::release_symbol_name() {
  // @@protoc_insertion_point(field_release:pb.Position.symbol_name)
  
  return symbol_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_allocated_symbol_name(::std::string* symbol_name) {
  if (symbol_name != nullptr) {
    
  } else {
    
  }
  symbol_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol_name);
  // @@protoc_insertion_point(field_set_allocated:pb.Position.symbol_name)
}

// string account = 15;
inline void Position::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Position::account() const {
  // @@protoc_insertion_point(field_get:pb.Position.account)
  return account_.GetNoArena();
}
inline void Position::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Position.account)
}
#if LANG_CXX11
inline void Position::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Position.account)
}
#endif
inline void Position::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Position.account)
}
inline void Position::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Position.account)
}
inline ::std::string* Position::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:pb.Position.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position::release_account() {
  // @@protoc_insertion_point(field_release:pb.Position.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:pb.Position.account)
}

// string account_name = 16;
inline void Position::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Position::account_name() const {
  // @@protoc_insertion_point(field_get:pb.Position.account_name)
  return account_name_.GetNoArena();
}
inline void Position::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Position.account_name)
}
#if LANG_CXX11
inline void Position::set_account_name(::std::string&& value) {
  
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Position.account_name)
}
#endif
inline void Position::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Position.account_name)
}
inline void Position::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Position.account_name)
}
inline ::std::string* Position::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.Position.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position::release_account_name() {
  // @@protoc_insertion_point(field_release:pb.Position.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_allocated_account_name(::std::string* account_name) {
  if (account_name != nullptr) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:pb.Position.account_name)
}

// int64 company = 17;
inline void Position::clear_company() {
  company_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Position::company() const {
  // @@protoc_insertion_point(field_get:pb.Position.company)
  return company_;
}
inline void Position::set_company(::google::protobuf::int64 value) {
  
  company_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.company)
}

// string branch = 18;
inline void Position::clear_branch() {
  branch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Position::branch() const {
  // @@protoc_insertion_point(field_get:pb.Position.branch)
  return branch_.GetNoArena();
}
inline void Position::set_branch(const ::std::string& value) {
  
  branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Position.branch)
}
#if LANG_CXX11
inline void Position::set_branch(::std::string&& value) {
  
  branch_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Position.branch)
}
#endif
inline void Position::set_branch(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Position.branch)
}
inline void Position::set_branch(const char* value, size_t size) {
  
  branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Position.branch)
}
inline ::std::string* Position::mutable_branch() {
  
  // @@protoc_insertion_point(field_mutable:pb.Position.branch)
  return branch_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position::release_branch() {
  // @@protoc_insertion_point(field_release:pb.Position.branch)
  
  return branch_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_allocated_branch(::std::string* branch) {
  if (branch != nullptr) {
    
  } else {
    
  }
  branch_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), branch);
  // @@protoc_insertion_point(field_set_allocated:pb.Position.branch)
}

// int32 expire_date = 19;
inline void Position::clear_expire_date() {
  expire_date_ = 0;
}
inline ::google::protobuf::int32 Position::expire_date() const {
  // @@protoc_insertion_point(field_get:pb.Position.expire_date)
  return expire_date_;
}
inline void Position::set_expire_date(::google::protobuf::int32 value) {
  
  expire_date_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.expire_date)
}

// string branch_name = 20;
inline void Position::clear_branch_name() {
  branch_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Position::branch_name() const {
  // @@protoc_insertion_point(field_get:pb.Position.branch_name)
  return branch_name_.GetNoArena();
}
inline void Position::set_branch_name(const ::std::string& value) {
  
  branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Position.branch_name)
}
#if LANG_CXX11
inline void Position::set_branch_name(::std::string&& value) {
  
  branch_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Position.branch_name)
}
#endif
inline void Position::set_branch_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Position.branch_name)
}
inline void Position::set_branch_name(const char* value, size_t size) {
  
  branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Position.branch_name)
}
inline ::std::string* Position::mutable_branch_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.Position.branch_name)
  return branch_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position::release_branch_name() {
  // @@protoc_insertion_point(field_release:pb.Position.branch_name)
  
  return branch_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name != nullptr) {
    
  } else {
    
  }
  branch_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), branch_name);
  // @@protoc_insertion_point(field_set_allocated:pb.Position.branch_name)
}

// bool is_close_today_allowed = 21;
inline void Position::clear_is_close_today_allowed() {
  is_close_today_allowed_ = false;
}
inline bool Position::is_close_today_allowed() const {
  // @@protoc_insertion_point(field_get:pb.Position.is_close_today_allowed)
  return is_close_today_allowed_;
}
inline void Position::set_is_close_today_allowed(bool value) {
  
  is_close_today_allowed_ = value;
  // @@protoc_insertion_point(field_set:pb.Position.is_close_today_allowed)
}

// string user = 22;
inline void Position::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Position::user() const {
  // @@protoc_insertion_point(field_get:pb.Position.user)
  return user_.GetNoArena();
}
inline void Position::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Position.user)
}
#if LANG_CXX11
inline void Position::set_user(::std::string&& value) {
  
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Position.user)
}
#endif
inline void Position::set_user(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Position.user)
}
inline void Position::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Position.user)
}
inline ::std::string* Position::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:pb.Position.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position::release_user() {
  // @@protoc_insertion_point(field_release:pb.Position.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_allocated_user(::std::string* user) {
  if (user != nullptr) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:pb.Position.user)
}

// string user_name = 23;
inline void Position::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Position::user_name() const {
  // @@protoc_insertion_point(field_get:pb.Position.user_name)
  return user_name_.GetNoArena();
}
inline void Position::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Position.user_name)
}
#if LANG_CXX11
inline void Position::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Position.user_name)
}
#endif
inline void Position::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Position.user_name)
}
inline void Position::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Position.user_name)
}
inline ::std::string* Position::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.Position.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position::release_user_name() {
  // @@protoc_insertion_point(field_release:pb.Position.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:pb.Position.user_name)
}

// -------------------------------------------------------------------

// PositionList

// repeated .pb.Position list = 1;
inline int PositionList::list_size() const {
  return list_.size();
}
inline void PositionList::clear_list() {
  list_.Clear();
}
inline ::pb::Position* PositionList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:pb.PositionList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Position >*
PositionList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:pb.PositionList.list)
  return &list_;
}
inline const ::pb::Position& PositionList::list(int index) const {
  // @@protoc_insertion_point(field_get:pb.PositionList.list)
  return list_.Get(index);
}
inline ::pb::Position* PositionList::add_list() {
  // @@protoc_insertion_point(field_add:pb.PositionList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Position >&
PositionList::list() const {
  // @@protoc_insertion_point(field_list:pb.PositionList.list)
  return list_;
}

// -------------------------------------------------------------------

// ReqForceClosePosition

// string user = 1;
inline void ReqForceClosePosition::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqForceClosePosition::user() const {
  // @@protoc_insertion_point(field_get:pb.ReqForceClosePosition.user)
  return user_.GetNoArena();
}
inline void ReqForceClosePosition::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ReqForceClosePosition.user)
}
#if LANG_CXX11
inline void ReqForceClosePosition::set_user(::std::string&& value) {
  
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ReqForceClosePosition.user)
}
#endif
inline void ReqForceClosePosition::set_user(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ReqForceClosePosition.user)
}
inline void ReqForceClosePosition::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ReqForceClosePosition.user)
}
inline ::std::string* ReqForceClosePosition::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:pb.ReqForceClosePosition.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqForceClosePosition::release_user() {
  // @@protoc_insertion_point(field_release:pb.ReqForceClosePosition.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqForceClosePosition::set_allocated_user(::std::string* user) {
  if (user != nullptr) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:pb.ReqForceClosePosition.user)
}

// .pb.Symbol symbol = 2;
inline bool ReqForceClosePosition::has_symbol() const {
  return this != internal_default_instance() && symbol_ != nullptr;
}
inline const ::pb::Symbol& ReqForceClosePosition::symbol() const {
  const ::pb::Symbol* p = symbol_;
  // @@protoc_insertion_point(field_get:pb.ReqForceClosePosition.symbol)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::Symbol*>(
      &::pb::_Symbol_default_instance_);
}
inline ::pb::Symbol* ReqForceClosePosition::release_symbol() {
  // @@protoc_insertion_point(field_release:pb.ReqForceClosePosition.symbol)
  
  ::pb::Symbol* temp = symbol_;
  symbol_ = nullptr;
  return temp;
}
inline ::pb::Symbol* ReqForceClosePosition::mutable_symbol() {
  
  if (symbol_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::Symbol>(GetArenaNoVirtual());
    symbol_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.ReqForceClosePosition.symbol)
  return symbol_;
}
inline void ReqForceClosePosition::set_allocated_symbol(::pb::Symbol* symbol) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(symbol_);
  }
  if (symbol) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      symbol = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, symbol, submessage_arena);
    }
    
  } else {
    
  }
  symbol_ = symbol;
  // @@protoc_insertion_point(field_set_allocated:pb.ReqForceClosePosition.symbol)
}

// .pb.OrderDirection direction = 3;
inline void ReqForceClosePosition::clear_direction() {
  direction_ = 0;
}
inline ::pb::OrderDirection ReqForceClosePosition::direction() const {
  // @@protoc_insertion_point(field_get:pb.ReqForceClosePosition.direction)
  return static_cast< ::pb::OrderDirection >(direction_);
}
inline void ReqForceClosePosition::set_direction(::pb::OrderDirection value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:pb.ReqForceClosePosition.direction)
}

// double price = 4;
inline void ReqForceClosePosition::clear_price() {
  price_ = 0;
}
inline double ReqForceClosePosition::price() const {
  // @@protoc_insertion_point(field_get:pb.ReqForceClosePosition.price)
  return price_;
}
inline void ReqForceClosePosition::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:pb.ReqForceClosePosition.price)
}

// int32 volume = 5;
inline void ReqForceClosePosition::clear_volume() {
  volume_ = 0;
}
inline ::google::protobuf::int32 ReqForceClosePosition::volume() const {
  // @@protoc_insertion_point(field_get:pb.ReqForceClosePosition.volume)
  return volume_;
}
inline void ReqForceClosePosition::set_volume(::google::protobuf::int32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:pb.ReqForceClosePosition.volume)
}

// string account = 6;
inline void ReqForceClosePosition::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqForceClosePosition::account() const {
  // @@protoc_insertion_point(field_get:pb.ReqForceClosePosition.account)
  return account_.GetNoArena();
}
inline void ReqForceClosePosition::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ReqForceClosePosition.account)
}
#if LANG_CXX11
inline void ReqForceClosePosition::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ReqForceClosePosition.account)
}
#endif
inline void ReqForceClosePosition::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ReqForceClosePosition.account)
}
inline void ReqForceClosePosition::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ReqForceClosePosition.account)
}
inline ::std::string* ReqForceClosePosition::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:pb.ReqForceClosePosition.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqForceClosePosition::release_account() {
  // @@protoc_insertion_point(field_release:pb.ReqForceClosePosition.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqForceClosePosition::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:pb.ReqForceClosePosition.account)
}

// bool repurchase = 7;
inline void ReqForceClosePosition::clear_repurchase() {
  repurchase_ = false;
}
inline bool ReqForceClosePosition::repurchase() const {
  // @@protoc_insertion_point(field_get:pb.ReqForceClosePosition.repurchase)
  return repurchase_;
}
inline void ReqForceClosePosition::set_repurchase(bool value) {
  
  repurchase_ = value;
  // @@protoc_insertion_point(field_set:pb.ReqForceClosePosition.repurchase)
}

// string comment = 8;
inline void ReqForceClosePosition::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqForceClosePosition::comment() const {
  // @@protoc_insertion_point(field_get:pb.ReqForceClosePosition.comment)
  return comment_.GetNoArena();
}
inline void ReqForceClosePosition::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ReqForceClosePosition.comment)
}
#if LANG_CXX11
inline void ReqForceClosePosition::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ReqForceClosePosition.comment)
}
#endif
inline void ReqForceClosePosition::set_comment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ReqForceClosePosition.comment)
}
inline void ReqForceClosePosition::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ReqForceClosePosition.comment)
}
inline ::std::string* ReqForceClosePosition::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:pb.ReqForceClosePosition.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqForceClosePosition::release_comment() {
  // @@protoc_insertion_point(field_release:pb.ReqForceClosePosition.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqForceClosePosition::set_allocated_comment(::std::string* comment) {
  if (comment != nullptr) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:pb.ReqForceClosePosition.comment)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_position_2eproto
