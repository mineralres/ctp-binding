// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: binding.proto

#include "binding.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_binding_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CtpReqTransfer_binding_2eproto;
namespace pb {
class CtpReqQryAccountRegisterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpReqQryAccountRegister> _instance;
} _CtpReqQryAccountRegister_default_instance_;
class CtpRspQryAccountRegisterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpRspQryAccountRegister> _instance;
} _CtpRspQryAccountRegister_default_instance_;
class CtpReqAuthencateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpReqAuthencate> _instance;
} _CtpReqAuthencate_default_instance_;
class CtpRspAuthencateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpRspAuthencate> _instance;
} _CtpRspAuthencate_default_instance_;
class CtpReqUserLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpReqUserLogin> _instance;
} _CtpReqUserLogin_default_instance_;
class CtpRspUserLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpRspUserLogin> _instance;
} _CtpRspUserLogin_default_instance_;
class CtpReqConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpReqConnect> _instance;
} _CtpReqConnect_default_instance_;
class CtpOnFrontConnectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpOnFrontConnected> _instance;
} _CtpOnFrontConnected_default_instance_;
class CtpOnFrontDisconnectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpOnFrontDisconnected> _instance;
} _CtpOnFrontDisconnected_default_instance_;
class CtpReqSettlementInfoConfirmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpReqSettlementInfoConfirm> _instance;
} _CtpReqSettlementInfoConfirm_default_instance_;
class CtpOnRspSettlementInfoConfirmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpOnRspSettlementInfoConfirm> _instance;
} _CtpOnRspSettlementInfoConfirm_default_instance_;
class CtpReqQryInvestorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpReqQryInvestor> _instance;
} _CtpReqQryInvestor_default_instance_;
class CtpRspQryInvestorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpRspQryInvestor> _instance;
} _CtpRspQryInvestor_default_instance_;
class CtpReqQryTransferBankDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpReqQryTransferBank> _instance;
} _CtpReqQryTransferBank_default_instance_;
class CtpRspQryTransferBankDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpRspQryTransferBank> _instance;
} _CtpRspQryTransferBank_default_instance_;
class CtpReqTransferDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpReqTransfer> _instance;
} _CtpReqTransfer_default_instance_;
class CtpRspTransferDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpRspTransfer> _instance;
} _CtpRspTransfer_default_instance_;
}  // namespace pb
static void InitDefaultsCtpReqQryAccountRegister_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpReqQryAccountRegister_default_instance_;
    new (ptr) ::pb::CtpReqQryAccountRegister();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpReqQryAccountRegister::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpReqQryAccountRegister_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpReqQryAccountRegister_binding_2eproto}, {}};

static void InitDefaultsCtpRspQryAccountRegister_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpRspQryAccountRegister_default_instance_;
    new (ptr) ::pb::CtpRspQryAccountRegister();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpRspQryAccountRegister::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpRspQryAccountRegister_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpRspQryAccountRegister_binding_2eproto}, {}};

static void InitDefaultsCtpReqAuthencate_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpReqAuthencate_default_instance_;
    new (ptr) ::pb::CtpReqAuthencate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpReqAuthencate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpReqAuthencate_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpReqAuthencate_binding_2eproto}, {}};

static void InitDefaultsCtpRspAuthencate_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpRspAuthencate_default_instance_;
    new (ptr) ::pb::CtpRspAuthencate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpRspAuthencate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpRspAuthencate_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpRspAuthencate_binding_2eproto}, {}};

static void InitDefaultsCtpReqUserLogin_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpReqUserLogin_default_instance_;
    new (ptr) ::pb::CtpReqUserLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpReqUserLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpReqUserLogin_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpReqUserLogin_binding_2eproto}, {}};

static void InitDefaultsCtpRspUserLogin_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpRspUserLogin_default_instance_;
    new (ptr) ::pb::CtpRspUserLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpRspUserLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpRspUserLogin_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpRspUserLogin_binding_2eproto}, {}};

static void InitDefaultsCtpReqConnect_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpReqConnect_default_instance_;
    new (ptr) ::pb::CtpReqConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpReqConnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpReqConnect_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpReqConnect_binding_2eproto}, {}};

static void InitDefaultsCtpOnFrontConnected_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpOnFrontConnected_default_instance_;
    new (ptr) ::pb::CtpOnFrontConnected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpOnFrontConnected::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpOnFrontConnected_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpOnFrontConnected_binding_2eproto}, {}};

static void InitDefaultsCtpOnFrontDisconnected_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpOnFrontDisconnected_default_instance_;
    new (ptr) ::pb::CtpOnFrontDisconnected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpOnFrontDisconnected::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpOnFrontDisconnected_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpOnFrontDisconnected_binding_2eproto}, {}};

static void InitDefaultsCtpReqSettlementInfoConfirm_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpReqSettlementInfoConfirm_default_instance_;
    new (ptr) ::pb::CtpReqSettlementInfoConfirm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpReqSettlementInfoConfirm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpReqSettlementInfoConfirm_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpReqSettlementInfoConfirm_binding_2eproto}, {}};

static void InitDefaultsCtpOnRspSettlementInfoConfirm_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpOnRspSettlementInfoConfirm_default_instance_;
    new (ptr) ::pb::CtpOnRspSettlementInfoConfirm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpOnRspSettlementInfoConfirm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpOnRspSettlementInfoConfirm_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpOnRspSettlementInfoConfirm_binding_2eproto}, {}};

static void InitDefaultsCtpReqQryInvestor_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpReqQryInvestor_default_instance_;
    new (ptr) ::pb::CtpReqQryInvestor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpReqQryInvestor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpReqQryInvestor_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpReqQryInvestor_binding_2eproto}, {}};

static void InitDefaultsCtpRspQryInvestor_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpRspQryInvestor_default_instance_;
    new (ptr) ::pb::CtpRspQryInvestor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpRspQryInvestor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpRspQryInvestor_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpRspQryInvestor_binding_2eproto}, {}};

static void InitDefaultsCtpReqQryTransferBank_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpReqQryTransferBank_default_instance_;
    new (ptr) ::pb::CtpReqQryTransferBank();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpReqQryTransferBank::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpReqQryTransferBank_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpReqQryTransferBank_binding_2eproto}, {}};

static void InitDefaultsCtpRspQryTransferBank_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpRspQryTransferBank_default_instance_;
    new (ptr) ::pb::CtpRspQryTransferBank();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpRspQryTransferBank::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpRspQryTransferBank_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpRspQryTransferBank_binding_2eproto}, {}};

static void InitDefaultsCtpReqTransfer_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpReqTransfer_default_instance_;
    new (ptr) ::pb::CtpReqTransfer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpReqTransfer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpReqTransfer_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpReqTransfer_binding_2eproto}, {}};

static void InitDefaultsCtpRspTransfer_binding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CtpRspTransfer_default_instance_;
    new (ptr) ::pb::CtpRspTransfer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CtpRspTransfer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CtpRspTransfer_binding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCtpRspTransfer_binding_2eproto}, {
      &scc_info_CtpReqTransfer_binding_2eproto.base,}};

void InitDefaults_binding_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CtpReqQryAccountRegister_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpRspQryAccountRegister_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpReqAuthencate_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpRspAuthencate_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpReqUserLogin_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpRspUserLogin_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpReqConnect_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpOnFrontConnected_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpOnFrontDisconnected_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpReqSettlementInfoConfirm_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpOnRspSettlementInfoConfirm_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpReqQryInvestor_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpRspQryInvestor_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpReqQryTransferBank_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpRspQryTransferBank_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpReqTransfer_binding_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpRspTransfer_binding_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_binding_2eproto[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_binding_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_binding_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_binding_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqQryAccountRegister, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqQryAccountRegister, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqQryAccountRegister, account_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqQryAccountRegister, bank_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqQryAccountRegister, bank_branch_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqQryAccountRegister, currency_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, error_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, error_msg_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, is_last_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, trading_day_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, bank_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, bank_branch_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, bank_account_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, broker_branch_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, account_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, id_card_type_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, identified_card_no_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, customer_name_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, currency_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, open_or_destory_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, reg_date_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, out_date_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, tid_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, cust_type_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, bank_acc_type_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryAccountRegister, long_customer_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqAuthencate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqAuthencate, auth_code_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqAuthencate, product_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspAuthencate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspAuthencate, error_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspAuthencate, error_msg_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspAuthencate, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspAuthencate, is_last_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspAuthencate, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspAuthencate, user_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspAuthencate, user_product_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqUserLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqUserLogin, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqUserLogin, account_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqUserLogin, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, error_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, error_msg_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, is_last_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, trading_day_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, login_time_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, user_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, system_name_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, front_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, session_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, max_order_ref_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, shfe_time_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, dce_time_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, czce_time_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, cffex_time_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspUserLogin, ine_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqConnect, address_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqConnect, account_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqConnect, directory_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnFrontConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnFrontDisconnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqSettlementInfoConfirm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqSettlementInfoConfirm, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqSettlementInfoConfirm, investor_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, error_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, error_msg_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, is_last_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, investor_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, confirm_date_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, confirm_time_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, settlement_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, account_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpOnRspSettlementInfoConfirm, currency_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqQryInvestor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, error_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, error_msg_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, is_last_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, investor_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, investor_group_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, investor_name_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, identified_card_type_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, identified_card_no_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, is_active_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, telphone_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, address_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, open_date_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryInvestor, mobile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqQryTransferBank, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqQryTransferBank, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqQryTransferBank, investor_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryTransferBank, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryTransferBank, error_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryTransferBank, error_msg_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryTransferBank, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryTransferBank, is_last_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryTransferBank, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryTransferBank, bank_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryTransferBank, bank_branch_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspQryTransferBank, bank_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, trade_code_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, bank_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, bank_branch_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, broker_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, broker_branch_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, trade_date_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, trade_time_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, bank_serial_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, trading_day_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, plate_serieal_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, last_fragment_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, session_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, customer_name_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, id_card_type_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, identified_card_no_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, cust_type_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, bank_account_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, bank_password_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, account_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, password_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, install_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, future_serial_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, user_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, verify_cert_no_flag_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, currency_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, trade_amount_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, future_fetch_amount_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, fee_pay_flag_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, cust_fee_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, broker_fee_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, message_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, digest_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, bank_acc_type_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, device_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, bank_secu_acc_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, bank_pwd_flag_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, secu_pwd_flag_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, oper_no_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, tid_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, transfer_status_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpReqTransfer, long_customer_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspTransfer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspTransfer, error_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspTransfer, error_msg_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspTransfer, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspTransfer, is_last_),
  PROTOBUF_FIELD_OFFSET(::pb::CtpRspTransfer, req_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::CtpReqQryAccountRegister)},
  { 10, -1, sizeof(::pb::CtpRspQryAccountRegister)},
  { 37, -1, sizeof(::pb::CtpReqAuthencate)},
  { 44, -1, sizeof(::pb::CtpRspAuthencate)},
  { 56, -1, sizeof(::pb::CtpReqUserLogin)},
  { 64, -1, sizeof(::pb::CtpRspUserLogin)},
  { 86, -1, sizeof(::pb::CtpReqConnect)},
  { 94, -1, sizeof(::pb::CtpOnFrontConnected)},
  { 99, -1, sizeof(::pb::CtpOnFrontDisconnected)},
  { 104, -1, sizeof(::pb::CtpReqSettlementInfoConfirm)},
  { 111, -1, sizeof(::pb::CtpOnRspSettlementInfoConfirm)},
  { 127, -1, sizeof(::pb::CtpReqQryInvestor)},
  { 132, -1, sizeof(::pb::CtpRspQryInvestor)},
  { 152, -1, sizeof(::pb::CtpReqQryTransferBank)},
  { 159, -1, sizeof(::pb::CtpRspQryTransferBank)},
  { 172, -1, sizeof(::pb::CtpReqTransfer)},
  { 219, -1, sizeof(::pb::CtpRspTransfer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpReqQryAccountRegister_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpRspQryAccountRegister_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpReqAuthencate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpRspAuthencate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpReqUserLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpRspUserLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpReqConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpOnFrontConnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpOnFrontDisconnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpReqSettlementInfoConfirm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpOnRspSettlementInfoConfirm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpReqQryInvestor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpRspQryInvestor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpReqQryTransferBank_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpRspQryTransferBank_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpReqTransfer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CtpRspTransfer_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_binding_2eproto = {
  {}, AddDescriptors_binding_2eproto, "binding.proto", schemas,
  file_default_instances, TableStruct_binding_2eproto::offsets,
  file_level_metadata_binding_2eproto, 17, file_level_enum_descriptors_binding_2eproto, file_level_service_descriptors_binding_2eproto,
};

const char descriptor_table_protodef_binding_2eproto[] =
  "\n\rbinding.proto\022\002pb\"\177\n\030CtpReqQryAccountR"
  "egister\022\021\n\tbroker_id\030\001 \001(\t\022\022\n\naccount_id"
  "\030\002 \001(\t\022\017\n\007bank_id\030\003 \001(\t\022\026\n\016bank_branch_i"
  "d\030\004 \001(\t\022\023\n\013currency_id\030\005 \001(\t\"\347\003\n\030CtpRspQ"
  "ryAccountRegister\022\020\n\010error_id\030\001 \001(\005\022\021\n\te"
  "rror_msg\030\002 \001(\t\022\022\n\nrequest_id\030\003 \001(\005\022\017\n\007is"
  "_last\030\004 \001(\010\022\023\n\013trading_day\030\005 \001(\t\022\017\n\007bank"
  "_id\030\006 \001(\t\022\026\n\016bank_branch_id\030\007 \001(\t\022\024\n\014ban"
  "k_account\030\010 \001(\t\022\021\n\tbroker_id\030\t \001(\t\022\030\n\020br"
  "oker_branch_id\030\n \001(\t\022\022\n\naccount_id\030\013 \001(\t"
  "\022\024\n\014id_card_type\030\014 \001(\005\022\032\n\022identified_car"
  "d_no\030\r \001(\t\022\025\n\rcustomer_name\030\016 \001(\t\022\023\n\013cur"
  "rency_id\030\017 \001(\t\022\027\n\017open_or_destory\030\020 \001(\005\022"
  "\020\n\010reg_date\030\021 \001(\t\022\020\n\010out_date\030\022 \001(\t\022\013\n\003t"
  "id\030\023 \001(\005\022\021\n\tcust_type\030\024 \001(\005\022\025\n\rbank_acc_"
  "type\030\025 \001(\005\022\032\n\022long_customer_name\030\026 \001(\t\"6"
  "\n\020CtpReqAuthencate\022\021\n\tauth_code\030\001 \001(\t\022\017\n"
  "\007product\030\002 \001(\t\"\233\001\n\020CtpRspAuthencate\022\020\n\010e"
  "rror_id\030\001 \001(\005\022\021\n\terror_msg\030\002 \001(\t\022\022\n\nrequ"
  "est_id\030\003 \001(\005\022\017\n\007is_last\030\004 \001(\010\022\021\n\tbroker_"
  "id\030\005 \001(\t\022\017\n\007user_id\030\006 \001(\t\022\031\n\021user_produc"
  "t_info\030\007 \001(\t\"G\n\017CtpReqUserLogin\022\021\n\tbroke"
  "r_id\030\001 \001(\t\022\017\n\007account\030\002 \001(\t\022\020\n\010password\030"
  "\003 \001(\t\"\330\002\n\017CtpRspUserLogin\022\020\n\010error_id\030\001 "
  "\001(\005\022\021\n\terror_msg\030\002 \001(\t\022\022\n\nrequest_id\030\003 \001"
  "(\005\022\017\n\007is_last\030\004 \001(\010\022\023\n\013trading_day\030\005 \001(\t"
  "\022\022\n\nlogin_time\030\006 \001(\t\022\021\n\tbroker_id\030\007 \001(\t\022"
  "\017\n\007user_id\030\010 \001(\t\022\023\n\013system_name\030\t \001(\t\022\020\n"
  "\010front_id\030\n \001(\005\022\022\n\nsession_id\030\013 \001(\005\022\025\n\rm"
  "ax_order_ref\030\014 \001(\t\022\021\n\tshfe_time\030\r \001(\t\022\020\n"
  "\010dce_time\030\016 \001(\t\022\021\n\tczce_time\030\017 \001(\t\022\022\n\ncf"
  "fex_time\030\020 \001(\t\022\020\n\010ine_time\030\021 \001(\t\"D\n\rCtpR"
  "eqConnect\022\017\n\007address\030\001 \001(\t\022\017\n\007account\030\002 "
  "\001(\t\022\021\n\tdirectory\030\003 \001(\t\"\025\n\023CtpOnFrontConn"
  "ected\"\030\n\026CtpOnFrontDisconnected\"E\n\033CtpRe"
  "qSettlementInfoConfirm\022\021\n\tbroker_id\030\001 \001("
  "\t\022\023\n\013investor_id\030\002 \001(\t\"\375\001\n\035CtpOnRspSettl"
  "ementInfoConfirm\022\020\n\010error_id\030\001 \001(\005\022\021\n\ter"
  "ror_msg\030\002 \001(\t\022\022\n\nrequest_id\030\003 \001(\005\022\017\n\007is_"
  "last\030\004 \001(\010\022\021\n\tbroker_id\030\005 \001(\t\022\023\n\013investo"
  "r_id\030\006 \001(\t\022\024\n\014confirm_date\030\007 \001(\t\022\024\n\014conf"
  "irm_time\030\010 \001(\t\022\025\n\rsettlement_id\030\t \001(\005\022\022\n"
  "\naccount_id\030\n \001(\t\022\023\n\013currency_id\030\013 \001(\t\"\023"
  "\n\021CtpReqQryInvestor\"\312\002\n\021CtpRspQryInvesto"
  "r\022\020\n\010error_id\030\001 \001(\005\022\021\n\terror_msg\030\002 \001(\t\022\022"
  "\n\nrequest_id\030\003 \001(\005\022\017\n\007is_last\030\004 \001(\010\022\023\n\013i"
  "nvestor_id\030\005 \001(\t\022\021\n\tbroker_id\030\006 \001(\t\022\031\n\021i"
  "nvestor_group_id\030\007 \001(\t\022\025\n\rinvestor_name\030"
  "\010 \001(\t\022\034\n\024identified_card_type\030\t \001(\005\022\032\n\022i"
  "dentified_card_no\030\n \001(\t\022\021\n\tis_active\030\013 \001"
  "(\010\022\020\n\010telphone\030\014 \001(\t\022\017\n\007address\030\r \001(\t\022\021\n"
  "\topen_date\030\016 \001(\t\022\016\n\006mobile\030\017 \001(\t\"\?\n\025CtpR"
  "eqQryTransferBank\022\021\n\tbroker_id\030\001 \001(\t\022\023\n\013"
  "investor_id\030\002 \001(\t\"\260\001\n\025CtpRspQryTransferB"
  "ank\022\020\n\010error_id\030\001 \001(\005\022\021\n\terror_msg\030\002 \001(\t"
  "\022\022\n\nrequest_id\030\003 \001(\005\022\017\n\007is_last\030\004 \001(\010\022\021\n"
  "\tbroker_id\030\005 \001(\t\022\017\n\007bank_id\030\006 \001(\t\022\026\n\016ban"
  "k_branch_id\030\007 \001(\t\022\021\n\tbank_name\030\010 \001(\t\"\221\007\n"
  "\016CtpReqTransfer\022\022\n\ntrade_code\030\001 \001(\t\022\017\n\007b"
  "ank_id\030\002 \001(\t\022\026\n\016bank_branch_id\030\003 \001(\t\022\021\n\t"
  "broker_id\030\004 \001(\t\022\030\n\020broker_branch_id\030\005 \001("
  "\t\022\022\n\ntrade_date\030\006 \001(\t\022\022\n\ntrade_time\030\007 \001("
  "\t\022\023\n\013bank_serial\030\010 \001(\t\022\023\n\013trading_day\030\t "
  "\001(\t\022\025\n\rplate_serieal\030\n \001(\005\022\025\n\rlast_fragm"
  "ent\030\013 \001(\t\022\022\n\nsession_id\030\014 \001(\005\022\025\n\rcustome"
  "r_name\030\r \001(\t\022\024\n\014id_card_type\030\016 \001(\005\022\032\n\022id"
  "entified_card_no\030\017 \001(\t\022\021\n\tcust_type\030\020 \001("
  "\t\022\024\n\014bank_account\030\021 \001(\t\022\025\n\rbank_password"
  "\030\022 \001(\t\022\022\n\naccount_id\030\023 \001(\t\022\020\n\010password\030\024"
  " \001(\t\022\022\n\ninstall_id\030\025 \001(\005\022\025\n\rfuture_seria"
  "l\030\026 \001(\005\022\017\n\007user_id\030\027 \001(\t\022\033\n\023verify_cert_"
  "no_flag\030\030 \001(\t\022\023\n\013currency_id\030\031 \001(\t\022\024\n\014tr"
  "ade_amount\030\032 \001(\001\022\033\n\023future_fetch_amount\030"
  "\033 \001(\001\022\024\n\014fee_pay_flag\030\034 \001(\005\022\020\n\010cust_fee\030"
  "\035 \001(\001\022\022\n\nbroker_fee\030\036 \001(\001\022\017\n\007message\030\037 \001"
  "(\t\022\016\n\006digest\030  \001(\t\022\025\n\rbank_acc_type\030! \001("
  "\005\022\021\n\tdevice_id\030\" \001(\t\022\025\n\rbank_secu_acc\030# "
  "\001(\t\022\025\n\rbank_pwd_flag\030$ \001(\t\022\025\n\rsecu_pwd_f"
  "lag\030% \001(\t\022\017\n\007oper_no\030& \001(\t\022\022\n\nrequest_id"
  "\030\' \001(\005\022\013\n\003tid\030( \001(\005\022\027\n\017transfer_status\030)"
  " \001(\t\022\032\n\022long_customer_name\030* \001(\t\"{\n\016CtpR"
  "spTransfer\022\020\n\010error_id\030\001 \001(\005\022\021\n\terror_ms"
  "g\030\002 \001(\t\022\022\n\nrequest_id\030\003 \001(\005\022\017\n\007is_last\030\004"
  " \001(\010\022\037\n\003req\030\005 \001(\0132\022.pb.CtpReqTransfer*\351\t"
  "\n\017BindingCallType\022\022\n\016CTP_CREATE_API\020\000\022\022\n"
  "\016CTP_USER_LOGIN\020\001\022\031\n\025CTP_ON_RSP_USER_LOG"
  "IN\020\002\022\024\n\020CTP_ON_RTN_ORDER\020\003\022\024\n\020CTP_ON_RTN"
  "_TRADE\020\004\022\033\n\027CTP_ON_RTN_CANCEL_ORDER\020\005\022\022\n"
  "\016CTP_ON_RTN_MTR\020\006\022\027\n\023CTP_ON_DISCONNECTED"
  "\020\007\022\026\n\022CTP_REQ_SEND_ORDER\020\010\022\030\n\024CTP_REQ_CA"
  "NCEL_ORDER\020\t\022\025\n\021CTP_MD_CREATE_API\020\n\022\025\n\021C"
  "TP_MD_USER_LOGIN\020\013\022\034\n\030CTP_MD_ON_RSP_USER"
  "_LOGIN\020\014\022\024\n\020CTP_MD_SUBSCRIBE\020\r\022\033\n\027CTP_MD"
  "_ON_RSP_SUBSCRIBE\020\016\022\025\n\021CTP_MD_ON_RTN_MDS"
  "\020\017\022\026\n\022CTP_MD_UNSUBSCRIBE\020\020\022\032\n\026CTP_MD_ON_"
  "RSP_UNSCRIBE\020\021\022\016\n\nCTP_ON_LOG\020\022\022\035\n\031CTP_QU"
  "ERY_TRADING_ACCOUNT\020\023\022\035\n\031CTP_QUERY_POSIT"
  "ION_DETAIL\020\024\022!\n\035CTP_RSP_QUERY_TRADING_AC"
  "COUNT\020\025\022!\n\035CTP_RSP_QUERY_POSITION_DETAIL"
  "\020\026\022\022\n\016CTP_DELETE_API\020\027\022\025\n\021CTP_MD_DELETE_"
  "API\020\030\022\031\n\025CTP_QUERY_MARGIN_RATE\020\031\022\035\n\031CTP_"
  "RSP_QUERY_MARGIN_RATE\020\032\022\035\n\031CTP_QUERY_COM"
  "MISSION_RATE\020\033\022!\n\035CTP_RSP_QUERY_COMMISSI"
  "ON_RATE\020\034\022\023\n\017CTP_REQ_CONNECT\020\035\022\032\n\026CTP_ON"
  "_FRONT_CONNECTED\020\036\022\035\n\031CTP_ON_FRONT_DISCO"
  "NNECTED\020\037\022#\n\037CTP_REQ_SETTLEMENT_INFO_CON"
  "FIRM\020!\022#\n\037CTP_RSP_SETTLEMENT_INFO_CONFIR"
  "M\020\"\022\032\n\026CTP_REQ_QUERY_INVESTOR\020#\022\032\n\026CTP_R"
  "SP_QUERY_INVESTOR\020$\022\037\n\033CTP_REQ_QUERY_TRA"
  "NSFER_BANK\020)\022\037\n\033CTP_RSP_QUERY_TRANSFER_B"
  "ANK\020*\022\024\n\020CTP_REQ_TRANSFER\020+\022\024\n\020CTP_RSP_T"
  "RANSFER\020,\022\026\n\022CTP_REQ_USER_LOGIN\020-\022\026\n\022CTP"
  "_RSP_USER_LOGIN\020.\022\030\n\024CTP_REQ_AUTHENTICAT"
  "E\020/\022\030\n\024CTP_RSP_AUTHENTICATE\0200\022 \n\034CTP_REQ"
  "_QRY_ACCOUNT_REGISTER\0201\022 \n\034CTP_RSP_QRY_A"
  "CCOUNT_REGISTER\0202b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_binding_2eproto = {
  false, InitDefaults_binding_2eproto, 
  descriptor_table_protodef_binding_2eproto,
  "binding.proto", &assign_descriptors_table_binding_2eproto, 4625,
};

void AddDescriptors_binding_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_binding_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_binding_2eproto = []() { AddDescriptors_binding_2eproto(); return true; }();
namespace pb {
const ::google::protobuf::EnumDescriptor* BindingCallType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_binding_2eproto);
  return file_level_enum_descriptors_binding_2eproto[0];
}
bool BindingCallType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CtpReqQryAccountRegister::InitAsDefaultInstance() {
}
class CtpReqQryAccountRegister::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpReqQryAccountRegister::kBrokerIdFieldNumber;
const int CtpReqQryAccountRegister::kAccountIdFieldNumber;
const int CtpReqQryAccountRegister::kBankIdFieldNumber;
const int CtpReqQryAccountRegister::kBankBranchIdFieldNumber;
const int CtpReqQryAccountRegister::kCurrencyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpReqQryAccountRegister::CtpReqQryAccountRegister()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpReqQryAccountRegister)
}
CtpReqQryAccountRegister::CtpReqQryAccountRegister(const CtpReqQryAccountRegister& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  bank_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_id().size() > 0) {
    bank_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_id_);
  }
  bank_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_branch_id().size() > 0) {
    bank_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_branch_id_);
  }
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currency_id().size() > 0) {
    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.CtpReqQryAccountRegister)
}

void CtpReqQryAccountRegister::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpReqQryAccountRegister_binding_2eproto.base);
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CtpReqQryAccountRegister::~CtpReqQryAccountRegister() {
  // @@protoc_insertion_point(destructor:pb.CtpReqQryAccountRegister)
  SharedDtor();
}

void CtpReqQryAccountRegister::SharedDtor() {
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpReqQryAccountRegister::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpReqQryAccountRegister& CtpReqQryAccountRegister::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpReqQryAccountRegister_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpReqQryAccountRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpReqQryAccountRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpReqQryAccountRegister::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpReqQryAccountRegister*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string broker_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqQryAccountRegister.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string account_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqQryAccountRegister.account_id");
        object = msg->mutable_account_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqQryAccountRegister.bank_id");
        object = msg->mutable_bank_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_branch_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqQryAccountRegister.bank_branch_id");
        object = msg->mutable_bank_branch_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string currency_id = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqQryAccountRegister.currency_id");
        object = msg->mutable_currency_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpReqQryAccountRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpReqQryAccountRegister)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string broker_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqQryAccountRegister.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqQryAccountRegister.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_id().data(), static_cast<int>(this->bank_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqQryAccountRegister.bank_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_branch_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_branch_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqQryAccountRegister.bank_branch_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currency_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency_id().data(), static_cast<int>(this->currency_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqQryAccountRegister.currency_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpReqQryAccountRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpReqQryAccountRegister)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpReqQryAccountRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpReqQryAccountRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryAccountRegister.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->broker_id(), output);
  }

  // string account_id = 2;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryAccountRegister.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_id(), output);
  }

  // string bank_id = 3;
  if (this->bank_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_id().data(), static_cast<int>(this->bank_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryAccountRegister.bank_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bank_id(), output);
  }

  // string bank_branch_id = 4;
  if (this->bank_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryAccountRegister.bank_branch_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bank_branch_id(), output);
  }

  // string currency_id = 5;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryAccountRegister.currency_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->currency_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpReqQryAccountRegister)
}

::google::protobuf::uint8* CtpReqQryAccountRegister::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpReqQryAccountRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryAccountRegister.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->broker_id(), target);
  }

  // string account_id = 2;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryAccountRegister.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_id(), target);
  }

  // string bank_id = 3;
  if (this->bank_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_id().data(), static_cast<int>(this->bank_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryAccountRegister.bank_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bank_id(), target);
  }

  // string bank_branch_id = 4;
  if (this->bank_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryAccountRegister.bank_branch_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bank_branch_id(), target);
  }

  // string currency_id = 5;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryAccountRegister.currency_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->currency_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpReqQryAccountRegister)
  return target;
}

size_t CtpReqQryAccountRegister::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpReqQryAccountRegister)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string account_id = 2;
  if (this->account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string bank_id = 3;
  if (this->bank_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_id());
  }

  // string bank_branch_id = 4;
  if (this->bank_branch_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_branch_id());
  }

  // string currency_id = 5;
  if (this->currency_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpReqQryAccountRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpReqQryAccountRegister)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpReqQryAccountRegister* source =
      ::google::protobuf::DynamicCastToGenerated<CtpReqQryAccountRegister>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpReqQryAccountRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpReqQryAccountRegister)
    MergeFrom(*source);
  }
}

void CtpReqQryAccountRegister::MergeFrom(const CtpReqQryAccountRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpReqQryAccountRegister)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.bank_id().size() > 0) {

    bank_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_id_);
  }
  if (from.bank_branch_id().size() > 0) {

    bank_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_branch_id_);
  }
  if (from.currency_id().size() > 0) {

    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
}

void CtpReqQryAccountRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpReqQryAccountRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpReqQryAccountRegister::CopyFrom(const CtpReqQryAccountRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpReqQryAccountRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpReqQryAccountRegister::IsInitialized() const {
  return true;
}

void CtpReqQryAccountRegister::Swap(CtpReqQryAccountRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpReqQryAccountRegister::InternalSwap(CtpReqQryAccountRegister* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_id_.Swap(&other->bank_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_branch_id_.Swap(&other->bank_branch_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_id_.Swap(&other->currency_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CtpReqQryAccountRegister::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpRspQryAccountRegister::InitAsDefaultInstance() {
}
class CtpRspQryAccountRegister::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpRspQryAccountRegister::kErrorIdFieldNumber;
const int CtpRspQryAccountRegister::kErrorMsgFieldNumber;
const int CtpRspQryAccountRegister::kRequestIdFieldNumber;
const int CtpRspQryAccountRegister::kIsLastFieldNumber;
const int CtpRspQryAccountRegister::kTradingDayFieldNumber;
const int CtpRspQryAccountRegister::kBankIdFieldNumber;
const int CtpRspQryAccountRegister::kBankBranchIdFieldNumber;
const int CtpRspQryAccountRegister::kBankAccountFieldNumber;
const int CtpRspQryAccountRegister::kBrokerIdFieldNumber;
const int CtpRspQryAccountRegister::kBrokerBranchIdFieldNumber;
const int CtpRspQryAccountRegister::kAccountIdFieldNumber;
const int CtpRspQryAccountRegister::kIdCardTypeFieldNumber;
const int CtpRspQryAccountRegister::kIdentifiedCardNoFieldNumber;
const int CtpRspQryAccountRegister::kCustomerNameFieldNumber;
const int CtpRspQryAccountRegister::kCurrencyIdFieldNumber;
const int CtpRspQryAccountRegister::kOpenOrDestoryFieldNumber;
const int CtpRspQryAccountRegister::kRegDateFieldNumber;
const int CtpRspQryAccountRegister::kOutDateFieldNumber;
const int CtpRspQryAccountRegister::kTidFieldNumber;
const int CtpRspQryAccountRegister::kCustTypeFieldNumber;
const int CtpRspQryAccountRegister::kBankAccTypeFieldNumber;
const int CtpRspQryAccountRegister::kLongCustomerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpRspQryAccountRegister::CtpRspQryAccountRegister()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpRspQryAccountRegister)
}
CtpRspQryAccountRegister::CtpRspQryAccountRegister(const CtpRspQryAccountRegister& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_msg().size() > 0) {
    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  trading_day_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trading_day().size() > 0) {
    trading_day_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trading_day_);
  }
  bank_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_id().size() > 0) {
    bank_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_id_);
  }
  bank_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_branch_id().size() > 0) {
    bank_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_branch_id_);
  }
  bank_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_account().size() > 0) {
    bank_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_account_);
  }
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  broker_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_branch_id().size() > 0) {
    broker_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_branch_id_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  identified_card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identified_card_no().size() > 0) {
    identified_card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identified_card_no_);
  }
  customer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_name().size() > 0) {
    customer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_name_);
  }
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currency_id().size() > 0) {
    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  reg_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reg_date().size() > 0) {
    reg_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reg_date_);
  }
  out_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.out_date().size() > 0) {
    out_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_date_);
  }
  long_customer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.long_customer_name().size() > 0) {
    long_customer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_customer_name_);
  }
  ::memcpy(&error_id_, &from.error_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&bank_acc_type_) -
    reinterpret_cast<char*>(&error_id_)) + sizeof(bank_acc_type_));
  // @@protoc_insertion_point(copy_constructor:pb.CtpRspQryAccountRegister)
}

void CtpRspQryAccountRegister::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpRspQryAccountRegister_binding_2eproto.base);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trading_day_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reg_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_customer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bank_acc_type_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(bank_acc_type_));
}

CtpRspQryAccountRegister::~CtpRspQryAccountRegister() {
  // @@protoc_insertion_point(destructor:pb.CtpRspQryAccountRegister)
  SharedDtor();
}

void CtpRspQryAccountRegister::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trading_day_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_branch_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reg_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_customer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpRspQryAccountRegister::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpRspQryAccountRegister& CtpRspQryAccountRegister::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpRspQryAccountRegister_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpRspQryAccountRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpRspQryAccountRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trading_day_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reg_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_customer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bank_acc_type_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(bank_acc_type_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpRspQryAccountRegister::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpRspQryAccountRegister*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string error_msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.error_msg");
        object = msg->mutable_error_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 request_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_request_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_last = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_is_last(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string trading_day = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.trading_day");
        object = msg->mutable_trading_day();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_id = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.bank_id");
        object = msg->mutable_bank_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_branch_id = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.bank_branch_id");
        object = msg->mutable_bank_branch_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_account = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.bank_account");
        object = msg->mutable_bank_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string broker_id = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string broker_branch_id = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.broker_branch_id");
        object = msg->mutable_broker_branch_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string account_id = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.account_id");
        object = msg->mutable_account_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 id_card_type = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_id_card_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string identified_card_no = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.identified_card_no");
        object = msg->mutable_identified_card_no();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string customer_name = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.customer_name");
        object = msg->mutable_customer_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string currency_id = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.currency_id");
        object = msg->mutable_currency_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 open_or_destory = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 128) goto handle_unusual;
        msg->set_open_or_destory(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string reg_date = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.reg_date");
        object = msg->mutable_reg_date();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string out_date = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.out_date");
        object = msg->mutable_out_date();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 tid = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 152) goto handle_unusual;
        msg->set_tid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 cust_type = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 160) goto handle_unusual;
        msg->set_cust_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 bank_acc_type = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 168) goto handle_unusual;
        msg->set_bank_acc_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string long_customer_name = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryAccountRegister.long_customer_name");
        object = msg->mutable_long_customer_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpRspQryAccountRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpRspQryAccountRegister)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), static_cast<int>(this->error_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.error_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 request_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_last = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_last_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trading_day = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trading_day()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trading_day().data(), static_cast<int>(this->trading_day().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.trading_day"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_id().data(), static_cast<int>(this->bank_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.bank_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_branch_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_branch_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.bank_branch_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_account = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_account().data(), static_cast<int>(this->bank_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.bank_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_branch_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_branch_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_branch_id().data(), static_cast<int>(this->broker_branch_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.broker_branch_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id_card_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_card_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identified_card_no = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identified_card_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identified_card_no().data(), static_cast<int>(this->identified_card_no().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.identified_card_no"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_name = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_name().data(), static_cast<int>(this->customer_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.customer_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currency_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency_id().data(), static_cast<int>(this->currency_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.currency_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 open_or_destory = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (128 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_or_destory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reg_date = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reg_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reg_date().data(), static_cast<int>(this->reg_date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.reg_date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string out_date = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_out_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->out_date().data(), static_cast<int>(this->out_date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.out_date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tid = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (152 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cust_type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (160 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cust_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bank_acc_type = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (168 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bank_acc_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string long_customer_name = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_long_customer_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->long_customer_name().data(), static_cast<int>(this->long_customer_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryAccountRegister.long_customer_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpRspQryAccountRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpRspQryAccountRegister)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpRspQryAccountRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpRspQryAccountRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_id(), output);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_msg(), output);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->request_id(), output);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_last(), output);
  }

  // string trading_day = 5;
  if (this->trading_day().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trading_day().data(), static_cast<int>(this->trading_day().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.trading_day");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->trading_day(), output);
  }

  // string bank_id = 6;
  if (this->bank_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_id().data(), static_cast<int>(this->bank_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.bank_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->bank_id(), output);
  }

  // string bank_branch_id = 7;
  if (this->bank_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.bank_branch_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->bank_branch_id(), output);
  }

  // string bank_account = 8;
  if (this->bank_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_account().data(), static_cast<int>(this->bank_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.bank_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->bank_account(), output);
  }

  // string broker_id = 9;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->broker_id(), output);
  }

  // string broker_branch_id = 10;
  if (this->broker_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_branch_id().data(), static_cast<int>(this->broker_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.broker_branch_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->broker_branch_id(), output);
  }

  // string account_id = 11;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->account_id(), output);
  }

  // int32 id_card_type = 12;
  if (this->id_card_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->id_card_type(), output);
  }

  // string identified_card_no = 13;
  if (this->identified_card_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identified_card_no().data(), static_cast<int>(this->identified_card_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.identified_card_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->identified_card_no(), output);
  }

  // string customer_name = 14;
  if (this->customer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_name().data(), static_cast<int>(this->customer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.customer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->customer_name(), output);
  }

  // string currency_id = 15;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.currency_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->currency_id(), output);
  }

  // int32 open_or_destory = 16;
  if (this->open_or_destory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->open_or_destory(), output);
  }

  // string reg_date = 17;
  if (this->reg_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reg_date().data(), static_cast<int>(this->reg_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.reg_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->reg_date(), output);
  }

  // string out_date = 18;
  if (this->out_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->out_date().data(), static_cast<int>(this->out_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.out_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->out_date(), output);
  }

  // int32 tid = 19;
  if (this->tid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->tid(), output);
  }

  // int32 cust_type = 20;
  if (this->cust_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->cust_type(), output);
  }

  // int32 bank_acc_type = 21;
  if (this->bank_acc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->bank_acc_type(), output);
  }

  // string long_customer_name = 22;
  if (this->long_customer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_customer_name().data(), static_cast<int>(this->long_customer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.long_customer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->long_customer_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpRspQryAccountRegister)
}

::google::protobuf::uint8* CtpRspQryAccountRegister::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpRspQryAccountRegister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_id(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_msg(), target);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->request_id(), target);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_last(), target);
  }

  // string trading_day = 5;
  if (this->trading_day().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trading_day().data(), static_cast<int>(this->trading_day().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.trading_day");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->trading_day(), target);
  }

  // string bank_id = 6;
  if (this->bank_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_id().data(), static_cast<int>(this->bank_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.bank_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->bank_id(), target);
  }

  // string bank_branch_id = 7;
  if (this->bank_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.bank_branch_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->bank_branch_id(), target);
  }

  // string bank_account = 8;
  if (this->bank_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_account().data(), static_cast<int>(this->bank_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.bank_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->bank_account(), target);
  }

  // string broker_id = 9;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->broker_id(), target);
  }

  // string broker_branch_id = 10;
  if (this->broker_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_branch_id().data(), static_cast<int>(this->broker_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.broker_branch_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->broker_branch_id(), target);
  }

  // string account_id = 11;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->account_id(), target);
  }

  // int32 id_card_type = 12;
  if (this->id_card_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->id_card_type(), target);
  }

  // string identified_card_no = 13;
  if (this->identified_card_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identified_card_no().data(), static_cast<int>(this->identified_card_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.identified_card_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->identified_card_no(), target);
  }

  // string customer_name = 14;
  if (this->customer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_name().data(), static_cast<int>(this->customer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.customer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->customer_name(), target);
  }

  // string currency_id = 15;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.currency_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->currency_id(), target);
  }

  // int32 open_or_destory = 16;
  if (this->open_or_destory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->open_or_destory(), target);
  }

  // string reg_date = 17;
  if (this->reg_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reg_date().data(), static_cast<int>(this->reg_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.reg_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->reg_date(), target);
  }

  // string out_date = 18;
  if (this->out_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->out_date().data(), static_cast<int>(this->out_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.out_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->out_date(), target);
  }

  // int32 tid = 19;
  if (this->tid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->tid(), target);
  }

  // int32 cust_type = 20;
  if (this->cust_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->cust_type(), target);
  }

  // int32 bank_acc_type = 21;
  if (this->bank_acc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->bank_acc_type(), target);
  }

  // string long_customer_name = 22;
  if (this->long_customer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_customer_name().data(), static_cast<int>(this->long_customer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryAccountRegister.long_customer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->long_customer_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpRspQryAccountRegister)
  return target;
}

size_t CtpRspQryAccountRegister::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpRspQryAccountRegister)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // string trading_day = 5;
  if (this->trading_day().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trading_day());
  }

  // string bank_id = 6;
  if (this->bank_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_id());
  }

  // string bank_branch_id = 7;
  if (this->bank_branch_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_branch_id());
  }

  // string bank_account = 8;
  if (this->bank_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_account());
  }

  // string broker_id = 9;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string broker_branch_id = 10;
  if (this->broker_branch_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_branch_id());
  }

  // string account_id = 11;
  if (this->account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string identified_card_no = 13;
  if (this->identified_card_no().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identified_card_no());
  }

  // string customer_name = 14;
  if (this->customer_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_name());
  }

  // string currency_id = 15;
  if (this->currency_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency_id());
  }

  // string reg_date = 17;
  if (this->reg_date().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reg_date());
  }

  // string out_date = 18;
  if (this->out_date().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->out_date());
  }

  // string long_customer_name = 22;
  if (this->long_customer_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->long_customer_name());
  }

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_id());
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_id());
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    total_size += 1 + 1;
  }

  // int32 id_card_type = 12;
  if (this->id_card_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id_card_type());
  }

  // int32 open_or_destory = 16;
  if (this->open_or_destory() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->open_or_destory());
  }

  // int32 tid = 19;
  if (this->tid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tid());
  }

  // int32 cust_type = 20;
  if (this->cust_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cust_type());
  }

  // int32 bank_acc_type = 21;
  if (this->bank_acc_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bank_acc_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpRspQryAccountRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpRspQryAccountRegister)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpRspQryAccountRegister* source =
      ::google::protobuf::DynamicCastToGenerated<CtpRspQryAccountRegister>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpRspQryAccountRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpRspQryAccountRegister)
    MergeFrom(*source);
  }
}

void CtpRspQryAccountRegister::MergeFrom(const CtpRspQryAccountRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpRspQryAccountRegister)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.trading_day().size() > 0) {

    trading_day_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trading_day_);
  }
  if (from.bank_id().size() > 0) {

    bank_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_id_);
  }
  if (from.bank_branch_id().size() > 0) {

    bank_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_branch_id_);
  }
  if (from.bank_account().size() > 0) {

    bank_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_account_);
  }
  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.broker_branch_id().size() > 0) {

    broker_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_branch_id_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.identified_card_no().size() > 0) {

    identified_card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identified_card_no_);
  }
  if (from.customer_name().size() > 0) {

    customer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_name_);
  }
  if (from.currency_id().size() > 0) {

    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  if (from.reg_date().size() > 0) {

    reg_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reg_date_);
  }
  if (from.out_date().size() > 0) {

    out_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_date_);
  }
  if (from.long_customer_name().size() > 0) {

    long_customer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_customer_name_);
  }
  if (from.error_id() != 0) {
    set_error_id(from.error_id());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.is_last() != 0) {
    set_is_last(from.is_last());
  }
  if (from.id_card_type() != 0) {
    set_id_card_type(from.id_card_type());
  }
  if (from.open_or_destory() != 0) {
    set_open_or_destory(from.open_or_destory());
  }
  if (from.tid() != 0) {
    set_tid(from.tid());
  }
  if (from.cust_type() != 0) {
    set_cust_type(from.cust_type());
  }
  if (from.bank_acc_type() != 0) {
    set_bank_acc_type(from.bank_acc_type());
  }
}

void CtpRspQryAccountRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpRspQryAccountRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpRspQryAccountRegister::CopyFrom(const CtpRspQryAccountRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpRspQryAccountRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpRspQryAccountRegister::IsInitialized() const {
  return true;
}

void CtpRspQryAccountRegister::Swap(CtpRspQryAccountRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpRspQryAccountRegister::InternalSwap(CtpRspQryAccountRegister* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trading_day_.Swap(&other->trading_day_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_id_.Swap(&other->bank_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_branch_id_.Swap(&other->bank_branch_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_account_.Swap(&other->bank_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broker_branch_id_.Swap(&other->broker_branch_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  identified_card_no_.Swap(&other->identified_card_no_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  customer_name_.Swap(&other->customer_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_id_.Swap(&other->currency_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reg_date_.Swap(&other->reg_date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  out_date_.Swap(&other->out_date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  long_customer_name_.Swap(&other->long_customer_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_id_, other->error_id_);
  swap(request_id_, other->request_id_);
  swap(is_last_, other->is_last_);
  swap(id_card_type_, other->id_card_type_);
  swap(open_or_destory_, other->open_or_destory_);
  swap(tid_, other->tid_);
  swap(cust_type_, other->cust_type_);
  swap(bank_acc_type_, other->bank_acc_type_);
}

::google::protobuf::Metadata CtpRspQryAccountRegister::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpReqAuthencate::InitAsDefaultInstance() {
}
class CtpReqAuthencate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpReqAuthencate::kAuthCodeFieldNumber;
const int CtpReqAuthencate::kProductFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpReqAuthencate::CtpReqAuthencate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpReqAuthencate)
}
CtpReqAuthencate::CtpReqAuthencate(const CtpReqAuthencate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auth_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.auth_code().size() > 0) {
    auth_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_code_);
  }
  product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product().size() > 0) {
    product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.CtpReqAuthencate)
}

void CtpReqAuthencate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpReqAuthencate_binding_2eproto.base);
  auth_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CtpReqAuthencate::~CtpReqAuthencate() {
  // @@protoc_insertion_point(destructor:pb.CtpReqAuthencate)
  SharedDtor();
}

void CtpReqAuthencate::SharedDtor() {
  auth_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpReqAuthencate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpReqAuthencate& CtpReqAuthencate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpReqAuthencate_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpReqAuthencate::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpReqAuthencate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auth_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpReqAuthencate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpReqAuthencate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string auth_code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqAuthencate.auth_code");
        object = msg->mutable_auth_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string product = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqAuthencate.product");
        object = msg->mutable_product();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpReqAuthencate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpReqAuthencate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string auth_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auth_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->auth_code().data(), static_cast<int>(this->auth_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqAuthencate.auth_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product().data(), static_cast<int>(this->product().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqAuthencate.product"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpReqAuthencate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpReqAuthencate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpReqAuthencate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpReqAuthencate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string auth_code = 1;
  if (this->auth_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth_code().data(), static_cast<int>(this->auth_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqAuthencate.auth_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->auth_code(), output);
  }

  // string product = 2;
  if (this->product().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product().data(), static_cast<int>(this->product().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqAuthencate.product");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->product(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpReqAuthencate)
}

::google::protobuf::uint8* CtpReqAuthencate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpReqAuthencate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string auth_code = 1;
  if (this->auth_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth_code().data(), static_cast<int>(this->auth_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqAuthencate.auth_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->auth_code(), target);
  }

  // string product = 2;
  if (this->product().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product().data(), static_cast<int>(this->product().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqAuthencate.product");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->product(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpReqAuthencate)
  return target;
}

size_t CtpReqAuthencate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpReqAuthencate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string auth_code = 1;
  if (this->auth_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->auth_code());
  }

  // string product = 2;
  if (this->product().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpReqAuthencate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpReqAuthencate)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpReqAuthencate* source =
      ::google::protobuf::DynamicCastToGenerated<CtpReqAuthencate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpReqAuthencate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpReqAuthencate)
    MergeFrom(*source);
  }
}

void CtpReqAuthencate::MergeFrom(const CtpReqAuthencate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpReqAuthencate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.auth_code().size() > 0) {

    auth_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_code_);
  }
  if (from.product().size() > 0) {

    product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_);
  }
}

void CtpReqAuthencate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpReqAuthencate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpReqAuthencate::CopyFrom(const CtpReqAuthencate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpReqAuthencate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpReqAuthencate::IsInitialized() const {
  return true;
}

void CtpReqAuthencate::Swap(CtpReqAuthencate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpReqAuthencate::InternalSwap(CtpReqAuthencate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  auth_code_.Swap(&other->auth_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  product_.Swap(&other->product_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CtpReqAuthencate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpRspAuthencate::InitAsDefaultInstance() {
}
class CtpRspAuthencate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpRspAuthencate::kErrorIdFieldNumber;
const int CtpRspAuthencate::kErrorMsgFieldNumber;
const int CtpRspAuthencate::kRequestIdFieldNumber;
const int CtpRspAuthencate::kIsLastFieldNumber;
const int CtpRspAuthencate::kBrokerIdFieldNumber;
const int CtpRspAuthencate::kUserIdFieldNumber;
const int CtpRspAuthencate::kUserProductInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpRspAuthencate::CtpRspAuthencate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpRspAuthencate)
}
CtpRspAuthencate::CtpRspAuthencate(const CtpRspAuthencate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_msg().size() > 0) {
    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  user_product_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_product_info().size() > 0) {
    user_product_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_product_info_);
  }
  ::memcpy(&error_id_, &from.error_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_last_) -
    reinterpret_cast<char*>(&error_id_)) + sizeof(is_last_));
  // @@protoc_insertion_point(copy_constructor:pb.CtpRspAuthencate)
}

void CtpRspAuthencate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpRspAuthencate_binding_2eproto.base);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_product_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_last_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(is_last_));
}

CtpRspAuthencate::~CtpRspAuthencate() {
  // @@protoc_insertion_point(destructor:pb.CtpRspAuthencate)
  SharedDtor();
}

void CtpRspAuthencate::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_product_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpRspAuthencate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpRspAuthencate& CtpRspAuthencate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpRspAuthencate_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpRspAuthencate::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpRspAuthencate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_product_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_last_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(is_last_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpRspAuthencate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpRspAuthencate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string error_msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspAuthencate.error_msg");
        object = msg->mutable_error_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 request_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_request_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_last = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_is_last(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string broker_id = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspAuthencate.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string user_id = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspAuthencate.user_id");
        object = msg->mutable_user_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string user_product_info = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspAuthencate.user_product_info");
        object = msg->mutable_user_product_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpRspAuthencate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpRspAuthencate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), static_cast<int>(this->error_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspAuthencate.error_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 request_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_last = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_last_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspAuthencate.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspAuthencate.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_product_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_product_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_product_info().data(), static_cast<int>(this->user_product_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspAuthencate.user_product_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpRspAuthencate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpRspAuthencate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpRspAuthencate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpRspAuthencate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_id(), output);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspAuthencate.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_msg(), output);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->request_id(), output);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_last(), output);
  }

  // string broker_id = 5;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspAuthencate.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->broker_id(), output);
  }

  // string user_id = 6;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspAuthencate.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->user_id(), output);
  }

  // string user_product_info = 7;
  if (this->user_product_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_product_info().data(), static_cast<int>(this->user_product_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspAuthencate.user_product_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->user_product_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpRspAuthencate)
}

::google::protobuf::uint8* CtpRspAuthencate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpRspAuthencate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_id(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspAuthencate.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_msg(), target);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->request_id(), target);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_last(), target);
  }

  // string broker_id = 5;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspAuthencate.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->broker_id(), target);
  }

  // string user_id = 6;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspAuthencate.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->user_id(), target);
  }

  // string user_product_info = 7;
  if (this->user_product_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_product_info().data(), static_cast<int>(this->user_product_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspAuthencate.user_product_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->user_product_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpRspAuthencate)
  return target;
}

size_t CtpRspAuthencate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpRspAuthencate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // string broker_id = 5;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string user_id = 6;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string user_product_info = 7;
  if (this->user_product_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_product_info());
  }

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_id());
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_id());
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpRspAuthencate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpRspAuthencate)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpRspAuthencate* source =
      ::google::protobuf::DynamicCastToGenerated<CtpRspAuthencate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpRspAuthencate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpRspAuthencate)
    MergeFrom(*source);
  }
}

void CtpRspAuthencate::MergeFrom(const CtpRspAuthencate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpRspAuthencate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.user_product_info().size() > 0) {

    user_product_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_product_info_);
  }
  if (from.error_id() != 0) {
    set_error_id(from.error_id());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.is_last() != 0) {
    set_is_last(from.is_last());
  }
}

void CtpRspAuthencate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpRspAuthencate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpRspAuthencate::CopyFrom(const CtpRspAuthencate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpRspAuthencate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpRspAuthencate::IsInitialized() const {
  return true;
}

void CtpRspAuthencate::Swap(CtpRspAuthencate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpRspAuthencate::InternalSwap(CtpRspAuthencate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_product_info_.Swap(&other->user_product_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_id_, other->error_id_);
  swap(request_id_, other->request_id_);
  swap(is_last_, other->is_last_);
}

::google::protobuf::Metadata CtpRspAuthencate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpReqUserLogin::InitAsDefaultInstance() {
}
class CtpReqUserLogin::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpReqUserLogin::kBrokerIdFieldNumber;
const int CtpReqUserLogin::kAccountFieldNumber;
const int CtpReqUserLogin::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpReqUserLogin::CtpReqUserLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpReqUserLogin)
}
CtpReqUserLogin::CtpReqUserLogin(const CtpReqUserLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.CtpReqUserLogin)
}

void CtpReqUserLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpReqUserLogin_binding_2eproto.base);
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CtpReqUserLogin::~CtpReqUserLogin() {
  // @@protoc_insertion_point(destructor:pb.CtpReqUserLogin)
  SharedDtor();
}

void CtpReqUserLogin::SharedDtor() {
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpReqUserLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpReqUserLogin& CtpReqUserLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpReqUserLogin_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpReqUserLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpReqUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpReqUserLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpReqUserLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string broker_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqUserLogin.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqUserLogin.account");
        object = msg->mutable_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqUserLogin.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpReqUserLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpReqUserLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string broker_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqUserLogin.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqUserLogin.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqUserLogin.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpReqUserLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpReqUserLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpReqUserLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpReqUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqUserLogin.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->broker_id(), output);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqUserLogin.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqUserLogin.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpReqUserLogin)
}

::google::protobuf::uint8* CtpReqUserLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpReqUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqUserLogin.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->broker_id(), target);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqUserLogin.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqUserLogin.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpReqUserLogin)
  return target;
}

size_t CtpReqUserLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpReqUserLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpReqUserLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpReqUserLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpReqUserLogin* source =
      ::google::protobuf::DynamicCastToGenerated<CtpReqUserLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpReqUserLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpReqUserLogin)
    MergeFrom(*source);
  }
}

void CtpReqUserLogin::MergeFrom(const CtpReqUserLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpReqUserLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void CtpReqUserLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpReqUserLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpReqUserLogin::CopyFrom(const CtpReqUserLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpReqUserLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpReqUserLogin::IsInitialized() const {
  return true;
}

void CtpReqUserLogin::Swap(CtpReqUserLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpReqUserLogin::InternalSwap(CtpReqUserLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CtpReqUserLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpRspUserLogin::InitAsDefaultInstance() {
}
class CtpRspUserLogin::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpRspUserLogin::kErrorIdFieldNumber;
const int CtpRspUserLogin::kErrorMsgFieldNumber;
const int CtpRspUserLogin::kRequestIdFieldNumber;
const int CtpRspUserLogin::kIsLastFieldNumber;
const int CtpRspUserLogin::kTradingDayFieldNumber;
const int CtpRspUserLogin::kLoginTimeFieldNumber;
const int CtpRspUserLogin::kBrokerIdFieldNumber;
const int CtpRspUserLogin::kUserIdFieldNumber;
const int CtpRspUserLogin::kSystemNameFieldNumber;
const int CtpRspUserLogin::kFrontIdFieldNumber;
const int CtpRspUserLogin::kSessionIdFieldNumber;
const int CtpRspUserLogin::kMaxOrderRefFieldNumber;
const int CtpRspUserLogin::kShfeTimeFieldNumber;
const int CtpRspUserLogin::kDceTimeFieldNumber;
const int CtpRspUserLogin::kCzceTimeFieldNumber;
const int CtpRspUserLogin::kCffexTimeFieldNumber;
const int CtpRspUserLogin::kIneTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpRspUserLogin::CtpRspUserLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpRspUserLogin)
}
CtpRspUserLogin::CtpRspUserLogin(const CtpRspUserLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_msg().size() > 0) {
    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  trading_day_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trading_day().size() > 0) {
    trading_day_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trading_day_);
  }
  login_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_time().size() > 0) {
    login_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_time_);
  }
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  system_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_name().size() > 0) {
    system_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_name_);
  }
  max_order_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.max_order_ref().size() > 0) {
    max_order_ref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.max_order_ref_);
  }
  shfe_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shfe_time().size() > 0) {
    shfe_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shfe_time_);
  }
  dce_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dce_time().size() > 0) {
    dce_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dce_time_);
  }
  czce_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.czce_time().size() > 0) {
    czce_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.czce_time_);
  }
  cffex_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cffex_time().size() > 0) {
    cffex_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cffex_time_);
  }
  ine_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ine_time().size() > 0) {
    ine_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ine_time_);
  }
  ::memcpy(&error_id_, &from.error_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&session_id_) -
    reinterpret_cast<char*>(&error_id_)) + sizeof(session_id_));
  // @@protoc_insertion_point(copy_constructor:pb.CtpRspUserLogin)
}

void CtpRspUserLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpRspUserLogin_binding_2eproto.base);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trading_day_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_order_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shfe_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dce_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  czce_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cffex_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ine_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&session_id_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(session_id_));
}

CtpRspUserLogin::~CtpRspUserLogin() {
  // @@protoc_insertion_point(destructor:pb.CtpRspUserLogin)
  SharedDtor();
}

void CtpRspUserLogin::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trading_day_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_order_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shfe_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dce_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  czce_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cffex_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ine_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpRspUserLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpRspUserLogin& CtpRspUserLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpRspUserLogin_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpRspUserLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpRspUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trading_day_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_order_ref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shfe_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dce_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  czce_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cffex_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ine_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&session_id_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(session_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpRspUserLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpRspUserLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string error_msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.error_msg");
        object = msg->mutable_error_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 request_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_request_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_last = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_is_last(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string trading_day = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.trading_day");
        object = msg->mutable_trading_day();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string login_time = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.login_time");
        object = msg->mutable_login_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string broker_id = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string user_id = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.user_id");
        object = msg->mutable_user_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string system_name = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.system_name");
        object = msg->mutable_system_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 front_id = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_front_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 session_id = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_session_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string max_order_ref = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.max_order_ref");
        object = msg->mutable_max_order_ref();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string shfe_time = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.shfe_time");
        object = msg->mutable_shfe_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string dce_time = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.dce_time");
        object = msg->mutable_dce_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string czce_time = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.czce_time");
        object = msg->mutable_czce_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cffex_time = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.cffex_time");
        object = msg->mutable_cffex_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ine_time = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspUserLogin.ine_time");
        object = msg->mutable_ine_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpRspUserLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpRspUserLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), static_cast<int>(this->error_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.error_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 request_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_last = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_last_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trading_day = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trading_day()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trading_day().data(), static_cast<int>(this->trading_day().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.trading_day"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_time().data(), static_cast<int>(this->login_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.login_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string system_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->system_name().data(), static_cast<int>(this->system_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.system_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 front_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &front_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 session_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string max_order_ref = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_max_order_ref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->max_order_ref().data(), static_cast<int>(this->max_order_ref().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.max_order_ref"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shfe_time = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shfe_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shfe_time().data(), static_cast<int>(this->shfe_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.shfe_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dce_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dce_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dce_time().data(), static_cast<int>(this->dce_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.dce_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string czce_time = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_czce_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->czce_time().data(), static_cast<int>(this->czce_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.czce_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cffex_time = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cffex_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cffex_time().data(), static_cast<int>(this->cffex_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.cffex_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ine_time = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ine_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ine_time().data(), static_cast<int>(this->ine_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspUserLogin.ine_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpRspUserLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpRspUserLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpRspUserLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpRspUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_id(), output);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_msg(), output);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->request_id(), output);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_last(), output);
  }

  // string trading_day = 5;
  if (this->trading_day().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trading_day().data(), static_cast<int>(this->trading_day().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.trading_day");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->trading_day(), output);
  }

  // string login_time = 6;
  if (this->login_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_time().data(), static_cast<int>(this->login_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.login_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->login_time(), output);
  }

  // string broker_id = 7;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->broker_id(), output);
  }

  // string user_id = 8;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->user_id(), output);
  }

  // string system_name = 9;
  if (this->system_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_name().data(), static_cast<int>(this->system_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.system_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->system_name(), output);
  }

  // int32 front_id = 10;
  if (this->front_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->front_id(), output);
  }

  // int32 session_id = 11;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->session_id(), output);
  }

  // string max_order_ref = 12;
  if (this->max_order_ref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->max_order_ref().data(), static_cast<int>(this->max_order_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.max_order_ref");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->max_order_ref(), output);
  }

  // string shfe_time = 13;
  if (this->shfe_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shfe_time().data(), static_cast<int>(this->shfe_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.shfe_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->shfe_time(), output);
  }

  // string dce_time = 14;
  if (this->dce_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dce_time().data(), static_cast<int>(this->dce_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.dce_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->dce_time(), output);
  }

  // string czce_time = 15;
  if (this->czce_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->czce_time().data(), static_cast<int>(this->czce_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.czce_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->czce_time(), output);
  }

  // string cffex_time = 16;
  if (this->cffex_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cffex_time().data(), static_cast<int>(this->cffex_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.cffex_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->cffex_time(), output);
  }

  // string ine_time = 17;
  if (this->ine_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ine_time().data(), static_cast<int>(this->ine_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.ine_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->ine_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpRspUserLogin)
}

::google::protobuf::uint8* CtpRspUserLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpRspUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_id(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_msg(), target);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->request_id(), target);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_last(), target);
  }

  // string trading_day = 5;
  if (this->trading_day().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trading_day().data(), static_cast<int>(this->trading_day().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.trading_day");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->trading_day(), target);
  }

  // string login_time = 6;
  if (this->login_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_time().data(), static_cast<int>(this->login_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.login_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->login_time(), target);
  }

  // string broker_id = 7;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->broker_id(), target);
  }

  // string user_id = 8;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->user_id(), target);
  }

  // string system_name = 9;
  if (this->system_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_name().data(), static_cast<int>(this->system_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.system_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->system_name(), target);
  }

  // int32 front_id = 10;
  if (this->front_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->front_id(), target);
  }

  // int32 session_id = 11;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->session_id(), target);
  }

  // string max_order_ref = 12;
  if (this->max_order_ref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->max_order_ref().data(), static_cast<int>(this->max_order_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.max_order_ref");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->max_order_ref(), target);
  }

  // string shfe_time = 13;
  if (this->shfe_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shfe_time().data(), static_cast<int>(this->shfe_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.shfe_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->shfe_time(), target);
  }

  // string dce_time = 14;
  if (this->dce_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dce_time().data(), static_cast<int>(this->dce_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.dce_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->dce_time(), target);
  }

  // string czce_time = 15;
  if (this->czce_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->czce_time().data(), static_cast<int>(this->czce_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.czce_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->czce_time(), target);
  }

  // string cffex_time = 16;
  if (this->cffex_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cffex_time().data(), static_cast<int>(this->cffex_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.cffex_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->cffex_time(), target);
  }

  // string ine_time = 17;
  if (this->ine_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ine_time().data(), static_cast<int>(this->ine_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspUserLogin.ine_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->ine_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpRspUserLogin)
  return target;
}

size_t CtpRspUserLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpRspUserLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // string trading_day = 5;
  if (this->trading_day().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trading_day());
  }

  // string login_time = 6;
  if (this->login_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_time());
  }

  // string broker_id = 7;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string user_id = 8;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string system_name = 9;
  if (this->system_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system_name());
  }

  // string max_order_ref = 12;
  if (this->max_order_ref().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->max_order_ref());
  }

  // string shfe_time = 13;
  if (this->shfe_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shfe_time());
  }

  // string dce_time = 14;
  if (this->dce_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dce_time());
  }

  // string czce_time = 15;
  if (this->czce_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->czce_time());
  }

  // string cffex_time = 16;
  if (this->cffex_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cffex_time());
  }

  // string ine_time = 17;
  if (this->ine_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ine_time());
  }

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_id());
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_id());
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    total_size += 1 + 1;
  }

  // int32 front_id = 10;
  if (this->front_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->front_id());
  }

  // int32 session_id = 11;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpRspUserLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpRspUserLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpRspUserLogin* source =
      ::google::protobuf::DynamicCastToGenerated<CtpRspUserLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpRspUserLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpRspUserLogin)
    MergeFrom(*source);
  }
}

void CtpRspUserLogin::MergeFrom(const CtpRspUserLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpRspUserLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.trading_day().size() > 0) {

    trading_day_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trading_day_);
  }
  if (from.login_time().size() > 0) {

    login_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_time_);
  }
  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.system_name().size() > 0) {

    system_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_name_);
  }
  if (from.max_order_ref().size() > 0) {

    max_order_ref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.max_order_ref_);
  }
  if (from.shfe_time().size() > 0) {

    shfe_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shfe_time_);
  }
  if (from.dce_time().size() > 0) {

    dce_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dce_time_);
  }
  if (from.czce_time().size() > 0) {

    czce_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.czce_time_);
  }
  if (from.cffex_time().size() > 0) {

    cffex_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cffex_time_);
  }
  if (from.ine_time().size() > 0) {

    ine_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ine_time_);
  }
  if (from.error_id() != 0) {
    set_error_id(from.error_id());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.is_last() != 0) {
    set_is_last(from.is_last());
  }
  if (from.front_id() != 0) {
    set_front_id(from.front_id());
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
}

void CtpRspUserLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpRspUserLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpRspUserLogin::CopyFrom(const CtpRspUserLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpRspUserLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpRspUserLogin::IsInitialized() const {
  return true;
}

void CtpRspUserLogin::Swap(CtpRspUserLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpRspUserLogin::InternalSwap(CtpRspUserLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trading_day_.Swap(&other->trading_day_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  login_time_.Swap(&other->login_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  system_name_.Swap(&other->system_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  max_order_ref_.Swap(&other->max_order_ref_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shfe_time_.Swap(&other->shfe_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dce_time_.Swap(&other->dce_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  czce_time_.Swap(&other->czce_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cffex_time_.Swap(&other->cffex_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ine_time_.Swap(&other->ine_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_id_, other->error_id_);
  swap(request_id_, other->request_id_);
  swap(is_last_, other->is_last_);
  swap(front_id_, other->front_id_);
  swap(session_id_, other->session_id_);
}

::google::protobuf::Metadata CtpRspUserLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpReqConnect::InitAsDefaultInstance() {
}
class CtpReqConnect::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpReqConnect::kAddressFieldNumber;
const int CtpReqConnect::kAccountFieldNumber;
const int CtpReqConnect::kDirectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpReqConnect::CtpReqConnect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpReqConnect)
}
CtpReqConnect::CtpReqConnect(const CtpReqConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.directory().size() > 0) {
    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.CtpReqConnect)
}

void CtpReqConnect::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpReqConnect_binding_2eproto.base);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CtpReqConnect::~CtpReqConnect() {
  // @@protoc_insertion_point(destructor:pb.CtpReqConnect)
  SharedDtor();
}

void CtpReqConnect::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpReqConnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpReqConnect& CtpReqConnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpReqConnect_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpReqConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpReqConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpReqConnect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpReqConnect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqConnect.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqConnect.account");
        object = msg->mutable_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string directory = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqConnect.directory");
        object = msg->mutable_directory();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpReqConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpReqConnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqConnect.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqConnect.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string directory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->directory().data(), static_cast<int>(this->directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqConnect.directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpReqConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpReqConnect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpReqConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpReqConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqConnect.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqConnect.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // string directory = 3;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqConnect.directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->directory(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpReqConnect)
}

::google::protobuf::uint8* CtpReqConnect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpReqConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqConnect.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqConnect.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // string directory = 3;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqConnect.directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->directory(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpReqConnect)
  return target;
}

size_t CtpReqConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpReqConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string directory = 3;
  if (this->directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpReqConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpReqConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpReqConnect* source =
      ::google::protobuf::DynamicCastToGenerated<CtpReqConnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpReqConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpReqConnect)
    MergeFrom(*source);
  }
}

void CtpReqConnect::MergeFrom(const CtpReqConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpReqConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.directory().size() > 0) {

    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
}

void CtpReqConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpReqConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpReqConnect::CopyFrom(const CtpReqConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpReqConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpReqConnect::IsInitialized() const {
  return true;
}

void CtpReqConnect::Swap(CtpReqConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpReqConnect::InternalSwap(CtpReqConnect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  directory_.Swap(&other->directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CtpReqConnect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpOnFrontConnected::InitAsDefaultInstance() {
}
class CtpOnFrontConnected::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpOnFrontConnected::CtpOnFrontConnected()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpOnFrontConnected)
}
CtpOnFrontConnected::CtpOnFrontConnected(const CtpOnFrontConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.CtpOnFrontConnected)
}

void CtpOnFrontConnected::SharedCtor() {
}

CtpOnFrontConnected::~CtpOnFrontConnected() {
  // @@protoc_insertion_point(destructor:pb.CtpOnFrontConnected)
  SharedDtor();
}

void CtpOnFrontConnected::SharedDtor() {
}

void CtpOnFrontConnected::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpOnFrontConnected& CtpOnFrontConnected::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpOnFrontConnected_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpOnFrontConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpOnFrontConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpOnFrontConnected::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpOnFrontConnected*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpOnFrontConnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpOnFrontConnected)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpOnFrontConnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpOnFrontConnected)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpOnFrontConnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpOnFrontConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpOnFrontConnected)
}

::google::protobuf::uint8* CtpOnFrontConnected::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpOnFrontConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpOnFrontConnected)
  return target;
}

size_t CtpOnFrontConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpOnFrontConnected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpOnFrontConnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpOnFrontConnected)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpOnFrontConnected* source =
      ::google::protobuf::DynamicCastToGenerated<CtpOnFrontConnected>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpOnFrontConnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpOnFrontConnected)
    MergeFrom(*source);
  }
}

void CtpOnFrontConnected::MergeFrom(const CtpOnFrontConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpOnFrontConnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CtpOnFrontConnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpOnFrontConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpOnFrontConnected::CopyFrom(const CtpOnFrontConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpOnFrontConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpOnFrontConnected::IsInitialized() const {
  return true;
}

void CtpOnFrontConnected::Swap(CtpOnFrontConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpOnFrontConnected::InternalSwap(CtpOnFrontConnected* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CtpOnFrontConnected::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpOnFrontDisconnected::InitAsDefaultInstance() {
}
class CtpOnFrontDisconnected::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpOnFrontDisconnected::CtpOnFrontDisconnected()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpOnFrontDisconnected)
}
CtpOnFrontDisconnected::CtpOnFrontDisconnected(const CtpOnFrontDisconnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.CtpOnFrontDisconnected)
}

void CtpOnFrontDisconnected::SharedCtor() {
}

CtpOnFrontDisconnected::~CtpOnFrontDisconnected() {
  // @@protoc_insertion_point(destructor:pb.CtpOnFrontDisconnected)
  SharedDtor();
}

void CtpOnFrontDisconnected::SharedDtor() {
}

void CtpOnFrontDisconnected::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpOnFrontDisconnected& CtpOnFrontDisconnected::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpOnFrontDisconnected_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpOnFrontDisconnected::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpOnFrontDisconnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpOnFrontDisconnected::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpOnFrontDisconnected*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpOnFrontDisconnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpOnFrontDisconnected)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpOnFrontDisconnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpOnFrontDisconnected)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpOnFrontDisconnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpOnFrontDisconnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpOnFrontDisconnected)
}

::google::protobuf::uint8* CtpOnFrontDisconnected::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpOnFrontDisconnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpOnFrontDisconnected)
  return target;
}

size_t CtpOnFrontDisconnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpOnFrontDisconnected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpOnFrontDisconnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpOnFrontDisconnected)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpOnFrontDisconnected* source =
      ::google::protobuf::DynamicCastToGenerated<CtpOnFrontDisconnected>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpOnFrontDisconnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpOnFrontDisconnected)
    MergeFrom(*source);
  }
}

void CtpOnFrontDisconnected::MergeFrom(const CtpOnFrontDisconnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpOnFrontDisconnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CtpOnFrontDisconnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpOnFrontDisconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpOnFrontDisconnected::CopyFrom(const CtpOnFrontDisconnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpOnFrontDisconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpOnFrontDisconnected::IsInitialized() const {
  return true;
}

void CtpOnFrontDisconnected::Swap(CtpOnFrontDisconnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpOnFrontDisconnected::InternalSwap(CtpOnFrontDisconnected* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CtpOnFrontDisconnected::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpReqSettlementInfoConfirm::InitAsDefaultInstance() {
}
class CtpReqSettlementInfoConfirm::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpReqSettlementInfoConfirm::kBrokerIdFieldNumber;
const int CtpReqSettlementInfoConfirm::kInvestorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpReqSettlementInfoConfirm::CtpReqSettlementInfoConfirm()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpReqSettlementInfoConfirm)
}
CtpReqSettlementInfoConfirm::CtpReqSettlementInfoConfirm(const CtpReqSettlementInfoConfirm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  investor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor_id().size() > 0) {
    investor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_id_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.CtpReqSettlementInfoConfirm)
}

void CtpReqSettlementInfoConfirm::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpReqSettlementInfoConfirm_binding_2eproto.base);
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CtpReqSettlementInfoConfirm::~CtpReqSettlementInfoConfirm() {
  // @@protoc_insertion_point(destructor:pb.CtpReqSettlementInfoConfirm)
  SharedDtor();
}

void CtpReqSettlementInfoConfirm::SharedDtor() {
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpReqSettlementInfoConfirm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpReqSettlementInfoConfirm& CtpReqSettlementInfoConfirm::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpReqSettlementInfoConfirm_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpReqSettlementInfoConfirm::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpReqSettlementInfoConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpReqSettlementInfoConfirm::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpReqSettlementInfoConfirm*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string broker_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqSettlementInfoConfirm.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string investor_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqSettlementInfoConfirm.investor_id");
        object = msg->mutable_investor_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpReqSettlementInfoConfirm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpReqSettlementInfoConfirm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string broker_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqSettlementInfoConfirm.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investor_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor_id().data(), static_cast<int>(this->investor_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqSettlementInfoConfirm.investor_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpReqSettlementInfoConfirm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpReqSettlementInfoConfirm)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpReqSettlementInfoConfirm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpReqSettlementInfoConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqSettlementInfoConfirm.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->broker_id(), output);
  }

  // string investor_id = 2;
  if (this->investor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_id().data(), static_cast<int>(this->investor_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqSettlementInfoConfirm.investor_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->investor_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpReqSettlementInfoConfirm)
}

::google::protobuf::uint8* CtpReqSettlementInfoConfirm::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpReqSettlementInfoConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqSettlementInfoConfirm.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->broker_id(), target);
  }

  // string investor_id = 2;
  if (this->investor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_id().data(), static_cast<int>(this->investor_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqSettlementInfoConfirm.investor_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->investor_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpReqSettlementInfoConfirm)
  return target;
}

size_t CtpReqSettlementInfoConfirm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpReqSettlementInfoConfirm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string investor_id = 2;
  if (this->investor_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpReqSettlementInfoConfirm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpReqSettlementInfoConfirm)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpReqSettlementInfoConfirm* source =
      ::google::protobuf::DynamicCastToGenerated<CtpReqSettlementInfoConfirm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpReqSettlementInfoConfirm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpReqSettlementInfoConfirm)
    MergeFrom(*source);
  }
}

void CtpReqSettlementInfoConfirm::MergeFrom(const CtpReqSettlementInfoConfirm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpReqSettlementInfoConfirm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.investor_id().size() > 0) {

    investor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_id_);
  }
}

void CtpReqSettlementInfoConfirm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpReqSettlementInfoConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpReqSettlementInfoConfirm::CopyFrom(const CtpReqSettlementInfoConfirm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpReqSettlementInfoConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpReqSettlementInfoConfirm::IsInitialized() const {
  return true;
}

void CtpReqSettlementInfoConfirm::Swap(CtpReqSettlementInfoConfirm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpReqSettlementInfoConfirm::InternalSwap(CtpReqSettlementInfoConfirm* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  investor_id_.Swap(&other->investor_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CtpReqSettlementInfoConfirm::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpOnRspSettlementInfoConfirm::InitAsDefaultInstance() {
}
class CtpOnRspSettlementInfoConfirm::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpOnRspSettlementInfoConfirm::kErrorIdFieldNumber;
const int CtpOnRspSettlementInfoConfirm::kErrorMsgFieldNumber;
const int CtpOnRspSettlementInfoConfirm::kRequestIdFieldNumber;
const int CtpOnRspSettlementInfoConfirm::kIsLastFieldNumber;
const int CtpOnRspSettlementInfoConfirm::kBrokerIdFieldNumber;
const int CtpOnRspSettlementInfoConfirm::kInvestorIdFieldNumber;
const int CtpOnRspSettlementInfoConfirm::kConfirmDateFieldNumber;
const int CtpOnRspSettlementInfoConfirm::kConfirmTimeFieldNumber;
const int CtpOnRspSettlementInfoConfirm::kSettlementIdFieldNumber;
const int CtpOnRspSettlementInfoConfirm::kAccountIdFieldNumber;
const int CtpOnRspSettlementInfoConfirm::kCurrencyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpOnRspSettlementInfoConfirm::CtpOnRspSettlementInfoConfirm()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpOnRspSettlementInfoConfirm)
}
CtpOnRspSettlementInfoConfirm::CtpOnRspSettlementInfoConfirm(const CtpOnRspSettlementInfoConfirm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_msg().size() > 0) {
    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  investor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor_id().size() > 0) {
    investor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_id_);
  }
  confirm_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.confirm_date().size() > 0) {
    confirm_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confirm_date_);
  }
  confirm_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.confirm_time().size() > 0) {
    confirm_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confirm_time_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currency_id().size() > 0) {
    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  ::memcpy(&error_id_, &from.error_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&settlement_id_) -
    reinterpret_cast<char*>(&error_id_)) + sizeof(settlement_id_));
  // @@protoc_insertion_point(copy_constructor:pb.CtpOnRspSettlementInfoConfirm)
}

void CtpOnRspSettlementInfoConfirm::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpOnRspSettlementInfoConfirm_binding_2eproto.base);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirm_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirm_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&settlement_id_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(settlement_id_));
}

CtpOnRspSettlementInfoConfirm::~CtpOnRspSettlementInfoConfirm() {
  // @@protoc_insertion_point(destructor:pb.CtpOnRspSettlementInfoConfirm)
  SharedDtor();
}

void CtpOnRspSettlementInfoConfirm::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirm_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirm_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpOnRspSettlementInfoConfirm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpOnRspSettlementInfoConfirm& CtpOnRspSettlementInfoConfirm::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpOnRspSettlementInfoConfirm_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpOnRspSettlementInfoConfirm::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpOnRspSettlementInfoConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirm_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirm_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&settlement_id_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(settlement_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpOnRspSettlementInfoConfirm::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpOnRspSettlementInfoConfirm*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string error_msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpOnRspSettlementInfoConfirm.error_msg");
        object = msg->mutable_error_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 request_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_request_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_last = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_is_last(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string broker_id = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpOnRspSettlementInfoConfirm.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string investor_id = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpOnRspSettlementInfoConfirm.investor_id");
        object = msg->mutable_investor_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string confirm_date = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpOnRspSettlementInfoConfirm.confirm_date");
        object = msg->mutable_confirm_date();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string confirm_time = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpOnRspSettlementInfoConfirm.confirm_time");
        object = msg->mutable_confirm_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 settlement_id = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_settlement_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string account_id = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpOnRspSettlementInfoConfirm.account_id");
        object = msg->mutable_account_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string currency_id = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpOnRspSettlementInfoConfirm.currency_id");
        object = msg->mutable_currency_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpOnRspSettlementInfoConfirm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpOnRspSettlementInfoConfirm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), static_cast<int>(this->error_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpOnRspSettlementInfoConfirm.error_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 request_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_last = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_last_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpOnRspSettlementInfoConfirm.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investor_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor_id().data(), static_cast<int>(this->investor_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpOnRspSettlementInfoConfirm.investor_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string confirm_date = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_confirm_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->confirm_date().data(), static_cast<int>(this->confirm_date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpOnRspSettlementInfoConfirm.confirm_date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string confirm_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_confirm_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->confirm_time().data(), static_cast<int>(this->confirm_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpOnRspSettlementInfoConfirm.confirm_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 settlement_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &settlement_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpOnRspSettlementInfoConfirm.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currency_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency_id().data(), static_cast<int>(this->currency_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpOnRspSettlementInfoConfirm.currency_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpOnRspSettlementInfoConfirm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpOnRspSettlementInfoConfirm)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpOnRspSettlementInfoConfirm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpOnRspSettlementInfoConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_id(), output);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_msg(), output);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->request_id(), output);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_last(), output);
  }

  // string broker_id = 5;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->broker_id(), output);
  }

  // string investor_id = 6;
  if (this->investor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_id().data(), static_cast<int>(this->investor_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.investor_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->investor_id(), output);
  }

  // string confirm_date = 7;
  if (this->confirm_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->confirm_date().data(), static_cast<int>(this->confirm_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.confirm_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->confirm_date(), output);
  }

  // string confirm_time = 8;
  if (this->confirm_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->confirm_time().data(), static_cast<int>(this->confirm_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.confirm_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->confirm_time(), output);
  }

  // int32 settlement_id = 9;
  if (this->settlement_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->settlement_id(), output);
  }

  // string account_id = 10;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->account_id(), output);
  }

  // string currency_id = 11;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.currency_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->currency_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpOnRspSettlementInfoConfirm)
}

::google::protobuf::uint8* CtpOnRspSettlementInfoConfirm::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpOnRspSettlementInfoConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_id(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_msg(), target);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->request_id(), target);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_last(), target);
  }

  // string broker_id = 5;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->broker_id(), target);
  }

  // string investor_id = 6;
  if (this->investor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_id().data(), static_cast<int>(this->investor_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.investor_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->investor_id(), target);
  }

  // string confirm_date = 7;
  if (this->confirm_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->confirm_date().data(), static_cast<int>(this->confirm_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.confirm_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->confirm_date(), target);
  }

  // string confirm_time = 8;
  if (this->confirm_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->confirm_time().data(), static_cast<int>(this->confirm_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.confirm_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->confirm_time(), target);
  }

  // int32 settlement_id = 9;
  if (this->settlement_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->settlement_id(), target);
  }

  // string account_id = 10;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->account_id(), target);
  }

  // string currency_id = 11;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpOnRspSettlementInfoConfirm.currency_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->currency_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpOnRspSettlementInfoConfirm)
  return target;
}

size_t CtpOnRspSettlementInfoConfirm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpOnRspSettlementInfoConfirm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // string broker_id = 5;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string investor_id = 6;
  if (this->investor_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor_id());
  }

  // string confirm_date = 7;
  if (this->confirm_date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->confirm_date());
  }

  // string confirm_time = 8;
  if (this->confirm_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->confirm_time());
  }

  // string account_id = 10;
  if (this->account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string currency_id = 11;
  if (this->currency_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency_id());
  }

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_id());
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_id());
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    total_size += 1 + 1;
  }

  // int32 settlement_id = 9;
  if (this->settlement_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->settlement_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpOnRspSettlementInfoConfirm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpOnRspSettlementInfoConfirm)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpOnRspSettlementInfoConfirm* source =
      ::google::protobuf::DynamicCastToGenerated<CtpOnRspSettlementInfoConfirm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpOnRspSettlementInfoConfirm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpOnRspSettlementInfoConfirm)
    MergeFrom(*source);
  }
}

void CtpOnRspSettlementInfoConfirm::MergeFrom(const CtpOnRspSettlementInfoConfirm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpOnRspSettlementInfoConfirm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.investor_id().size() > 0) {

    investor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_id_);
  }
  if (from.confirm_date().size() > 0) {

    confirm_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confirm_date_);
  }
  if (from.confirm_time().size() > 0) {

    confirm_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confirm_time_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.currency_id().size() > 0) {

    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  if (from.error_id() != 0) {
    set_error_id(from.error_id());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.is_last() != 0) {
    set_is_last(from.is_last());
  }
  if (from.settlement_id() != 0) {
    set_settlement_id(from.settlement_id());
  }
}

void CtpOnRspSettlementInfoConfirm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpOnRspSettlementInfoConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpOnRspSettlementInfoConfirm::CopyFrom(const CtpOnRspSettlementInfoConfirm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpOnRspSettlementInfoConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpOnRspSettlementInfoConfirm::IsInitialized() const {
  return true;
}

void CtpOnRspSettlementInfoConfirm::Swap(CtpOnRspSettlementInfoConfirm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpOnRspSettlementInfoConfirm::InternalSwap(CtpOnRspSettlementInfoConfirm* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  investor_id_.Swap(&other->investor_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  confirm_date_.Swap(&other->confirm_date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  confirm_time_.Swap(&other->confirm_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_id_.Swap(&other->currency_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_id_, other->error_id_);
  swap(request_id_, other->request_id_);
  swap(is_last_, other->is_last_);
  swap(settlement_id_, other->settlement_id_);
}

::google::protobuf::Metadata CtpOnRspSettlementInfoConfirm::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpReqQryInvestor::InitAsDefaultInstance() {
}
class CtpReqQryInvestor::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpReqQryInvestor::CtpReqQryInvestor()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpReqQryInvestor)
}
CtpReqQryInvestor::CtpReqQryInvestor(const CtpReqQryInvestor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.CtpReqQryInvestor)
}

void CtpReqQryInvestor::SharedCtor() {
}

CtpReqQryInvestor::~CtpReqQryInvestor() {
  // @@protoc_insertion_point(destructor:pb.CtpReqQryInvestor)
  SharedDtor();
}

void CtpReqQryInvestor::SharedDtor() {
}

void CtpReqQryInvestor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpReqQryInvestor& CtpReqQryInvestor::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpReqQryInvestor_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpReqQryInvestor::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpReqQryInvestor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpReqQryInvestor::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpReqQryInvestor*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpReqQryInvestor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpReqQryInvestor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpReqQryInvestor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpReqQryInvestor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpReqQryInvestor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpReqQryInvestor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpReqQryInvestor)
}

::google::protobuf::uint8* CtpReqQryInvestor::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpReqQryInvestor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpReqQryInvestor)
  return target;
}

size_t CtpReqQryInvestor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpReqQryInvestor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpReqQryInvestor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpReqQryInvestor)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpReqQryInvestor* source =
      ::google::protobuf::DynamicCastToGenerated<CtpReqQryInvestor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpReqQryInvestor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpReqQryInvestor)
    MergeFrom(*source);
  }
}

void CtpReqQryInvestor::MergeFrom(const CtpReqQryInvestor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpReqQryInvestor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CtpReqQryInvestor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpReqQryInvestor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpReqQryInvestor::CopyFrom(const CtpReqQryInvestor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpReqQryInvestor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpReqQryInvestor::IsInitialized() const {
  return true;
}

void CtpReqQryInvestor::Swap(CtpReqQryInvestor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpReqQryInvestor::InternalSwap(CtpReqQryInvestor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CtpReqQryInvestor::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpRspQryInvestor::InitAsDefaultInstance() {
}
class CtpRspQryInvestor::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpRspQryInvestor::kErrorIdFieldNumber;
const int CtpRspQryInvestor::kErrorMsgFieldNumber;
const int CtpRspQryInvestor::kRequestIdFieldNumber;
const int CtpRspQryInvestor::kIsLastFieldNumber;
const int CtpRspQryInvestor::kInvestorIdFieldNumber;
const int CtpRspQryInvestor::kBrokerIdFieldNumber;
const int CtpRspQryInvestor::kInvestorGroupIdFieldNumber;
const int CtpRspQryInvestor::kInvestorNameFieldNumber;
const int CtpRspQryInvestor::kIdentifiedCardTypeFieldNumber;
const int CtpRspQryInvestor::kIdentifiedCardNoFieldNumber;
const int CtpRspQryInvestor::kIsActiveFieldNumber;
const int CtpRspQryInvestor::kTelphoneFieldNumber;
const int CtpRspQryInvestor::kAddressFieldNumber;
const int CtpRspQryInvestor::kOpenDateFieldNumber;
const int CtpRspQryInvestor::kMobileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpRspQryInvestor::CtpRspQryInvestor()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpRspQryInvestor)
}
CtpRspQryInvestor::CtpRspQryInvestor(const CtpRspQryInvestor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_msg().size() > 0) {
    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  investor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor_id().size() > 0) {
    investor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_id_);
  }
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  investor_group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor_group_id().size() > 0) {
    investor_group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_group_id_);
  }
  investor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor_name().size() > 0) {
    investor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_name_);
  }
  identified_card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identified_card_no().size() > 0) {
    identified_card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identified_card_no_);
  }
  telphone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.telphone().size() > 0) {
    telphone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telphone_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  open_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.open_date().size() > 0) {
    open_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_date_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  ::memcpy(&error_id_, &from.error_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&identified_card_type_) -
    reinterpret_cast<char*>(&error_id_)) + sizeof(identified_card_type_));
  // @@protoc_insertion_point(copy_constructor:pb.CtpRspQryInvestor)
}

void CtpRspQryInvestor::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpRspQryInvestor_binding_2eproto.base);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telphone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&identified_card_type_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(identified_card_type_));
}

CtpRspQryInvestor::~CtpRspQryInvestor() {
  // @@protoc_insertion_point(destructor:pb.CtpRspQryInvestor)
  SharedDtor();
}

void CtpRspQryInvestor::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telphone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpRspQryInvestor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpRspQryInvestor& CtpRspQryInvestor::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpRspQryInvestor_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpRspQryInvestor::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpRspQryInvestor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telphone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&identified_card_type_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(identified_card_type_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpRspQryInvestor::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpRspQryInvestor*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string error_msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryInvestor.error_msg");
        object = msg->mutable_error_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 request_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_request_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_last = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_is_last(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string investor_id = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryInvestor.investor_id");
        object = msg->mutable_investor_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string broker_id = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryInvestor.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string investor_group_id = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryInvestor.investor_group_id");
        object = msg->mutable_investor_group_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string investor_name = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryInvestor.investor_name");
        object = msg->mutable_investor_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 identified_card_type = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_identified_card_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string identified_card_no = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryInvestor.identified_card_no");
        object = msg->mutable_identified_card_no();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool is_active = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_is_active(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string telphone = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryInvestor.telphone");
        object = msg->mutable_telphone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string address = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryInvestor.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string open_date = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryInvestor.open_date");
        object = msg->mutable_open_date();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string mobile = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryInvestor.mobile");
        object = msg->mutable_mobile();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpRspQryInvestor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpRspQryInvestor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), static_cast<int>(this->error_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryInvestor.error_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 request_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_last = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_last_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investor_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor_id().data(), static_cast<int>(this->investor_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryInvestor.investor_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryInvestor.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investor_group_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor_group_id().data(), static_cast<int>(this->investor_group_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryInvestor.investor_group_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investor_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor_name().data(), static_cast<int>(this->investor_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryInvestor.investor_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 identified_card_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &identified_card_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identified_card_no = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identified_card_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identified_card_no().data(), static_cast<int>(this->identified_card_no().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryInvestor.identified_card_no"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_active = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string telphone = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_telphone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->telphone().data(), static_cast<int>(this->telphone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryInvestor.telphone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryInvestor.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string open_date = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_open_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->open_date().data(), static_cast<int>(this->open_date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryInvestor.open_date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), static_cast<int>(this->mobile().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryInvestor.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpRspQryInvestor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpRspQryInvestor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpRspQryInvestor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpRspQryInvestor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_id(), output);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_msg(), output);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->request_id(), output);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_last(), output);
  }

  // string investor_id = 5;
  if (this->investor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_id().data(), static_cast<int>(this->investor_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.investor_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->investor_id(), output);
  }

  // string broker_id = 6;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->broker_id(), output);
  }

  // string investor_group_id = 7;
  if (this->investor_group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_group_id().data(), static_cast<int>(this->investor_group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.investor_group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->investor_group_id(), output);
  }

  // string investor_name = 8;
  if (this->investor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_name().data(), static_cast<int>(this->investor_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.investor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->investor_name(), output);
  }

  // int32 identified_card_type = 9;
  if (this->identified_card_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->identified_card_type(), output);
  }

  // string identified_card_no = 10;
  if (this->identified_card_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identified_card_no().data(), static_cast<int>(this->identified_card_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.identified_card_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->identified_card_no(), output);
  }

  // bool is_active = 11;
  if (this->is_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_active(), output);
  }

  // string telphone = 12;
  if (this->telphone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->telphone().data(), static_cast<int>(this->telphone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.telphone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->telphone(), output);
  }

  // string address = 13;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->address(), output);
  }

  // string open_date = 14;
  if (this->open_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open_date().data(), static_cast<int>(this->open_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.open_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->open_date(), output);
  }

  // string mobile = 15;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->mobile(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpRspQryInvestor)
}

::google::protobuf::uint8* CtpRspQryInvestor::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpRspQryInvestor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_id(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_msg(), target);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->request_id(), target);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_last(), target);
  }

  // string investor_id = 5;
  if (this->investor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_id().data(), static_cast<int>(this->investor_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.investor_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->investor_id(), target);
  }

  // string broker_id = 6;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->broker_id(), target);
  }

  // string investor_group_id = 7;
  if (this->investor_group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_group_id().data(), static_cast<int>(this->investor_group_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.investor_group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->investor_group_id(), target);
  }

  // string investor_name = 8;
  if (this->investor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_name().data(), static_cast<int>(this->investor_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.investor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->investor_name(), target);
  }

  // int32 identified_card_type = 9;
  if (this->identified_card_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->identified_card_type(), target);
  }

  // string identified_card_no = 10;
  if (this->identified_card_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identified_card_no().data(), static_cast<int>(this->identified_card_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.identified_card_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->identified_card_no(), target);
  }

  // bool is_active = 11;
  if (this->is_active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_active(), target);
  }

  // string telphone = 12;
  if (this->telphone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->telphone().data(), static_cast<int>(this->telphone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.telphone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->telphone(), target);
  }

  // string address = 13;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->address(), target);
  }

  // string open_date = 14;
  if (this->open_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open_date().data(), static_cast<int>(this->open_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.open_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->open_date(), target);
  }

  // string mobile = 15;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryInvestor.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->mobile(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpRspQryInvestor)
  return target;
}

size_t CtpRspQryInvestor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpRspQryInvestor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // string investor_id = 5;
  if (this->investor_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor_id());
  }

  // string broker_id = 6;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string investor_group_id = 7;
  if (this->investor_group_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor_group_id());
  }

  // string investor_name = 8;
  if (this->investor_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor_name());
  }

  // string identified_card_no = 10;
  if (this->identified_card_no().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identified_card_no());
  }

  // string telphone = 12;
  if (this->telphone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->telphone());
  }

  // string address = 13;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string open_date = 14;
  if (this->open_date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->open_date());
  }

  // string mobile = 15;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_id());
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_id());
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    total_size += 1 + 1;
  }

  // bool is_active = 11;
  if (this->is_active() != 0) {
    total_size += 1 + 1;
  }

  // int32 identified_card_type = 9;
  if (this->identified_card_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->identified_card_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpRspQryInvestor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpRspQryInvestor)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpRspQryInvestor* source =
      ::google::protobuf::DynamicCastToGenerated<CtpRspQryInvestor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpRspQryInvestor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpRspQryInvestor)
    MergeFrom(*source);
  }
}

void CtpRspQryInvestor::MergeFrom(const CtpRspQryInvestor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpRspQryInvestor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.investor_id().size() > 0) {

    investor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_id_);
  }
  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.investor_group_id().size() > 0) {

    investor_group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_group_id_);
  }
  if (from.investor_name().size() > 0) {

    investor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_name_);
  }
  if (from.identified_card_no().size() > 0) {

    identified_card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identified_card_no_);
  }
  if (from.telphone().size() > 0) {

    telphone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telphone_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.open_date().size() > 0) {

    open_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_date_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.error_id() != 0) {
    set_error_id(from.error_id());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.is_last() != 0) {
    set_is_last(from.is_last());
  }
  if (from.is_active() != 0) {
    set_is_active(from.is_active());
  }
  if (from.identified_card_type() != 0) {
    set_identified_card_type(from.identified_card_type());
  }
}

void CtpRspQryInvestor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpRspQryInvestor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpRspQryInvestor::CopyFrom(const CtpRspQryInvestor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpRspQryInvestor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpRspQryInvestor::IsInitialized() const {
  return true;
}

void CtpRspQryInvestor::Swap(CtpRspQryInvestor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpRspQryInvestor::InternalSwap(CtpRspQryInvestor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  investor_id_.Swap(&other->investor_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  investor_group_id_.Swap(&other->investor_group_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  investor_name_.Swap(&other->investor_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  identified_card_no_.Swap(&other->identified_card_no_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  telphone_.Swap(&other->telphone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  open_date_.Swap(&other->open_date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mobile_.Swap(&other->mobile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_id_, other->error_id_);
  swap(request_id_, other->request_id_);
  swap(is_last_, other->is_last_);
  swap(is_active_, other->is_active_);
  swap(identified_card_type_, other->identified_card_type_);
}

::google::protobuf::Metadata CtpRspQryInvestor::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpReqQryTransferBank::InitAsDefaultInstance() {
}
class CtpReqQryTransferBank::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpReqQryTransferBank::kBrokerIdFieldNumber;
const int CtpReqQryTransferBank::kInvestorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpReqQryTransferBank::CtpReqQryTransferBank()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpReqQryTransferBank)
}
CtpReqQryTransferBank::CtpReqQryTransferBank(const CtpReqQryTransferBank& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  investor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor_id().size() > 0) {
    investor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_id_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.CtpReqQryTransferBank)
}

void CtpReqQryTransferBank::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpReqQryTransferBank_binding_2eproto.base);
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CtpReqQryTransferBank::~CtpReqQryTransferBank() {
  // @@protoc_insertion_point(destructor:pb.CtpReqQryTransferBank)
  SharedDtor();
}

void CtpReqQryTransferBank::SharedDtor() {
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpReqQryTransferBank::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpReqQryTransferBank& CtpReqQryTransferBank::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpReqQryTransferBank_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpReqQryTransferBank::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpReqQryTransferBank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpReqQryTransferBank::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpReqQryTransferBank*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string broker_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqQryTransferBank.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string investor_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqQryTransferBank.investor_id");
        object = msg->mutable_investor_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpReqQryTransferBank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpReqQryTransferBank)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string broker_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqQryTransferBank.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investor_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor_id().data(), static_cast<int>(this->investor_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqQryTransferBank.investor_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpReqQryTransferBank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpReqQryTransferBank)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpReqQryTransferBank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpReqQryTransferBank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryTransferBank.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->broker_id(), output);
  }

  // string investor_id = 2;
  if (this->investor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_id().data(), static_cast<int>(this->investor_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryTransferBank.investor_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->investor_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpReqQryTransferBank)
}

::google::protobuf::uint8* CtpReqQryTransferBank::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpReqQryTransferBank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryTransferBank.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->broker_id(), target);
  }

  // string investor_id = 2;
  if (this->investor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_id().data(), static_cast<int>(this->investor_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqQryTransferBank.investor_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->investor_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpReqQryTransferBank)
  return target;
}

size_t CtpReqQryTransferBank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpReqQryTransferBank)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string broker_id = 1;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string investor_id = 2;
  if (this->investor_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpReqQryTransferBank::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpReqQryTransferBank)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpReqQryTransferBank* source =
      ::google::protobuf::DynamicCastToGenerated<CtpReqQryTransferBank>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpReqQryTransferBank)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpReqQryTransferBank)
    MergeFrom(*source);
  }
}

void CtpReqQryTransferBank::MergeFrom(const CtpReqQryTransferBank& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpReqQryTransferBank)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.investor_id().size() > 0) {

    investor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_id_);
  }
}

void CtpReqQryTransferBank::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpReqQryTransferBank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpReqQryTransferBank::CopyFrom(const CtpReqQryTransferBank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpReqQryTransferBank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpReqQryTransferBank::IsInitialized() const {
  return true;
}

void CtpReqQryTransferBank::Swap(CtpReqQryTransferBank* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpReqQryTransferBank::InternalSwap(CtpReqQryTransferBank* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  investor_id_.Swap(&other->investor_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CtpReqQryTransferBank::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpRspQryTransferBank::InitAsDefaultInstance() {
}
class CtpRspQryTransferBank::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpRspQryTransferBank::kErrorIdFieldNumber;
const int CtpRspQryTransferBank::kErrorMsgFieldNumber;
const int CtpRspQryTransferBank::kRequestIdFieldNumber;
const int CtpRspQryTransferBank::kIsLastFieldNumber;
const int CtpRspQryTransferBank::kBrokerIdFieldNumber;
const int CtpRspQryTransferBank::kBankIdFieldNumber;
const int CtpRspQryTransferBank::kBankBranchIdFieldNumber;
const int CtpRspQryTransferBank::kBankNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpRspQryTransferBank::CtpRspQryTransferBank()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpRspQryTransferBank)
}
CtpRspQryTransferBank::CtpRspQryTransferBank(const CtpRspQryTransferBank& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_msg().size() > 0) {
    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  bank_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_id().size() > 0) {
    bank_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_id_);
  }
  bank_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_branch_id().size() > 0) {
    bank_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_branch_id_);
  }
  bank_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_name().size() > 0) {
    bank_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_name_);
  }
  ::memcpy(&error_id_, &from.error_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_last_) -
    reinterpret_cast<char*>(&error_id_)) + sizeof(is_last_));
  // @@protoc_insertion_point(copy_constructor:pb.CtpRspQryTransferBank)
}

void CtpRspQryTransferBank::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpRspQryTransferBank_binding_2eproto.base);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_last_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(is_last_));
}

CtpRspQryTransferBank::~CtpRspQryTransferBank() {
  // @@protoc_insertion_point(destructor:pb.CtpRspQryTransferBank)
  SharedDtor();
}

void CtpRspQryTransferBank::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpRspQryTransferBank::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpRspQryTransferBank& CtpRspQryTransferBank::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpRspQryTransferBank_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpRspQryTransferBank::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpRspQryTransferBank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_last_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(is_last_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpRspQryTransferBank::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpRspQryTransferBank*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string error_msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryTransferBank.error_msg");
        object = msg->mutable_error_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 request_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_request_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_last = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_is_last(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string broker_id = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryTransferBank.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_id = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryTransferBank.bank_id");
        object = msg->mutable_bank_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_branch_id = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryTransferBank.bank_branch_id");
        object = msg->mutable_bank_branch_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_name = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspQryTransferBank.bank_name");
        object = msg->mutable_bank_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpRspQryTransferBank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpRspQryTransferBank)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), static_cast<int>(this->error_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryTransferBank.error_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 request_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_last = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_last_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryTransferBank.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_id().data(), static_cast<int>(this->bank_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryTransferBank.bank_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_branch_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_branch_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryTransferBank.bank_branch_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_name().data(), static_cast<int>(this->bank_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspQryTransferBank.bank_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpRspQryTransferBank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpRspQryTransferBank)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpRspQryTransferBank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpRspQryTransferBank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_id(), output);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryTransferBank.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_msg(), output);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->request_id(), output);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_last(), output);
  }

  // string broker_id = 5;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryTransferBank.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->broker_id(), output);
  }

  // string bank_id = 6;
  if (this->bank_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_id().data(), static_cast<int>(this->bank_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryTransferBank.bank_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->bank_id(), output);
  }

  // string bank_branch_id = 7;
  if (this->bank_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryTransferBank.bank_branch_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->bank_branch_id(), output);
  }

  // string bank_name = 8;
  if (this->bank_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_name().data(), static_cast<int>(this->bank_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryTransferBank.bank_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->bank_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpRspQryTransferBank)
}

::google::protobuf::uint8* CtpRspQryTransferBank::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpRspQryTransferBank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_id(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryTransferBank.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_msg(), target);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->request_id(), target);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_last(), target);
  }

  // string broker_id = 5;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryTransferBank.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->broker_id(), target);
  }

  // string bank_id = 6;
  if (this->bank_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_id().data(), static_cast<int>(this->bank_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryTransferBank.bank_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->bank_id(), target);
  }

  // string bank_branch_id = 7;
  if (this->bank_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryTransferBank.bank_branch_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->bank_branch_id(), target);
  }

  // string bank_name = 8;
  if (this->bank_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_name().data(), static_cast<int>(this->bank_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspQryTransferBank.bank_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->bank_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpRspQryTransferBank)
  return target;
}

size_t CtpRspQryTransferBank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpRspQryTransferBank)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // string broker_id = 5;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string bank_id = 6;
  if (this->bank_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_id());
  }

  // string bank_branch_id = 7;
  if (this->bank_branch_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_branch_id());
  }

  // string bank_name = 8;
  if (this->bank_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_name());
  }

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_id());
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_id());
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpRspQryTransferBank::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpRspQryTransferBank)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpRspQryTransferBank* source =
      ::google::protobuf::DynamicCastToGenerated<CtpRspQryTransferBank>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpRspQryTransferBank)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpRspQryTransferBank)
    MergeFrom(*source);
  }
}

void CtpRspQryTransferBank::MergeFrom(const CtpRspQryTransferBank& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpRspQryTransferBank)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.bank_id().size() > 0) {

    bank_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_id_);
  }
  if (from.bank_branch_id().size() > 0) {

    bank_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_branch_id_);
  }
  if (from.bank_name().size() > 0) {

    bank_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_name_);
  }
  if (from.error_id() != 0) {
    set_error_id(from.error_id());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.is_last() != 0) {
    set_is_last(from.is_last());
  }
}

void CtpRspQryTransferBank::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpRspQryTransferBank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpRspQryTransferBank::CopyFrom(const CtpRspQryTransferBank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpRspQryTransferBank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpRspQryTransferBank::IsInitialized() const {
  return true;
}

void CtpRspQryTransferBank::Swap(CtpRspQryTransferBank* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpRspQryTransferBank::InternalSwap(CtpRspQryTransferBank* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_id_.Swap(&other->bank_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_branch_id_.Swap(&other->bank_branch_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_name_.Swap(&other->bank_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_id_, other->error_id_);
  swap(request_id_, other->request_id_);
  swap(is_last_, other->is_last_);
}

::google::protobuf::Metadata CtpRspQryTransferBank::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpReqTransfer::InitAsDefaultInstance() {
}
class CtpReqTransfer::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpReqTransfer::kTradeCodeFieldNumber;
const int CtpReqTransfer::kBankIdFieldNumber;
const int CtpReqTransfer::kBankBranchIdFieldNumber;
const int CtpReqTransfer::kBrokerIdFieldNumber;
const int CtpReqTransfer::kBrokerBranchIdFieldNumber;
const int CtpReqTransfer::kTradeDateFieldNumber;
const int CtpReqTransfer::kTradeTimeFieldNumber;
const int CtpReqTransfer::kBankSerialFieldNumber;
const int CtpReqTransfer::kTradingDayFieldNumber;
const int CtpReqTransfer::kPlateSeriealFieldNumber;
const int CtpReqTransfer::kLastFragmentFieldNumber;
const int CtpReqTransfer::kSessionIdFieldNumber;
const int CtpReqTransfer::kCustomerNameFieldNumber;
const int CtpReqTransfer::kIdCardTypeFieldNumber;
const int CtpReqTransfer::kIdentifiedCardNoFieldNumber;
const int CtpReqTransfer::kCustTypeFieldNumber;
const int CtpReqTransfer::kBankAccountFieldNumber;
const int CtpReqTransfer::kBankPasswordFieldNumber;
const int CtpReqTransfer::kAccountIdFieldNumber;
const int CtpReqTransfer::kPasswordFieldNumber;
const int CtpReqTransfer::kInstallIdFieldNumber;
const int CtpReqTransfer::kFutureSerialFieldNumber;
const int CtpReqTransfer::kUserIdFieldNumber;
const int CtpReqTransfer::kVerifyCertNoFlagFieldNumber;
const int CtpReqTransfer::kCurrencyIdFieldNumber;
const int CtpReqTransfer::kTradeAmountFieldNumber;
const int CtpReqTransfer::kFutureFetchAmountFieldNumber;
const int CtpReqTransfer::kFeePayFlagFieldNumber;
const int CtpReqTransfer::kCustFeeFieldNumber;
const int CtpReqTransfer::kBrokerFeeFieldNumber;
const int CtpReqTransfer::kMessageFieldNumber;
const int CtpReqTransfer::kDigestFieldNumber;
const int CtpReqTransfer::kBankAccTypeFieldNumber;
const int CtpReqTransfer::kDeviceIdFieldNumber;
const int CtpReqTransfer::kBankSecuAccFieldNumber;
const int CtpReqTransfer::kBankPwdFlagFieldNumber;
const int CtpReqTransfer::kSecuPwdFlagFieldNumber;
const int CtpReqTransfer::kOperNoFieldNumber;
const int CtpReqTransfer::kRequestIdFieldNumber;
const int CtpReqTransfer::kTidFieldNumber;
const int CtpReqTransfer::kTransferStatusFieldNumber;
const int CtpReqTransfer::kLongCustomerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpReqTransfer::CtpReqTransfer()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpReqTransfer)
}
CtpReqTransfer::CtpReqTransfer(const CtpReqTransfer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trade_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trade_code().size() > 0) {
    trade_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_code_);
  }
  bank_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_id().size() > 0) {
    bank_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_id_);
  }
  bank_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_branch_id().size() > 0) {
    bank_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_branch_id_);
  }
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  broker_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_branch_id().size() > 0) {
    broker_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_branch_id_);
  }
  trade_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trade_date().size() > 0) {
    trade_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_date_);
  }
  trade_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trade_time().size() > 0) {
    trade_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_time_);
  }
  bank_serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_serial().size() > 0) {
    bank_serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_serial_);
  }
  trading_day_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trading_day().size() > 0) {
    trading_day_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trading_day_);
  }
  last_fragment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_fragment().size() > 0) {
    last_fragment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_fragment_);
  }
  customer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_name().size() > 0) {
    customer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_name_);
  }
  identified_card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identified_card_no().size() > 0) {
    identified_card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identified_card_no_);
  }
  cust_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cust_type().size() > 0) {
    cust_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cust_type_);
  }
  bank_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_account().size() > 0) {
    bank_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_account_);
  }
  bank_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_password().size() > 0) {
    bank_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_password_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  verify_cert_no_flag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verify_cert_no_flag().size() > 0) {
    verify_cert_no_flag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_cert_no_flag_);
  }
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currency_id().size() > 0) {
    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.digest().size() > 0) {
    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_id().size() > 0) {
    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  bank_secu_acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_secu_acc().size() > 0) {
    bank_secu_acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_secu_acc_);
  }
  bank_pwd_flag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bank_pwd_flag().size() > 0) {
    bank_pwd_flag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_pwd_flag_);
  }
  secu_pwd_flag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secu_pwd_flag().size() > 0) {
    secu_pwd_flag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secu_pwd_flag_);
  }
  oper_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oper_no().size() > 0) {
    oper_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oper_no_);
  }
  transfer_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transfer_status().size() > 0) {
    transfer_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transfer_status_);
  }
  long_customer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.long_customer_name().size() > 0) {
    long_customer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_customer_name_);
  }
  ::memcpy(&plate_serieal_, &from.plate_serieal_,
    static_cast<size_t>(reinterpret_cast<char*>(&tid_) -
    reinterpret_cast<char*>(&plate_serieal_)) + sizeof(tid_));
  // @@protoc_insertion_point(copy_constructor:pb.CtpReqTransfer)
}

void CtpReqTransfer::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpReqTransfer_binding_2eproto.base);
  trade_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_branch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trading_day_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_fragment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cust_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_cert_no_flag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_secu_acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_pwd_flag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secu_pwd_flag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oper_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_customer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&plate_serieal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tid_) -
      reinterpret_cast<char*>(&plate_serieal_)) + sizeof(tid_));
}

CtpReqTransfer::~CtpReqTransfer() {
  // @@protoc_insertion_point(destructor:pb.CtpReqTransfer)
  SharedDtor();
}

void CtpReqTransfer::SharedDtor() {
  trade_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_branch_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_serial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trading_day_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_fragment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cust_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_cert_no_flag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_secu_acc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_pwd_flag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secu_pwd_flag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oper_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_customer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpReqTransfer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpReqTransfer& CtpReqTransfer::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpReqTransfer_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpReqTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpReqTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trade_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_serial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trading_day_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_fragment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cust_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_cert_no_flag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_secu_acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_pwd_flag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secu_pwd_flag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oper_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_customer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&plate_serieal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tid_) -
      reinterpret_cast<char*>(&plate_serieal_)) + sizeof(tid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpReqTransfer::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpReqTransfer*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string trade_code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.trade_code");
        object = msg->mutable_trade_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.bank_id");
        object = msg->mutable_bank_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_branch_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.bank_branch_id");
        object = msg->mutable_bank_branch_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string broker_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.broker_id");
        object = msg->mutable_broker_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string broker_branch_id = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.broker_branch_id");
        object = msg->mutable_broker_branch_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string trade_date = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.trade_date");
        object = msg->mutable_trade_date();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string trade_time = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.trade_time");
        object = msg->mutable_trade_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_serial = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.bank_serial");
        object = msg->mutable_bank_serial();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string trading_day = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.trading_day");
        object = msg->mutable_trading_day();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 plate_serieal = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_plate_serieal(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string last_fragment = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.last_fragment");
        object = msg->mutable_last_fragment();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 session_id = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_session_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string customer_name = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.customer_name");
        object = msg->mutable_customer_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 id_card_type = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_id_card_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string identified_card_no = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.identified_card_no");
        object = msg->mutable_identified_card_no();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cust_type = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.cust_type");
        object = msg->mutable_cust_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_account = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.bank_account");
        object = msg->mutable_bank_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_password = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.bank_password");
        object = msg->mutable_bank_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string account_id = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.account_id");
        object = msg->mutable_account_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 install_id = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 168) goto handle_unusual;
        msg->set_install_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 future_serial = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 176) goto handle_unusual;
        msg->set_future_serial(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string user_id = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.user_id");
        object = msg->mutable_user_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string verify_cert_no_flag = 24;
      case 24: {
        if (static_cast<::google::protobuf::uint8>(tag) != 194) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.verify_cert_no_flag");
        object = msg->mutable_verify_cert_no_flag();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string currency_id = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 202) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.currency_id");
        object = msg->mutable_currency_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // double trade_amount = 26;
      case 26: {
        if (static_cast<::google::protobuf::uint8>(tag) != 209) goto handle_unusual;
        msg->set_trade_amount(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double future_fetch_amount = 27;
      case 27: {
        if (static_cast<::google::protobuf::uint8>(tag) != 217) goto handle_unusual;
        msg->set_future_fetch_amount(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // int32 fee_pay_flag = 28;
      case 28: {
        if (static_cast<::google::protobuf::uint8>(tag) != 224) goto handle_unusual;
        msg->set_fee_pay_flag(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double cust_fee = 29;
      case 29: {
        if (static_cast<::google::protobuf::uint8>(tag) != 233) goto handle_unusual;
        msg->set_cust_fee(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double broker_fee = 30;
      case 30: {
        if (static_cast<::google::protobuf::uint8>(tag) != 241) goto handle_unusual;
        msg->set_broker_fee(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // string message = 31;
      case 31: {
        if (static_cast<::google::protobuf::uint8>(tag) != 250) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string digest = 32;
      case 32: {
        if (static_cast<::google::protobuf::uint8>(tag) != 2) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.digest");
        object = msg->mutable_digest();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 bank_acc_type = 33;
      case 33: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_bank_acc_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string device_id = 34;
      case 34: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.device_id");
        object = msg->mutable_device_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_secu_acc = 35;
      case 35: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.bank_secu_acc");
        object = msg->mutable_bank_secu_acc();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string bank_pwd_flag = 36;
      case 36: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.bank_pwd_flag");
        object = msg->mutable_bank_pwd_flag();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string secu_pwd_flag = 37;
      case 37: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.secu_pwd_flag");
        object = msg->mutable_secu_pwd_flag();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string oper_no = 38;
      case 38: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.oper_no");
        object = msg->mutable_oper_no();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 request_id = 39;
      case 39: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_request_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 tid = 40;
      case 40: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_tid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string transfer_status = 41;
      case 41: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.transfer_status");
        object = msg->mutable_transfer_status();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string long_customer_name = 42;
      case 42: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpReqTransfer.long_customer_name");
        object = msg->mutable_long_customer_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpReqTransfer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpReqTransfer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string trade_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trade_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trade_code().data(), static_cast<int>(this->trade_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.trade_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_id().data(), static_cast<int>(this->bank_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.bank_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_branch_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_branch_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.bank_branch_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_branch_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_branch_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_branch_id().data(), static_cast<int>(this->broker_branch_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.broker_branch_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trade_date = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trade_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trade_date().data(), static_cast<int>(this->trade_date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.trade_date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trade_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trade_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trade_time().data(), static_cast<int>(this->trade_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.trade_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_serial = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_serial()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_serial().data(), static_cast<int>(this->bank_serial().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.bank_serial"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trading_day = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trading_day()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trading_day().data(), static_cast<int>(this->trading_day().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.trading_day"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 plate_serieal = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &plate_serieal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_fragment = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_fragment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_fragment().data(), static_cast<int>(this->last_fragment().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.last_fragment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 session_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_name = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_name().data(), static_cast<int>(this->customer_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.customer_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id_card_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_card_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identified_card_no = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identified_card_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identified_card_no().data(), static_cast<int>(this->identified_card_no().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.identified_card_no"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cust_type = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cust_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cust_type().data(), static_cast<int>(this->cust_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.cust_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_account = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_account().data(), static_cast<int>(this->bank_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.bank_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_password = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_password().data(), static_cast<int>(this->bank_password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.bank_password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 install_id = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (168 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &install_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 future_serial = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (176 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &future_serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verify_cert_no_flag = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (194 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_cert_no_flag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verify_cert_no_flag().data(), static_cast<int>(this->verify_cert_no_flag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.verify_cert_no_flag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currency_id = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (202 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency_id().data(), static_cast<int>(this->currency_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.currency_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double trade_amount = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (209 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trade_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double future_fetch_amount = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (217 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &future_fetch_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fee_pay_flag = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (224 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fee_pay_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cust_fee = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (233 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cust_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double broker_fee = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (241 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &broker_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (250 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string digest = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (258 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_digest()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->digest().data(), static_cast<int>(this->digest().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.digest"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bank_acc_type = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (264 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bank_acc_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_id = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (274 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_id().data(), static_cast<int>(this->device_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.device_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_secu_acc = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (282 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_secu_acc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_secu_acc().data(), static_cast<int>(this->bank_secu_acc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.bank_secu_acc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bank_pwd_flag = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (290 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_pwd_flag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bank_pwd_flag().data(), static_cast<int>(this->bank_pwd_flag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.bank_pwd_flag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secu_pwd_flag = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (298 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secu_pwd_flag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secu_pwd_flag().data(), static_cast<int>(this->secu_pwd_flag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.secu_pwd_flag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oper_no = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (306 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oper_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oper_no().data(), static_cast<int>(this->oper_no().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.oper_no"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 request_id = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (312 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tid = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (320 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transfer_status = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (330 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transfer_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transfer_status().data(), static_cast<int>(this->transfer_status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.transfer_status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string long_customer_name = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (338 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_long_customer_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->long_customer_name().data(), static_cast<int>(this->long_customer_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpReqTransfer.long_customer_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpReqTransfer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpReqTransfer)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpReqTransfer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpReqTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string trade_code = 1;
  if (this->trade_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_code().data(), static_cast<int>(this->trade_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.trade_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->trade_code(), output);
  }

  // string bank_id = 2;
  if (this->bank_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_id().data(), static_cast<int>(this->bank_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bank_id(), output);
  }

  // string bank_branch_id = 3;
  if (this->bank_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_branch_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bank_branch_id(), output);
  }

  // string broker_id = 4;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->broker_id(), output);
  }

  // string broker_branch_id = 5;
  if (this->broker_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_branch_id().data(), static_cast<int>(this->broker_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.broker_branch_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->broker_branch_id(), output);
  }

  // string trade_date = 6;
  if (this->trade_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_date().data(), static_cast<int>(this->trade_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.trade_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->trade_date(), output);
  }

  // string trade_time = 7;
  if (this->trade_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_time().data(), static_cast<int>(this->trade_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.trade_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->trade_time(), output);
  }

  // string bank_serial = 8;
  if (this->bank_serial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_serial().data(), static_cast<int>(this->bank_serial().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_serial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->bank_serial(), output);
  }

  // string trading_day = 9;
  if (this->trading_day().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trading_day().data(), static_cast<int>(this->trading_day().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.trading_day");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->trading_day(), output);
  }

  // int32 plate_serieal = 10;
  if (this->plate_serieal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->plate_serieal(), output);
  }

  // string last_fragment = 11;
  if (this->last_fragment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_fragment().data(), static_cast<int>(this->last_fragment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.last_fragment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->last_fragment(), output);
  }

  // int32 session_id = 12;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->session_id(), output);
  }

  // string customer_name = 13;
  if (this->customer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_name().data(), static_cast<int>(this->customer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.customer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->customer_name(), output);
  }

  // int32 id_card_type = 14;
  if (this->id_card_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->id_card_type(), output);
  }

  // string identified_card_no = 15;
  if (this->identified_card_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identified_card_no().data(), static_cast<int>(this->identified_card_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.identified_card_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->identified_card_no(), output);
  }

  // string cust_type = 16;
  if (this->cust_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cust_type().data(), static_cast<int>(this->cust_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.cust_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->cust_type(), output);
  }

  // string bank_account = 17;
  if (this->bank_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_account().data(), static_cast<int>(this->bank_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->bank_account(), output);
  }

  // string bank_password = 18;
  if (this->bank_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_password().data(), static_cast<int>(this->bank_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->bank_password(), output);
  }

  // string account_id = 19;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->account_id(), output);
  }

  // string password = 20;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->password(), output);
  }

  // int32 install_id = 21;
  if (this->install_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->install_id(), output);
  }

  // int32 future_serial = 22;
  if (this->future_serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->future_serial(), output);
  }

  // string user_id = 23;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->user_id(), output);
  }

  // string verify_cert_no_flag = 24;
  if (this->verify_cert_no_flag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_cert_no_flag().data(), static_cast<int>(this->verify_cert_no_flag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.verify_cert_no_flag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->verify_cert_no_flag(), output);
  }

  // string currency_id = 25;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.currency_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->currency_id(), output);
  }

  // double trade_amount = 26;
  if (this->trade_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(26, this->trade_amount(), output);
  }

  // double future_fetch_amount = 27;
  if (this->future_fetch_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->future_fetch_amount(), output);
  }

  // int32 fee_pay_flag = 28;
  if (this->fee_pay_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->fee_pay_flag(), output);
  }

  // double cust_fee = 29;
  if (this->cust_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->cust_fee(), output);
  }

  // double broker_fee = 30;
  if (this->broker_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(30, this->broker_fee(), output);
  }

  // string message = 31;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      31, this->message(), output);
  }

  // string digest = 32;
  if (this->digest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->digest().data(), static_cast<int>(this->digest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.digest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->digest(), output);
  }

  // int32 bank_acc_type = 33;
  if (this->bank_acc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->bank_acc_type(), output);
  }

  // string device_id = 34;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), static_cast<int>(this->device_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->device_id(), output);
  }

  // string bank_secu_acc = 35;
  if (this->bank_secu_acc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_secu_acc().data(), static_cast<int>(this->bank_secu_acc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_secu_acc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      35, this->bank_secu_acc(), output);
  }

  // string bank_pwd_flag = 36;
  if (this->bank_pwd_flag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_pwd_flag().data(), static_cast<int>(this->bank_pwd_flag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_pwd_flag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      36, this->bank_pwd_flag(), output);
  }

  // string secu_pwd_flag = 37;
  if (this->secu_pwd_flag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secu_pwd_flag().data(), static_cast<int>(this->secu_pwd_flag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.secu_pwd_flag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      37, this->secu_pwd_flag(), output);
  }

  // string oper_no = 38;
  if (this->oper_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oper_no().data(), static_cast<int>(this->oper_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.oper_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      38, this->oper_no(), output);
  }

  // int32 request_id = 39;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->request_id(), output);
  }

  // int32 tid = 40;
  if (this->tid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->tid(), output);
  }

  // string transfer_status = 41;
  if (this->transfer_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transfer_status().data(), static_cast<int>(this->transfer_status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.transfer_status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->transfer_status(), output);
  }

  // string long_customer_name = 42;
  if (this->long_customer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_customer_name().data(), static_cast<int>(this->long_customer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.long_customer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      42, this->long_customer_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpReqTransfer)
}

::google::protobuf::uint8* CtpReqTransfer::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpReqTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string trade_code = 1;
  if (this->trade_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_code().data(), static_cast<int>(this->trade_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.trade_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->trade_code(), target);
  }

  // string bank_id = 2;
  if (this->bank_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_id().data(), static_cast<int>(this->bank_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bank_id(), target);
  }

  // string bank_branch_id = 3;
  if (this->bank_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_branch_id().data(), static_cast<int>(this->bank_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_branch_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bank_branch_id(), target);
  }

  // string broker_id = 4;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->broker_id(), target);
  }

  // string broker_branch_id = 5;
  if (this->broker_branch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_branch_id().data(), static_cast<int>(this->broker_branch_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.broker_branch_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->broker_branch_id(), target);
  }

  // string trade_date = 6;
  if (this->trade_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_date().data(), static_cast<int>(this->trade_date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.trade_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->trade_date(), target);
  }

  // string trade_time = 7;
  if (this->trade_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_time().data(), static_cast<int>(this->trade_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.trade_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->trade_time(), target);
  }

  // string bank_serial = 8;
  if (this->bank_serial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_serial().data(), static_cast<int>(this->bank_serial().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_serial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->bank_serial(), target);
  }

  // string trading_day = 9;
  if (this->trading_day().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trading_day().data(), static_cast<int>(this->trading_day().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.trading_day");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->trading_day(), target);
  }

  // int32 plate_serieal = 10;
  if (this->plate_serieal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->plate_serieal(), target);
  }

  // string last_fragment = 11;
  if (this->last_fragment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_fragment().data(), static_cast<int>(this->last_fragment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.last_fragment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->last_fragment(), target);
  }

  // int32 session_id = 12;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->session_id(), target);
  }

  // string customer_name = 13;
  if (this->customer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_name().data(), static_cast<int>(this->customer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.customer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->customer_name(), target);
  }

  // int32 id_card_type = 14;
  if (this->id_card_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->id_card_type(), target);
  }

  // string identified_card_no = 15;
  if (this->identified_card_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identified_card_no().data(), static_cast<int>(this->identified_card_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.identified_card_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->identified_card_no(), target);
  }

  // string cust_type = 16;
  if (this->cust_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cust_type().data(), static_cast<int>(this->cust_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.cust_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->cust_type(), target);
  }

  // string bank_account = 17;
  if (this->bank_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_account().data(), static_cast<int>(this->bank_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->bank_account(), target);
  }

  // string bank_password = 18;
  if (this->bank_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_password().data(), static_cast<int>(this->bank_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->bank_password(), target);
  }

  // string account_id = 19;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->account_id(), target);
  }

  // string password = 20;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->password(), target);
  }

  // int32 install_id = 21;
  if (this->install_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->install_id(), target);
  }

  // int32 future_serial = 22;
  if (this->future_serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->future_serial(), target);
  }

  // string user_id = 23;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->user_id(), target);
  }

  // string verify_cert_no_flag = 24;
  if (this->verify_cert_no_flag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_cert_no_flag().data(), static_cast<int>(this->verify_cert_no_flag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.verify_cert_no_flag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->verify_cert_no_flag(), target);
  }

  // string currency_id = 25;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.currency_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->currency_id(), target);
  }

  // double trade_amount = 26;
  if (this->trade_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(26, this->trade_amount(), target);
  }

  // double future_fetch_amount = 27;
  if (this->future_fetch_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(27, this->future_fetch_amount(), target);
  }

  // int32 fee_pay_flag = 28;
  if (this->fee_pay_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->fee_pay_flag(), target);
  }

  // double cust_fee = 29;
  if (this->cust_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(29, this->cust_fee(), target);
  }

  // double broker_fee = 30;
  if (this->broker_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(30, this->broker_fee(), target);
  }

  // string message = 31;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->message(), target);
  }

  // string digest = 32;
  if (this->digest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->digest().data(), static_cast<int>(this->digest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.digest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->digest(), target);
  }

  // int32 bank_acc_type = 33;
  if (this->bank_acc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->bank_acc_type(), target);
  }

  // string device_id = 34;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), static_cast<int>(this->device_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->device_id(), target);
  }

  // string bank_secu_acc = 35;
  if (this->bank_secu_acc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_secu_acc().data(), static_cast<int>(this->bank_secu_acc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_secu_acc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->bank_secu_acc(), target);
  }

  // string bank_pwd_flag = 36;
  if (this->bank_pwd_flag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bank_pwd_flag().data(), static_cast<int>(this->bank_pwd_flag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.bank_pwd_flag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->bank_pwd_flag(), target);
  }

  // string secu_pwd_flag = 37;
  if (this->secu_pwd_flag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secu_pwd_flag().data(), static_cast<int>(this->secu_pwd_flag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.secu_pwd_flag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->secu_pwd_flag(), target);
  }

  // string oper_no = 38;
  if (this->oper_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oper_no().data(), static_cast<int>(this->oper_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.oper_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        38, this->oper_no(), target);
  }

  // int32 request_id = 39;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->request_id(), target);
  }

  // int32 tid = 40;
  if (this->tid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->tid(), target);
  }

  // string transfer_status = 41;
  if (this->transfer_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transfer_status().data(), static_cast<int>(this->transfer_status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.transfer_status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->transfer_status(), target);
  }

  // string long_customer_name = 42;
  if (this->long_customer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_customer_name().data(), static_cast<int>(this->long_customer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpReqTransfer.long_customer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->long_customer_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpReqTransfer)
  return target;
}

size_t CtpReqTransfer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpReqTransfer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trade_code = 1;
  if (this->trade_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trade_code());
  }

  // string bank_id = 2;
  if (this->bank_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_id());
  }

  // string bank_branch_id = 3;
  if (this->bank_branch_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_branch_id());
  }

  // string broker_id = 4;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string broker_branch_id = 5;
  if (this->broker_branch_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_branch_id());
  }

  // string trade_date = 6;
  if (this->trade_date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trade_date());
  }

  // string trade_time = 7;
  if (this->trade_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trade_time());
  }

  // string bank_serial = 8;
  if (this->bank_serial().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_serial());
  }

  // string trading_day = 9;
  if (this->trading_day().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trading_day());
  }

  // string last_fragment = 11;
  if (this->last_fragment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_fragment());
  }

  // string customer_name = 13;
  if (this->customer_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_name());
  }

  // string identified_card_no = 15;
  if (this->identified_card_no().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identified_card_no());
  }

  // string cust_type = 16;
  if (this->cust_type().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cust_type());
  }

  // string bank_account = 17;
  if (this->bank_account().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_account());
  }

  // string bank_password = 18;
  if (this->bank_password().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_password());
  }

  // string account_id = 19;
  if (this->account_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string password = 20;
  if (this->password().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string user_id = 23;
  if (this->user_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string verify_cert_no_flag = 24;
  if (this->verify_cert_no_flag().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verify_cert_no_flag());
  }

  // string currency_id = 25;
  if (this->currency_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency_id());
  }

  // string message = 31;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string digest = 32;
  if (this->digest().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->digest());
  }

  // string device_id = 34;
  if (this->device_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_id());
  }

  // string bank_secu_acc = 35;
  if (this->bank_secu_acc().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_secu_acc());
  }

  // string bank_pwd_flag = 36;
  if (this->bank_pwd_flag().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bank_pwd_flag());
  }

  // string secu_pwd_flag = 37;
  if (this->secu_pwd_flag().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secu_pwd_flag());
  }

  // string oper_no = 38;
  if (this->oper_no().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oper_no());
  }

  // string transfer_status = 41;
  if (this->transfer_status().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transfer_status());
  }

  // string long_customer_name = 42;
  if (this->long_customer_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->long_customer_name());
  }

  // int32 plate_serieal = 10;
  if (this->plate_serieal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->plate_serieal());
  }

  // int32 session_id = 12;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->session_id());
  }

  // int32 id_card_type = 14;
  if (this->id_card_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id_card_type());
  }

  // int32 install_id = 21;
  if (this->install_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->install_id());
  }

  // int32 future_serial = 22;
  if (this->future_serial() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->future_serial());
  }

  // int32 fee_pay_flag = 28;
  if (this->fee_pay_flag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fee_pay_flag());
  }

  // double trade_amount = 26;
  if (this->trade_amount() != 0) {
    total_size += 2 + 8;
  }

  // double future_fetch_amount = 27;
  if (this->future_fetch_amount() != 0) {
    total_size += 2 + 8;
  }

  // double cust_fee = 29;
  if (this->cust_fee() != 0) {
    total_size += 2 + 8;
  }

  // double broker_fee = 30;
  if (this->broker_fee() != 0) {
    total_size += 2 + 8;
  }

  // int32 bank_acc_type = 33;
  if (this->bank_acc_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bank_acc_type());
  }

  // int32 request_id = 39;
  if (this->request_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_id());
  }

  // int32 tid = 40;
  if (this->tid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpReqTransfer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpReqTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpReqTransfer* source =
      ::google::protobuf::DynamicCastToGenerated<CtpReqTransfer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpReqTransfer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpReqTransfer)
    MergeFrom(*source);
  }
}

void CtpReqTransfer::MergeFrom(const CtpReqTransfer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpReqTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trade_code().size() > 0) {

    trade_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_code_);
  }
  if (from.bank_id().size() > 0) {

    bank_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_id_);
  }
  if (from.bank_branch_id().size() > 0) {

    bank_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_branch_id_);
  }
  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.broker_branch_id().size() > 0) {

    broker_branch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_branch_id_);
  }
  if (from.trade_date().size() > 0) {

    trade_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_date_);
  }
  if (from.trade_time().size() > 0) {

    trade_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_time_);
  }
  if (from.bank_serial().size() > 0) {

    bank_serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_serial_);
  }
  if (from.trading_day().size() > 0) {

    trading_day_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trading_day_);
  }
  if (from.last_fragment().size() > 0) {

    last_fragment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_fragment_);
  }
  if (from.customer_name().size() > 0) {

    customer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_name_);
  }
  if (from.identified_card_no().size() > 0) {

    identified_card_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identified_card_no_);
  }
  if (from.cust_type().size() > 0) {

    cust_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cust_type_);
  }
  if (from.bank_account().size() > 0) {

    bank_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_account_);
  }
  if (from.bank_password().size() > 0) {

    bank_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_password_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.verify_cert_no_flag().size() > 0) {

    verify_cert_no_flag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_cert_no_flag_);
  }
  if (from.currency_id().size() > 0) {

    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.digest().size() > 0) {

    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
  if (from.device_id().size() > 0) {

    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  if (from.bank_secu_acc().size() > 0) {

    bank_secu_acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_secu_acc_);
  }
  if (from.bank_pwd_flag().size() > 0) {

    bank_pwd_flag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_pwd_flag_);
  }
  if (from.secu_pwd_flag().size() > 0) {

    secu_pwd_flag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secu_pwd_flag_);
  }
  if (from.oper_no().size() > 0) {

    oper_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oper_no_);
  }
  if (from.transfer_status().size() > 0) {

    transfer_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transfer_status_);
  }
  if (from.long_customer_name().size() > 0) {

    long_customer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_customer_name_);
  }
  if (from.plate_serieal() != 0) {
    set_plate_serieal(from.plate_serieal());
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.id_card_type() != 0) {
    set_id_card_type(from.id_card_type());
  }
  if (from.install_id() != 0) {
    set_install_id(from.install_id());
  }
  if (from.future_serial() != 0) {
    set_future_serial(from.future_serial());
  }
  if (from.fee_pay_flag() != 0) {
    set_fee_pay_flag(from.fee_pay_flag());
  }
  if (from.trade_amount() != 0) {
    set_trade_amount(from.trade_amount());
  }
  if (from.future_fetch_amount() != 0) {
    set_future_fetch_amount(from.future_fetch_amount());
  }
  if (from.cust_fee() != 0) {
    set_cust_fee(from.cust_fee());
  }
  if (from.broker_fee() != 0) {
    set_broker_fee(from.broker_fee());
  }
  if (from.bank_acc_type() != 0) {
    set_bank_acc_type(from.bank_acc_type());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.tid() != 0) {
    set_tid(from.tid());
  }
}

void CtpReqTransfer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpReqTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpReqTransfer::CopyFrom(const CtpReqTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpReqTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpReqTransfer::IsInitialized() const {
  return true;
}

void CtpReqTransfer::Swap(CtpReqTransfer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpReqTransfer::InternalSwap(CtpReqTransfer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  trade_code_.Swap(&other->trade_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_id_.Swap(&other->bank_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_branch_id_.Swap(&other->bank_branch_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broker_branch_id_.Swap(&other->broker_branch_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trade_date_.Swap(&other->trade_date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trade_time_.Swap(&other->trade_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_serial_.Swap(&other->bank_serial_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trading_day_.Swap(&other->trading_day_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_fragment_.Swap(&other->last_fragment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  customer_name_.Swap(&other->customer_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  identified_card_no_.Swap(&other->identified_card_no_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cust_type_.Swap(&other->cust_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_account_.Swap(&other->bank_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_password_.Swap(&other->bank_password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_cert_no_flag_.Swap(&other->verify_cert_no_flag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_id_.Swap(&other->currency_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  digest_.Swap(&other->digest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_id_.Swap(&other->device_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_secu_acc_.Swap(&other->bank_secu_acc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_pwd_flag_.Swap(&other->bank_pwd_flag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  secu_pwd_flag_.Swap(&other->secu_pwd_flag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  oper_no_.Swap(&other->oper_no_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  transfer_status_.Swap(&other->transfer_status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  long_customer_name_.Swap(&other->long_customer_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(plate_serieal_, other->plate_serieal_);
  swap(session_id_, other->session_id_);
  swap(id_card_type_, other->id_card_type_);
  swap(install_id_, other->install_id_);
  swap(future_serial_, other->future_serial_);
  swap(fee_pay_flag_, other->fee_pay_flag_);
  swap(trade_amount_, other->trade_amount_);
  swap(future_fetch_amount_, other->future_fetch_amount_);
  swap(cust_fee_, other->cust_fee_);
  swap(broker_fee_, other->broker_fee_);
  swap(bank_acc_type_, other->bank_acc_type_);
  swap(request_id_, other->request_id_);
  swap(tid_, other->tid_);
}

::google::protobuf::Metadata CtpReqTransfer::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CtpRspTransfer::InitAsDefaultInstance() {
  ::pb::_CtpRspTransfer_default_instance_._instance.get_mutable()->req_ = const_cast< ::pb::CtpReqTransfer*>(
      ::pb::CtpReqTransfer::internal_default_instance());
}
class CtpRspTransfer::HasBitSetters {
 public:
  static const ::pb::CtpReqTransfer& req(const CtpRspTransfer* msg);
};

const ::pb::CtpReqTransfer&
CtpRspTransfer::HasBitSetters::req(const CtpRspTransfer* msg) {
  return *msg->req_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpRspTransfer::kErrorIdFieldNumber;
const int CtpRspTransfer::kErrorMsgFieldNumber;
const int CtpRspTransfer::kRequestIdFieldNumber;
const int CtpRspTransfer::kIsLastFieldNumber;
const int CtpRspTransfer::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpRspTransfer::CtpRspTransfer()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CtpRspTransfer)
}
CtpRspTransfer::CtpRspTransfer(const CtpRspTransfer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_msg().size() > 0) {
    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.has_req()) {
    req_ = new ::pb::CtpReqTransfer(*from.req_);
  } else {
    req_ = nullptr;
  }
  ::memcpy(&error_id_, &from.error_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_last_) -
    reinterpret_cast<char*>(&error_id_)) + sizeof(is_last_));
  // @@protoc_insertion_point(copy_constructor:pb.CtpRspTransfer)
}

void CtpRspTransfer::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CtpRspTransfer_binding_2eproto.base);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_last_) -
      reinterpret_cast<char*>(&req_)) + sizeof(is_last_));
}

CtpRspTransfer::~CtpRspTransfer() {
  // @@protoc_insertion_point(destructor:pb.CtpRspTransfer)
  SharedDtor();
}

void CtpRspTransfer::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete req_;
}

void CtpRspTransfer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CtpRspTransfer& CtpRspTransfer::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CtpRspTransfer_binding_2eproto.base);
  return *internal_default_instance();
}


void CtpRspTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CtpRspTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  ::memset(&error_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_last_) -
      reinterpret_cast<char*>(&error_id_)) + sizeof(is_last_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CtpRspTransfer::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CtpRspTransfer*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string error_msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.CtpRspTransfer.error_msg");
        object = msg->mutable_error_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 request_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_request_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_last = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_is_last(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .pb.CtpReqTransfer req = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::CtpReqTransfer::_InternalParse;
        object = msg->mutable_req();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CtpRspTransfer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CtpRspTransfer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), static_cast<int>(this->error_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CtpRspTransfer.error_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 request_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_last = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_last_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.CtpReqTransfer req = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CtpRspTransfer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CtpRspTransfer)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CtpRspTransfer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CtpRspTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_id(), output);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspTransfer.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_msg(), output);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->request_id(), output);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_last(), output);
  }

  // .pb.CtpReqTransfer req = 5;
  if (this->has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::req(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CtpRspTransfer)
}

::google::protobuf::uint8* CtpRspTransfer::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CtpRspTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_id(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CtpRspTransfer.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_msg(), target);
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->request_id(), target);
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_last(), target);
  }

  // .pb.CtpReqTransfer req = 5;
  if (this->has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::req(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CtpRspTransfer)
  return target;
}

size_t CtpRspTransfer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CtpRspTransfer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // .pb.CtpReqTransfer req = 5;
  if (this->has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // int32 error_id = 1;
  if (this->error_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_id());
  }

  // int32 request_id = 3;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_id());
  }

  // bool is_last = 4;
  if (this->is_last() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpRspTransfer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CtpRspTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpRspTransfer* source =
      ::google::protobuf::DynamicCastToGenerated<CtpRspTransfer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CtpRspTransfer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CtpRspTransfer)
    MergeFrom(*source);
  }
}

void CtpRspTransfer::MergeFrom(const CtpRspTransfer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CtpRspTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.has_req()) {
    mutable_req()->::pb::CtpReqTransfer::MergeFrom(from.req());
  }
  if (from.error_id() != 0) {
    set_error_id(from.error_id());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.is_last() != 0) {
    set_is_last(from.is_last());
  }
}

void CtpRspTransfer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CtpRspTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpRspTransfer::CopyFrom(const CtpRspTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CtpRspTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpRspTransfer::IsInitialized() const {
  return true;
}

void CtpRspTransfer::Swap(CtpRspTransfer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpRspTransfer::InternalSwap(CtpRspTransfer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(req_, other->req_);
  swap(error_id_, other->error_id_);
  swap(request_id_, other->request_id_);
  swap(is_last_, other->is_last_);
}

::google::protobuf::Metadata CtpRspTransfer::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_binding_2eproto);
  return ::file_level_metadata_binding_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::pb::CtpReqQryAccountRegister* Arena::CreateMaybeMessage< ::pb::CtpReqQryAccountRegister >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpReqQryAccountRegister >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpRspQryAccountRegister* Arena::CreateMaybeMessage< ::pb::CtpRspQryAccountRegister >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpRspQryAccountRegister >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpReqAuthencate* Arena::CreateMaybeMessage< ::pb::CtpReqAuthencate >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpReqAuthencate >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpRspAuthencate* Arena::CreateMaybeMessage< ::pb::CtpRspAuthencate >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpRspAuthencate >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpReqUserLogin* Arena::CreateMaybeMessage< ::pb::CtpReqUserLogin >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpReqUserLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpRspUserLogin* Arena::CreateMaybeMessage< ::pb::CtpRspUserLogin >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpRspUserLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpReqConnect* Arena::CreateMaybeMessage< ::pb::CtpReqConnect >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpReqConnect >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpOnFrontConnected* Arena::CreateMaybeMessage< ::pb::CtpOnFrontConnected >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpOnFrontConnected >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpOnFrontDisconnected* Arena::CreateMaybeMessage< ::pb::CtpOnFrontDisconnected >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpOnFrontDisconnected >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpReqSettlementInfoConfirm* Arena::CreateMaybeMessage< ::pb::CtpReqSettlementInfoConfirm >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpReqSettlementInfoConfirm >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpOnRspSettlementInfoConfirm* Arena::CreateMaybeMessage< ::pb::CtpOnRspSettlementInfoConfirm >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpOnRspSettlementInfoConfirm >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpReqQryInvestor* Arena::CreateMaybeMessage< ::pb::CtpReqQryInvestor >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpReqQryInvestor >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpRspQryInvestor* Arena::CreateMaybeMessage< ::pb::CtpRspQryInvestor >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpRspQryInvestor >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpReqQryTransferBank* Arena::CreateMaybeMessage< ::pb::CtpReqQryTransferBank >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpReqQryTransferBank >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpRspQryTransferBank* Arena::CreateMaybeMessage< ::pb::CtpRspQryTransferBank >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpRspQryTransferBank >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpReqTransfer* Arena::CreateMaybeMessage< ::pb::CtpReqTransfer >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpReqTransfer >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::CtpRspTransfer* Arena::CreateMaybeMessage< ::pb::CtpRspTransfer >(Arena* arena) {
  return Arena::CreateInternal< ::pb::CtpRspTransfer >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
