// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goshare.proto

#include "goshare.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SSEStockOption_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_goshare_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_I18Item_goshare_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_goshare_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_XPermission_goshare_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_goshare_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_XUsersItem_goshare_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_goshare_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RouteItem_goshare_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_goshare_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_XUser_goshare_2eproto;
namespace pb {
class EmptyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmptyRequest> _instance;
} _EmptyRequest_default_instance_;
class EmptyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmptyResponse> _instance;
} _EmptyResponse_default_instance_;
class ReqSSEStockOptionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqSSEStockOptionList> _instance;
} _ReqSSEStockOptionList_default_instance_;
class RspSSEStockOptionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspSSEStockOptionList> _instance;
} _RspSSEStockOptionList_default_instance_;
class ReqUserLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqUserLogin> _instance;
} _ReqUserLogin_default_instance_;
class RspUserLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspUserLogin> _instance;
} _RspUserLogin_default_instance_;
class I18ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<I18Item> _instance;
} _I18Item_default_instance_;
class RouteItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RouteItem> _instance;
} _RouteItem_default_instance_;
class RspGetRoutesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspGetRoutes> _instance;
} _RspGetRoutes_default_instance_;
class XUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XUser> _instance;
} _XUser_default_instance_;
class RspCurrentUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspCurrentUser> _instance;
} _RspCurrentUser_default_instance_;
class XPermissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XPermission> _instance;
} _XPermission_default_instance_;
class XUsersItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XUsersItem> _instance;
} _XUsersItem_default_instance_;
class XUsersItemListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XUsersItemList> _instance;
} _XUsersItemList_default_instance_;
}  // namespace pb
static void InitDefaultsEmptyRequest_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_EmptyRequest_default_instance_;
    new (ptr) ::pb::EmptyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::EmptyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmptyRequest_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmptyRequest_goshare_2eproto}, {}};

static void InitDefaultsEmptyResponse_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_EmptyResponse_default_instance_;
    new (ptr) ::pb::EmptyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::EmptyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmptyResponse_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmptyResponse_goshare_2eproto}, {}};

static void InitDefaultsReqSSEStockOptionList_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReqSSEStockOptionList_default_instance_;
    new (ptr) ::pb::ReqSSEStockOptionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReqSSEStockOptionList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqSSEStockOptionList_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqSSEStockOptionList_goshare_2eproto}, {}};

static void InitDefaultsRspSSEStockOptionList_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspSSEStockOptionList_default_instance_;
    new (ptr) ::pb::RspSSEStockOptionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspSSEStockOptionList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspSSEStockOptionList_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspSSEStockOptionList_goshare_2eproto}, {
      &scc_info_SSEStockOption_common_2eproto.base,}};

static void InitDefaultsReqUserLogin_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReqUserLogin_default_instance_;
    new (ptr) ::pb::ReqUserLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReqUserLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqUserLogin_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqUserLogin_goshare_2eproto}, {}};

static void InitDefaultsRspUserLogin_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspUserLogin_default_instance_;
    new (ptr) ::pb::RspUserLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspUserLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspUserLogin_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspUserLogin_goshare_2eproto}, {}};

static void InitDefaultsI18Item_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_I18Item_default_instance_;
    new (ptr) ::pb::I18Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::I18Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_I18Item_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsI18Item_goshare_2eproto}, {}};

static void InitDefaultsRouteItem_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RouteItem_default_instance_;
    new (ptr) ::pb::RouteItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RouteItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RouteItem_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRouteItem_goshare_2eproto}, {
      &scc_info_I18Item_goshare_2eproto.base,}};

static void InitDefaultsRspGetRoutes_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspGetRoutes_default_instance_;
    new (ptr) ::pb::RspGetRoutes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspGetRoutes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspGetRoutes_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspGetRoutes_goshare_2eproto}, {
      &scc_info_RouteItem_goshare_2eproto.base,}};

static void InitDefaultsXUser_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_XUser_default_instance_;
    new (ptr) ::pb::XUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::XUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_XUser_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsXUser_goshare_2eproto}, {
      &scc_info_XPermission_goshare_2eproto.base,}};

static void InitDefaultsRspCurrentUser_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspCurrentUser_default_instance_;
    new (ptr) ::pb::RspCurrentUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspCurrentUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspCurrentUser_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspCurrentUser_goshare_2eproto}, {
      &scc_info_XUser_goshare_2eproto.base,}};

static void InitDefaultsXPermission_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_XPermission_default_instance_;
    new (ptr) ::pb::XPermission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::XPermission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XPermission_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXPermission_goshare_2eproto}, {}};

static void InitDefaultsXUsersItem_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_XUsersItem_default_instance_;
    new (ptr) ::pb::XUsersItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::XUsersItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XUsersItem_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXUsersItem_goshare_2eproto}, {}};

static void InitDefaultsXUsersItemList_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_XUsersItemList_default_instance_;
    new (ptr) ::pb::XUsersItemList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::XUsersItemList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_XUsersItemList_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsXUsersItemList_goshare_2eproto}, {
      &scc_info_XUsersItem_goshare_2eproto.base,}};

void InitDefaults_goshare_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_EmptyRequest_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmptyResponse_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqSSEStockOptionList_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspSSEStockOptionList_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqUserLogin_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspUserLogin_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_I18Item_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RouteItem_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspGetRoutes_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XUser_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspCurrentUser_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XPermission_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XUsersItem_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XUsersItemList_goshare_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_goshare_2eproto[14];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_goshare_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_goshare_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_goshare_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::EmptyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::EmptyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::ReqSSEStockOptionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspSSEStockOptionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::RspSSEStockOptionList, list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::ReqUserLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ReqUserLogin, user_),
  PROTOBUF_FIELD_OFFSET(::pb::ReqUserLogin, password_),
  PROTOBUF_FIELD_OFFSET(::pb::ReqUserLogin, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspUserLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::RspUserLogin, message_),
  PROTOBUF_FIELD_OFFSET(::pb::RspUserLogin, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::I18Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::I18Item, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RouteItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::RouteItem, icon_),
  PROTOBUF_FIELD_OFFSET(::pb::RouteItem, id_),
  PROTOBUF_FIELD_OFFSET(::pb::RouteItem, name_),
  PROTOBUF_FIELD_OFFSET(::pb::RouteItem, en_),
  PROTOBUF_FIELD_OFFSET(::pb::RouteItem, zh_),
  PROTOBUF_FIELD_OFFSET(::pb::RouteItem, route_),
  PROTOBUF_FIELD_OFFSET(::pb::RouteItem, breadcrumb_parent_id_),
  PROTOBUF_FIELD_OFFSET(::pb::RouteItem, menu_parent_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspGetRoutes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::RspGetRoutes, list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::XUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::XUser, avatar_),
  PROTOBUF_FIELD_OFFSET(::pb::XUser, id_),
  PROTOBUF_FIELD_OFFSET(::pb::XUser, username_),
  PROTOBUF_FIELD_OFFSET(::pb::XUser, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspCurrentUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::RspCurrentUser, success_),
  PROTOBUF_FIELD_OFFSET(::pb::RspCurrentUser, user_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::XPermission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::XPermission, role_),
  PROTOBUF_FIELD_OFFSET(::pb::XPermission, visit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, address_),
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, age_),
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, avatar_),
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, create_time_),
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, email_),
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, id_),
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, is_male_),
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, name_),
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, nick_name_),
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItem, phone_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItemList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::XUsersItemList, list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::EmptyRequest)},
  { 5, -1, sizeof(::pb::EmptyResponse)},
  { 10, -1, sizeof(::pb::ReqSSEStockOptionList)},
  { 15, -1, sizeof(::pb::RspSSEStockOptionList)},
  { 21, -1, sizeof(::pb::ReqUserLogin)},
  { 29, -1, sizeof(::pb::RspUserLogin)},
  { 36, -1, sizeof(::pb::I18Item)},
  { 42, -1, sizeof(::pb::RouteItem)},
  { 55, -1, sizeof(::pb::RspGetRoutes)},
  { 61, -1, sizeof(::pb::XUser)},
  { 70, -1, sizeof(::pb::RspCurrentUser)},
  { 77, -1, sizeof(::pb::XPermission)},
  { 84, -1, sizeof(::pb::XUsersItem)},
  { 99, -1, sizeof(::pb::XUsersItemList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_EmptyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_EmptyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ReqSSEStockOptionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RspSSEStockOptionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ReqUserLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RspUserLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_I18Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RouteItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RspGetRoutes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_XUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RspCurrentUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_XPermission_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_XUsersItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_XUsersItemList_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_goshare_2eproto = {
  {}, AddDescriptors_goshare_2eproto, "goshare.proto", schemas,
  file_default_instances, TableStruct_goshare_2eproto::offsets,
  file_level_metadata_goshare_2eproto, 14, file_level_enum_descriptors_goshare_2eproto, file_level_service_descriptors_goshare_2eproto,
};

const char descriptor_table_protodef_goshare_2eproto[] =
  "\n\rgoshare.proto\022\002pb\032\014common.proto\032\021marke"
  "t_data.proto\032\034google/api/annotations.pro"
  "to\032\016strategy.proto\032\rtrading.proto\"\016\n\014Emp"
  "tyRequest\"\017\n\rEmptyResponse\"\027\n\025ReqSSEStoc"
  "kOptionList\"9\n\025RspSSEStockOptionList\022 \n\004"
  "list\030\001 \003(\0132\022.pb.SSEStockOption\"<\n\014ReqUse"
  "rLogin\022\014\n\004user\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\014"
  "\n\004type\030\003 \001(\t\"0\n\014RspUserLogin\022\017\n\007message\030"
  "\001 \001(\t\022\017\n\007success\030\002 \001(\010\"\027\n\007I18Item\022\014\n\004nam"
  "e\030\001 \001(\t\"\252\001\n\tRouteItem\022\014\n\004icon\030\001 \001(\t\022\n\n\002i"
  "d\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\027\n\002en\030\004 \001(\0132\013.pb.I"
  "18Item\022\027\n\002zh\030\005 \001(\0132\013.pb.I18Item\022\r\n\005route"
  "\030\006 \001(\t\022\034\n\024breadcrumb_parent_id\030\007 \001(\t\022\026\n\016"
  "menu_parent_id\030\010 \001(\t\"+\n\014RspGetRoutes\022\033\n\004"
  "list\030\001 \003(\0132\r.pb.RouteItem\"[\n\005XUser\022\016\n\006av"
  "atar\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\022\020\n\010username\030\003 \001(\t"
  "\022$\n\013permissions\030\004 \001(\0132\017.pb.XPermission\":"
  "\n\016RspCurrentUser\022\017\n\007success\030\001 \001(\010\022\027\n\004use"
  "r\030\002 \001(\0132\t.pb.XUser\"*\n\013XPermission\022\014\n\004rol"
  "e\030\001 \001(\t\022\r\n\005visit\030\002 \003(\t\"\253\001\n\nXUsersItem\022\017\n"
  "\007address\030\001 \001(\t\022\013\n\003age\030\002 \001(\005\022\016\n\006avatar\030\003 "
  "\001(\t\022\023\n\013create_time\030\004 \001(\t\022\r\n\005email\030\005 \001(\t\022"
  "\n\n\002id\030\006 \001(\t\022\017\n\007is_male\030\007 \001(\010\022\014\n\004name\030\010 \001"
  "(\t\022\021\n\tnick_name\030\t \001(\t\022\r\n\005phone\030\n \001(\t\".\n\016"
  "XUsersItemList\022\034\n\004list\030\001 \003(\0132\016.pb.XUsers"
  "Item2\316\013\n\007GoShare\022q\n\010LastTick\022\n.pb.Symbol"
  "\032\026.pb.MarketDataSnapshot\"A\202\323\344\223\002;\"\020/api/v"
  "1/lastTick:\001*Z$\022\"/api/v1/lastTick/{excha"
  "nge}/{code}\022\217\001\n\022SSEStockOptionList\022\031.pb."
  "ReqSSEStockOptionList\032\031.pb.RspSSEStockOp"
  "tionList\"C\202\323\344\223\002=\"\032/api/v1/sseStockOption"
  "List:\001*Z\034\022\032/api/v1/sseStockOptionList\022p\n"
  "\023SubscribeMarketData\022\032.pb.ReqSubscribeMa"
  "rketData\032\026.pb.MarketDataSnapshot\"#\202\323\344\223\002\035"
  "\022\033/api/v1/subscribeMarketData0\001\022f\n\010PushT"
  "ick\022\026.pb.MarketDataSnapshot\032\021.pb.EmptyRe"
  "sponse\"/\202\323\344\223\002)\"\020/api/v1/pushTick:\001*Z\022\022\020/"
  "api/v1/pushTick\022N\n\tUserLogin\022\020.pb.ReqUse"
  "rLogin\032\020.pb.RspUserLogin\"\035\202\323\344\223\002\027\"\022/api/v"
  "1/user/login:\001*\022N\n\nUserLogout\022\020.pb.Empty"
  "Request\032\021.pb.EmptyResponse\"\033\202\323\344\223\002\025\022\023/api"
  "/v1/user/logout\022D\n\006Routes\022\020.pb.EmptyRequ"
  "est\032\020.pb.RspGetRoutes\"\026\202\323\344\223\002\020\022\016/api/v1/r"
  "outes\022I\n\013CurrentUser\022\020.pb.EmptyRequest\032\022"
  ".pb.RspCurrentUser\"\024\202\323\344\223\002\016\022\014/api/v1/user"
  "\022D\n\005Users\022\020.pb.EmptyRequest\032\022.pb.XUsersI"
  "temList\"\025\202\323\344\223\002\017\022\r/api/v1/users\022Q\n\017GetStr"
  "ategyList\022\020.pb.EmptyRequest\032\020.pb.Strateg"
  "yList\"\032\202\323\344\223\002\024\022\022/api/v1/strategies\022N\n\013Get"
  "Strategy\022\022.pb.ReqGetStrategy\032\014.pb.Strate"
  "gy\"\035\202\323\344\223\002\027\022\025/api/v1/strategy/{id}\022N\n\016Cre"
  "ateStrategy\022\014.pb.Strategy\032\021.pb.EmptyResp"
  "onse\"\033\202\323\344\223\002\025\"\020/api/v1/strategy:\001*\022Y\n\016Del"
  "eteStrategy\022\025.pb.ReqDeleteStrategy\032\021.pb."
  "EmptyResponse\"\035\202\323\344\223\002\027*\025/api/v1/strategy/"
  "{id}\022_\n\023GetTradingRouteList\022\020.pb.EmptyRe"
  "quest\032\024.pb.TradingRouteList\" \202\323\344\223\002\032\022\030/ap"
  "i/v1/tradingRouteList\022W\n\017AddTradingRoute"
  "\022\020.pb.TradingRoute\032\021.pb.EmptyResponse\"\037\202"
  "\323\344\223\002\031\"\024/api/v1/tradingRoute:\001*\022e\n\022Delete"
  "TradingRoute\022\031.pb.ReqDeleteTradingRoute\032"
  "\021.pb.EmptyResponse\"!\202\323\344\223\002\033*\031/api/v1/trad"
  "ingRoute/{id}b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_goshare_2eproto = {
  false, InitDefaults_goshare_2eproto, 
  descriptor_table_protodef_goshare_2eproto,
  "goshare.proto", &assign_descriptors_table_goshare_2eproto, 2501,
};

void AddDescriptors_goshare_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[5] =
  {
    ::AddDescriptors_common_2eproto,
    ::AddDescriptors_market_5fdata_2eproto,
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_strategy_2eproto,
    ::AddDescriptors_trading_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_goshare_2eproto, deps, 5);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_goshare_2eproto = []() { AddDescriptors_goshare_2eproto(); return true; }();
namespace pb {

// ===================================================================

void EmptyRequest::InitAsDefaultInstance() {
}
class EmptyRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyRequest::EmptyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.EmptyRequest)
}
EmptyRequest::EmptyRequest(const EmptyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.EmptyRequest)
}

void EmptyRequest::SharedCtor() {
}

EmptyRequest::~EmptyRequest() {
  // @@protoc_insertion_point(destructor:pb.EmptyRequest)
  SharedDtor();
}

void EmptyRequest::SharedDtor() {
}

void EmptyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmptyRequest& EmptyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EmptyRequest_goshare_2eproto.base);
  return *internal_default_instance();
}


void EmptyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.EmptyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EmptyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EmptyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EmptyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.EmptyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.EmptyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.EmptyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EmptyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.EmptyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.EmptyRequest)
}

::google::protobuf::uint8* EmptyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.EmptyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.EmptyRequest)
  return target;
}

size_t EmptyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.EmptyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.EmptyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<EmptyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.EmptyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.EmptyRequest)
    MergeFrom(*source);
  }
}

void EmptyRequest::MergeFrom(const EmptyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.EmptyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.EmptyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyRequest::CopyFrom(const EmptyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.EmptyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyRequest::IsInitialized() const {
  return true;
}

void EmptyRequest::Swap(EmptyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyRequest::InternalSwap(EmptyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmptyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EmptyResponse::InitAsDefaultInstance() {
}
class EmptyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyResponse::EmptyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.EmptyResponse)
}
EmptyResponse::EmptyResponse(const EmptyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.EmptyResponse)
}

void EmptyResponse::SharedCtor() {
}

EmptyResponse::~EmptyResponse() {
  // @@protoc_insertion_point(destructor:pb.EmptyResponse)
  SharedDtor();
}

void EmptyResponse::SharedDtor() {
}

void EmptyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmptyResponse& EmptyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EmptyResponse_goshare_2eproto.base);
  return *internal_default_instance();
}


void EmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EmptyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EmptyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EmptyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.EmptyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.EmptyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.EmptyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EmptyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.EmptyResponse)
}

::google::protobuf::uint8* EmptyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.EmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.EmptyResponse)
  return target;
}

size_t EmptyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.EmptyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EmptyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.EmptyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.EmptyResponse)
    MergeFrom(*source);
  }
}

void EmptyResponse::MergeFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyResponse::CopyFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyResponse::IsInitialized() const {
  return true;
}

void EmptyResponse::Swap(EmptyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyResponse::InternalSwap(EmptyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmptyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReqSSEStockOptionList::InitAsDefaultInstance() {
}
class ReqSSEStockOptionList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqSSEStockOptionList::ReqSSEStockOptionList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReqSSEStockOptionList)
}
ReqSSEStockOptionList::ReqSSEStockOptionList(const ReqSSEStockOptionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ReqSSEStockOptionList)
}

void ReqSSEStockOptionList::SharedCtor() {
}

ReqSSEStockOptionList::~ReqSSEStockOptionList() {
  // @@protoc_insertion_point(destructor:pb.ReqSSEStockOptionList)
  SharedDtor();
}

void ReqSSEStockOptionList::SharedDtor() {
}

void ReqSSEStockOptionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqSSEStockOptionList& ReqSSEStockOptionList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqSSEStockOptionList_goshare_2eproto.base);
  return *internal_default_instance();
}


void ReqSSEStockOptionList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReqSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqSSEStockOptionList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqSSEStockOptionList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqSSEStockOptionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReqSSEStockOptionList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReqSSEStockOptionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReqSSEStockOptionList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqSSEStockOptionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReqSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReqSSEStockOptionList)
}

::google::protobuf::uint8* ReqSSEStockOptionList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReqSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReqSSEStockOptionList)
  return target;
}

size_t ReqSSEStockOptionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReqSSEStockOptionList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqSSEStockOptionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReqSSEStockOptionList)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqSSEStockOptionList* source =
      ::google::protobuf::DynamicCastToGenerated<ReqSSEStockOptionList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReqSSEStockOptionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReqSSEStockOptionList)
    MergeFrom(*source);
  }
}

void ReqSSEStockOptionList::MergeFrom(const ReqSSEStockOptionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReqSSEStockOptionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReqSSEStockOptionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReqSSEStockOptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSSEStockOptionList::CopyFrom(const ReqSSEStockOptionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReqSSEStockOptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSSEStockOptionList::IsInitialized() const {
  return true;
}

void ReqSSEStockOptionList::Swap(ReqSSEStockOptionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqSSEStockOptionList::InternalSwap(ReqSSEStockOptionList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqSSEStockOptionList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RspSSEStockOptionList::InitAsDefaultInstance() {
}
class RspSSEStockOptionList::HasBitSetters {
 public:
};

void RspSSEStockOptionList::clear_list() {
  list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspSSEStockOptionList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspSSEStockOptionList::RspSSEStockOptionList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspSSEStockOptionList)
}
RspSSEStockOptionList::RspSSEStockOptionList(const RspSSEStockOptionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RspSSEStockOptionList)
}

void RspSSEStockOptionList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RspSSEStockOptionList_goshare_2eproto.base);
}

RspSSEStockOptionList::~RspSSEStockOptionList() {
  // @@protoc_insertion_point(destructor:pb.RspSSEStockOptionList)
  SharedDtor();
}

void RspSSEStockOptionList::SharedDtor() {
}

void RspSSEStockOptionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspSSEStockOptionList& RspSSEStockOptionList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RspSSEStockOptionList_goshare_2eproto.base);
  return *internal_default_instance();
}


void RspSSEStockOptionList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspSSEStockOptionList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RspSSEStockOptionList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .pb.SSEStockOption list = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::pb::SSEStockOption::_InternalParse;
          object = msg->add_list();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspSSEStockOptionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspSSEStockOptionList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.SSEStockOption list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspSSEStockOptionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspSSEStockOptionList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspSSEStockOptionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.SSEStockOption list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspSSEStockOptionList)
}

::google::protobuf::uint8* RspSSEStockOptionList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.SSEStockOption list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspSSEStockOptionList)
  return target;
}

size_t RspSSEStockOptionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspSSEStockOptionList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.SSEStockOption list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspSSEStockOptionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspSSEStockOptionList)
  GOOGLE_DCHECK_NE(&from, this);
  const RspSSEStockOptionList* source =
      ::google::protobuf::DynamicCastToGenerated<RspSSEStockOptionList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspSSEStockOptionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspSSEStockOptionList)
    MergeFrom(*source);
  }
}

void RspSSEStockOptionList::MergeFrom(const RspSSEStockOptionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspSSEStockOptionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void RspSSEStockOptionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspSSEStockOptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspSSEStockOptionList::CopyFrom(const RspSSEStockOptionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspSSEStockOptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspSSEStockOptionList::IsInitialized() const {
  return true;
}

void RspSSEStockOptionList::Swap(RspSSEStockOptionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspSSEStockOptionList::InternalSwap(RspSSEStockOptionList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
}

::google::protobuf::Metadata RspSSEStockOptionList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReqUserLogin::InitAsDefaultInstance() {
}
class ReqUserLogin::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqUserLogin::kUserFieldNumber;
const int ReqUserLogin::kPasswordFieldNumber;
const int ReqUserLogin::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqUserLogin::ReqUserLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReqUserLogin)
}
ReqUserLogin::ReqUserLogin(const ReqUserLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.ReqUserLogin)
}

void ReqUserLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReqUserLogin_goshare_2eproto.base);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqUserLogin::~ReqUserLogin() {
  // @@protoc_insertion_point(destructor:pb.ReqUserLogin)
  SharedDtor();
}

void ReqUserLogin::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqUserLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqUserLogin& ReqUserLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqUserLogin_goshare_2eproto.base);
  return *internal_default_instance();
}


void ReqUserLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReqUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqUserLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqUserLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string user = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.ReqUserLogin.user");
        object = msg->mutable_user();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.ReqUserLogin.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.ReqUserLogin.type");
        object = msg->mutable_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqUserLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReqUserLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ReqUserLogin.user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ReqUserLogin.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ReqUserLogin.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReqUserLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReqUserLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqUserLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReqUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqUserLogin.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqUserLogin.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqUserLogin.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReqUserLogin)
}

::google::protobuf::uint8* ReqUserLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReqUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqUserLogin.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqUserLogin.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqUserLogin.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReqUserLogin)
  return target;
}

size_t ReqUserLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReqUserLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqUserLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReqUserLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqUserLogin* source =
      ::google::protobuf::DynamicCastToGenerated<ReqUserLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReqUserLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReqUserLogin)
    MergeFrom(*source);
  }
}

void ReqUserLogin::MergeFrom(const ReqUserLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReqUserLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void ReqUserLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReqUserLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqUserLogin::CopyFrom(const ReqUserLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReqUserLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqUserLogin::IsInitialized() const {
  return true;
}

void ReqUserLogin::Swap(ReqUserLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqUserLogin::InternalSwap(ReqUserLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  user_.Swap(&other->user_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ReqUserLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RspUserLogin::InitAsDefaultInstance() {
}
class RspUserLogin::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspUserLogin::kMessageFieldNumber;
const int RspUserLogin::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspUserLogin::RspUserLogin()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspUserLogin)
}
RspUserLogin::RspUserLogin(const RspUserLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:pb.RspUserLogin)
}

void RspUserLogin::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RspUserLogin_goshare_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

RspUserLogin::~RspUserLogin() {
  // @@protoc_insertion_point(destructor:pb.RspUserLogin)
  SharedDtor();
}

void RspUserLogin::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspUserLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspUserLogin& RspUserLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RspUserLogin_goshare_2eproto.base);
  return *internal_default_instance();
}


void RspUserLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspUserLogin::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RspUserLogin*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.RspUserLogin.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool success = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspUserLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspUserLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.RspUserLogin.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspUserLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspUserLogin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspUserLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RspUserLogin.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspUserLogin)
}

::google::protobuf::uint8* RspUserLogin::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspUserLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RspUserLogin.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspUserLogin)
  return target;
}

size_t RspUserLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspUserLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspUserLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspUserLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const RspUserLogin* source =
      ::google::protobuf::DynamicCastToGenerated<RspUserLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspUserLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspUserLogin)
    MergeFrom(*source);
  }
}

void RspUserLogin::MergeFrom(const RspUserLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspUserLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void RspUserLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspUserLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspUserLogin::CopyFrom(const RspUserLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspUserLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspUserLogin::IsInitialized() const {
  return true;
}

void RspUserLogin::Swap(RspUserLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspUserLogin::InternalSwap(RspUserLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
}

::google::protobuf::Metadata RspUserLogin::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void I18Item::InitAsDefaultInstance() {
}
class I18Item::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int I18Item::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

I18Item::I18Item()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.I18Item)
}
I18Item::I18Item(const I18Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.I18Item)
}

void I18Item::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_I18Item_goshare_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

I18Item::~I18Item() {
  // @@protoc_insertion_point(destructor:pb.I18Item)
  SharedDtor();
}

void I18Item::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void I18Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const I18Item& I18Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_I18Item_goshare_2eproto.base);
  return *internal_default_instance();
}


void I18Item::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.I18Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* I18Item::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<I18Item*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.I18Item.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool I18Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.I18Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.I18Item.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.I18Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.I18Item)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void I18Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.I18Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.I18Item.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.I18Item)
}

::google::protobuf::uint8* I18Item::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.I18Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.I18Item.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.I18Item)
  return target;
}

size_t I18Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.I18Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void I18Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.I18Item)
  GOOGLE_DCHECK_NE(&from, this);
  const I18Item* source =
      ::google::protobuf::DynamicCastToGenerated<I18Item>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.I18Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.I18Item)
    MergeFrom(*source);
  }
}

void I18Item::MergeFrom(const I18Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.I18Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void I18Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.I18Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void I18Item::CopyFrom(const I18Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.I18Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool I18Item::IsInitialized() const {
  return true;
}

void I18Item::Swap(I18Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void I18Item::InternalSwap(I18Item* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata I18Item::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RouteItem::InitAsDefaultInstance() {
  ::pb::_RouteItem_default_instance_._instance.get_mutable()->en_ = const_cast< ::pb::I18Item*>(
      ::pb::I18Item::internal_default_instance());
  ::pb::_RouteItem_default_instance_._instance.get_mutable()->zh_ = const_cast< ::pb::I18Item*>(
      ::pb::I18Item::internal_default_instance());
}
class RouteItem::HasBitSetters {
 public:
  static const ::pb::I18Item& en(const RouteItem* msg);
  static const ::pb::I18Item& zh(const RouteItem* msg);
};

const ::pb::I18Item&
RouteItem::HasBitSetters::en(const RouteItem* msg) {
  return *msg->en_;
}
const ::pb::I18Item&
RouteItem::HasBitSetters::zh(const RouteItem* msg) {
  return *msg->zh_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RouteItem::kIconFieldNumber;
const int RouteItem::kIdFieldNumber;
const int RouteItem::kNameFieldNumber;
const int RouteItem::kEnFieldNumber;
const int RouteItem::kZhFieldNumber;
const int RouteItem::kRouteFieldNumber;
const int RouteItem::kBreadcrumbParentIdFieldNumber;
const int RouteItem::kMenuParentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RouteItem::RouteItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RouteItem)
}
RouteItem::RouteItem(const RouteItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon().size() > 0) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  route_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.route().size() > 0) {
    route_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_);
  }
  breadcrumb_parent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.breadcrumb_parent_id().size() > 0) {
    breadcrumb_parent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.breadcrumb_parent_id_);
  }
  menu_parent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.menu_parent_id().size() > 0) {
    menu_parent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.menu_parent_id_);
  }
  if (from.has_en()) {
    en_ = new ::pb::I18Item(*from.en_);
  } else {
    en_ = nullptr;
  }
  if (from.has_zh()) {
    zh_ = new ::pb::I18Item(*from.zh_);
  } else {
    zh_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pb.RouteItem)
}

void RouteItem::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RouteItem_goshare_2eproto.base);
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breadcrumb_parent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  menu_parent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&en_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zh_) -
      reinterpret_cast<char*>(&en_)) + sizeof(zh_));
}

RouteItem::~RouteItem() {
  // @@protoc_insertion_point(destructor:pb.RouteItem)
  SharedDtor();
}

void RouteItem::SharedDtor() {
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breadcrumb_parent_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  menu_parent_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete en_;
  if (this != internal_default_instance()) delete zh_;
}

void RouteItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RouteItem& RouteItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RouteItem_goshare_2eproto.base);
  return *internal_default_instance();
}


void RouteItem::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RouteItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  route_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breadcrumb_parent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  menu_parent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && en_ != nullptr) {
    delete en_;
  }
  en_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && zh_ != nullptr) {
    delete zh_;
  }
  zh_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RouteItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RouteItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string icon = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.RouteItem.icon");
        object = msg->mutable_icon();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.RouteItem.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.RouteItem.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .pb.I18Item en = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::I18Item::_InternalParse;
        object = msg->mutable_en();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pb.I18Item zh = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::I18Item::_InternalParse;
        object = msg->mutable_zh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string route = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.RouteItem.route");
        object = msg->mutable_route();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string breadcrumb_parent_id = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.RouteItem.breadcrumb_parent_id");
        object = msg->mutable_breadcrumb_parent_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string menu_parent_id = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.RouteItem.menu_parent_id");
        object = msg->mutable_menu_parent_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RouteItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RouteItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string icon = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon().data(), static_cast<int>(this->icon().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.RouteItem.icon"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.RouteItem.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.RouteItem.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.I18Item en = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_en()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.I18Item zh = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string route = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_route()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->route().data(), static_cast<int>(this->route().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.RouteItem.route"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string breadcrumb_parent_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_breadcrumb_parent_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->breadcrumb_parent_id().data(), static_cast<int>(this->breadcrumb_parent_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.RouteItem.breadcrumb_parent_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string menu_parent_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_menu_parent_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->menu_parent_id().data(), static_cast<int>(this->menu_parent_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.RouteItem.menu_parent_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RouteItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RouteItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RouteItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RouteItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string icon = 1;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->icon(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // .pb.I18Item en = 4;
  if (this->has_en()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::en(this), output);
  }

  // .pb.I18Item zh = 5;
  if (this->has_zh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::zh(this), output);
  }

  // string route = 6;
  if (this->route().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->route().data(), static_cast<int>(this->route().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.route");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->route(), output);
  }

  // string breadcrumb_parent_id = 7;
  if (this->breadcrumb_parent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->breadcrumb_parent_id().data(), static_cast<int>(this->breadcrumb_parent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.breadcrumb_parent_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->breadcrumb_parent_id(), output);
  }

  // string menu_parent_id = 8;
  if (this->menu_parent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->menu_parent_id().data(), static_cast<int>(this->menu_parent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.menu_parent_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->menu_parent_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RouteItem)
}

::google::protobuf::uint8* RouteItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RouteItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string icon = 1;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->icon(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // .pb.I18Item en = 4;
  if (this->has_en()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::en(this), target);
  }

  // .pb.I18Item zh = 5;
  if (this->has_zh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::zh(this), target);
  }

  // string route = 6;
  if (this->route().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->route().data(), static_cast<int>(this->route().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.route");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->route(), target);
  }

  // string breadcrumb_parent_id = 7;
  if (this->breadcrumb_parent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->breadcrumb_parent_id().data(), static_cast<int>(this->breadcrumb_parent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.breadcrumb_parent_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->breadcrumb_parent_id(), target);
  }

  // string menu_parent_id = 8;
  if (this->menu_parent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->menu_parent_id().data(), static_cast<int>(this->menu_parent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RouteItem.menu_parent_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->menu_parent_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RouteItem)
  return target;
}

size_t RouteItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RouteItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string icon = 1;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string route = 6;
  if (this->route().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->route());
  }

  // string breadcrumb_parent_id = 7;
  if (this->breadcrumb_parent_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->breadcrumb_parent_id());
  }

  // string menu_parent_id = 8;
  if (this->menu_parent_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->menu_parent_id());
  }

  // .pb.I18Item en = 4;
  if (this->has_en()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *en_);
  }

  // .pb.I18Item zh = 5;
  if (this->has_zh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *zh_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RouteItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RouteItem)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteItem* source =
      ::google::protobuf::DynamicCastToGenerated<RouteItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RouteItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RouteItem)
    MergeFrom(*source);
  }
}

void RouteItem::MergeFrom(const RouteItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RouteItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.route().size() > 0) {

    route_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_);
  }
  if (from.breadcrumb_parent_id().size() > 0) {

    breadcrumb_parent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.breadcrumb_parent_id_);
  }
  if (from.menu_parent_id().size() > 0) {

    menu_parent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.menu_parent_id_);
  }
  if (from.has_en()) {
    mutable_en()->::pb::I18Item::MergeFrom(from.en());
  }
  if (from.has_zh()) {
    mutable_zh()->::pb::I18Item::MergeFrom(from.zh());
  }
}

void RouteItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RouteItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteItem::CopyFrom(const RouteItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RouteItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteItem::IsInitialized() const {
  return true;
}

void RouteItem::Swap(RouteItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RouteItem::InternalSwap(RouteItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  icon_.Swap(&other->icon_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  route_.Swap(&other->route_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  breadcrumb_parent_id_.Swap(&other->breadcrumb_parent_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  menu_parent_id_.Swap(&other->menu_parent_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(en_, other->en_);
  swap(zh_, other->zh_);
}

::google::protobuf::Metadata RouteItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RspGetRoutes::InitAsDefaultInstance() {
}
class RspGetRoutes::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspGetRoutes::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspGetRoutes::RspGetRoutes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspGetRoutes)
}
RspGetRoutes::RspGetRoutes(const RspGetRoutes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RspGetRoutes)
}

void RspGetRoutes::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RspGetRoutes_goshare_2eproto.base);
}

RspGetRoutes::~RspGetRoutes() {
  // @@protoc_insertion_point(destructor:pb.RspGetRoutes)
  SharedDtor();
}

void RspGetRoutes::SharedDtor() {
}

void RspGetRoutes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspGetRoutes& RspGetRoutes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RspGetRoutes_goshare_2eproto.base);
  return *internal_default_instance();
}


void RspGetRoutes::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspGetRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspGetRoutes::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RspGetRoutes*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .pb.RouteItem list = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::pb::RouteItem::_InternalParse;
          object = msg->add_list();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspGetRoutes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspGetRoutes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.RouteItem list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspGetRoutes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspGetRoutes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspGetRoutes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspGetRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.RouteItem list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspGetRoutes)
}

::google::protobuf::uint8* RspGetRoutes::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspGetRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.RouteItem list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspGetRoutes)
  return target;
}

size_t RspGetRoutes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspGetRoutes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.RouteItem list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspGetRoutes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspGetRoutes)
  GOOGLE_DCHECK_NE(&from, this);
  const RspGetRoutes* source =
      ::google::protobuf::DynamicCastToGenerated<RspGetRoutes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspGetRoutes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspGetRoutes)
    MergeFrom(*source);
  }
}

void RspGetRoutes::MergeFrom(const RspGetRoutes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspGetRoutes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void RspGetRoutes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspGetRoutes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspGetRoutes::CopyFrom(const RspGetRoutes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspGetRoutes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspGetRoutes::IsInitialized() const {
  return true;
}

void RspGetRoutes::Swap(RspGetRoutes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspGetRoutes::InternalSwap(RspGetRoutes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
}

::google::protobuf::Metadata RspGetRoutes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void XUser::InitAsDefaultInstance() {
  ::pb::_XUser_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::pb::XPermission*>(
      ::pb::XPermission::internal_default_instance());
}
class XUser::HasBitSetters {
 public:
  static const ::pb::XPermission& permissions(const XUser* msg);
};

const ::pb::XPermission&
XUser::HasBitSetters::permissions(const XUser* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XUser::kAvatarFieldNumber;
const int XUser::kIdFieldNumber;
const int XUser::kUsernameFieldNumber;
const int XUser::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XUser::XUser()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.XUser)
}
XUser::XUser(const XUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar().size() > 0) {
    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::pb::XPermission(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pb.XUser)
}

void XUser::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_XUser_goshare_2eproto.base);
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permissions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&permissions_)) + sizeof(id_));
}

XUser::~XUser() {
  // @@protoc_insertion_point(destructor:pb.XUser)
  SharedDtor();
}

void XUser::SharedDtor() {
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void XUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const XUser& XUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_XUser_goshare_2eproto.base);
  return *internal_default_instance();
}


void XUser::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.XUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && permissions_ != nullptr) {
    delete permissions_;
  }
  permissions_ = nullptr;
  id_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* XUser::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<XUser*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string avatar = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XUser.avatar");
        object = msg->mutable_avatar();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string username = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XUser.username");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .pb.XPermission permissions = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::XPermission::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool XUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.XUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string avatar = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar().data(), static_cast<int>(this->avatar().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XUser.avatar"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XUser.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.XPermission permissions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.XUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.XUser)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void XUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.XUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string avatar = 1;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar().data(), static_cast<int>(this->avatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUser.avatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->avatar(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUser.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // .pb.XPermission permissions = 4;
  if (this->has_permissions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::permissions(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.XUser)
}

::google::protobuf::uint8* XUser::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.XUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string avatar = 1;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar().data(), static_cast<int>(this->avatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUser.avatar");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->avatar(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUser.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // .pb.XPermission permissions = 4;
  if (this->has_permissions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::permissions(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.XUser)
  return target;
}

size_t XUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.XUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string avatar = 1;
  if (this->avatar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar());
  }

  // string username = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // .pb.XPermission permissions = 4;
  if (this->has_permissions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.XUser)
  GOOGLE_DCHECK_NE(&from, this);
  const XUser* source =
      ::google::protobuf::DynamicCastToGenerated<XUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.XUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.XUser)
    MergeFrom(*source);
  }
}

void XUser::MergeFrom(const XUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.XUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar().size() > 0) {

    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_permissions()) {
    mutable_permissions()->::pb::XPermission::MergeFrom(from.permissions());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void XUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.XUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XUser::CopyFrom(const XUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.XUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XUser::IsInitialized() const {
  return true;
}

void XUser::Swap(XUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XUser::InternalSwap(XUser* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  avatar_.Swap(&other->avatar_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata XUser::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RspCurrentUser::InitAsDefaultInstance() {
  ::pb::_RspCurrentUser_default_instance_._instance.get_mutable()->user_ = const_cast< ::pb::XUser*>(
      ::pb::XUser::internal_default_instance());
}
class RspCurrentUser::HasBitSetters {
 public:
  static const ::pb::XUser& user(const RspCurrentUser* msg);
};

const ::pb::XUser&
RspCurrentUser::HasBitSetters::user(const RspCurrentUser* msg) {
  return *msg->user_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspCurrentUser::kSuccessFieldNumber;
const int RspCurrentUser::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspCurrentUser::RspCurrentUser()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspCurrentUser)
}
RspCurrentUser::RspCurrentUser(const RspCurrentUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::pb::XUser(*from.user_);
  } else {
    user_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:pb.RspCurrentUser)
}

void RspCurrentUser::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RspCurrentUser_goshare_2eproto.base);
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&user_)) + sizeof(success_));
}

RspCurrentUser::~RspCurrentUser() {
  // @@protoc_insertion_point(destructor:pb.RspCurrentUser)
  SharedDtor();
}

void RspCurrentUser::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
}

void RspCurrentUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspCurrentUser& RspCurrentUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RspCurrentUser_goshare_2eproto.base);
  return *internal_default_instance();
}


void RspCurrentUser::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspCurrentUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspCurrentUser::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RspCurrentUser*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .pb.XUser user = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::XUser::_InternalParse;
        object = msg->mutable_user();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspCurrentUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspCurrentUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.XUser user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspCurrentUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspCurrentUser)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspCurrentUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspCurrentUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // .pb.XUser user = 2;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::user(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspCurrentUser)
}

::google::protobuf::uint8* RspCurrentUser::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspCurrentUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // .pb.XUser user = 2;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::user(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspCurrentUser)
  return target;
}

size_t RspCurrentUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspCurrentUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.XUser user = 2;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspCurrentUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspCurrentUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RspCurrentUser* source =
      ::google::protobuf::DynamicCastToGenerated<RspCurrentUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspCurrentUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspCurrentUser)
    MergeFrom(*source);
  }
}

void RspCurrentUser::MergeFrom(const RspCurrentUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspCurrentUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    mutable_user()->::pb::XUser::MergeFrom(from.user());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void RspCurrentUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspCurrentUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspCurrentUser::CopyFrom(const RspCurrentUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspCurrentUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspCurrentUser::IsInitialized() const {
  return true;
}

void RspCurrentUser::Swap(RspCurrentUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspCurrentUser::InternalSwap(RspCurrentUser* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(user_, other->user_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata RspCurrentUser::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void XPermission::InitAsDefaultInstance() {
}
class XPermission::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XPermission::kRoleFieldNumber;
const int XPermission::kVisitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XPermission::XPermission()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.XPermission)
}
XPermission::XPermission(const XPermission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      visit_(from.visit_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.XPermission)
}

void XPermission::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_XPermission_goshare_2eproto.base);
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

XPermission::~XPermission() {
  // @@protoc_insertion_point(destructor:pb.XPermission)
  SharedDtor();
}

void XPermission::SharedDtor() {
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XPermission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const XPermission& XPermission::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_XPermission_goshare_2eproto.base);
  return *internal_default_instance();
}


void XPermission::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.XPermission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  visit_.Clear();
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* XPermission::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<XPermission*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string role = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XPermission.role");
        object = msg->mutable_role();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string visit = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("pb.XPermission.visit");
          object = msg->add_visit();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool XPermission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.XPermission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string role = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role().data(), static_cast<int>(this->role().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XPermission.role"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string visit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_visit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->visit(this->visit_size() - 1).data(),
            static_cast<int>(this->visit(this->visit_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XPermission.visit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.XPermission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.XPermission)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void XPermission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.XPermission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XPermission.role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->role(), output);
  }

  // repeated string visit = 2;
  for (int i = 0, n = this->visit_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->visit(i).data(), static_cast<int>(this->visit(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XPermission.visit");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->visit(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.XPermission)
}

::google::protobuf::uint8* XPermission::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.XPermission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XPermission.role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role(), target);
  }

  // repeated string visit = 2;
  for (int i = 0, n = this->visit_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->visit(i).data(), static_cast<int>(this->visit(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XPermission.visit");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->visit(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.XPermission)
  return target;
}

size_t XPermission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.XPermission)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string visit = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->visit_size());
  for (int i = 0, n = this->visit_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->visit(i));
  }

  // string role = 1;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XPermission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.XPermission)
  GOOGLE_DCHECK_NE(&from, this);
  const XPermission* source =
      ::google::protobuf::DynamicCastToGenerated<XPermission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.XPermission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.XPermission)
    MergeFrom(*source);
  }
}

void XPermission::MergeFrom(const XPermission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.XPermission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  visit_.MergeFrom(from.visit_);
  if (from.role().size() > 0) {

    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
}

void XPermission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.XPermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XPermission::CopyFrom(const XPermission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.XPermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XPermission::IsInitialized() const {
  return true;
}

void XPermission::Swap(XPermission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XPermission::InternalSwap(XPermission* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  visit_.InternalSwap(CastToBase(&other->visit_));
  role_.Swap(&other->role_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata XPermission::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void XUsersItem::InitAsDefaultInstance() {
}
class XUsersItem::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XUsersItem::kAddressFieldNumber;
const int XUsersItem::kAgeFieldNumber;
const int XUsersItem::kAvatarFieldNumber;
const int XUsersItem::kCreateTimeFieldNumber;
const int XUsersItem::kEmailFieldNumber;
const int XUsersItem::kIdFieldNumber;
const int XUsersItem::kIsMaleFieldNumber;
const int XUsersItem::kNameFieldNumber;
const int XUsersItem::kNickNameFieldNumber;
const int XUsersItem::kPhoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XUsersItem::XUsersItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.XUsersItem)
}
XUsersItem::XUsersItem(const XUsersItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar().size() > 0) {
    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.create_time().size() > 0) {
    create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  ::memcpy(&age_, &from.age_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_male_) -
    reinterpret_cast<char*>(&age_)) + sizeof(is_male_));
  // @@protoc_insertion_point(copy_constructor:pb.XUsersItem)
}

void XUsersItem::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_XUsersItem_goshare_2eproto.base);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&age_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_male_) -
      reinterpret_cast<char*>(&age_)) + sizeof(is_male_));
}

XUsersItem::~XUsersItem() {
  // @@protoc_insertion_point(destructor:pb.XUsersItem)
  SharedDtor();
}

void XUsersItem::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XUsersItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const XUsersItem& XUsersItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_XUsersItem_goshare_2eproto.base);
  return *internal_default_instance();
}


void XUsersItem::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.XUsersItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&age_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_male_) -
      reinterpret_cast<char*>(&age_)) + sizeof(is_male_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* XUsersItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<XUsersItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XUsersItem.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 age = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_age(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string avatar = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XUsersItem.avatar");
        object = msg->mutable_avatar();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string create_time = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XUsersItem.create_time");
        object = msg->mutable_create_time();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string email = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XUsersItem.email");
        object = msg->mutable_email();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string id = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XUsersItem.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool is_male = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_is_male(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XUsersItem.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string nick_name = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XUsersItem.nick_name");
        object = msg->mutable_nick_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string phone = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.XUsersItem.phone");
        object = msg->mutable_phone();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool XUsersItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.XUsersItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XUsersItem.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 age = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string avatar = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar().data(), static_cast<int>(this->avatar().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XUsersItem.avatar"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string create_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_create_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->create_time().data(), static_cast<int>(this->create_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XUsersItem.create_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XUsersItem.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XUsersItem.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_male = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_male_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XUsersItem.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XUsersItem.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.XUsersItem.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.XUsersItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.XUsersItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void XUsersItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.XUsersItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // int32 age = 2;
  if (this->age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->age(), output);
  }

  // string avatar = 3;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar().data(), static_cast<int>(this->avatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.avatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->avatar(), output);
  }

  // string create_time = 4;
  if (this->create_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_time().data(), static_cast<int>(this->create_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.create_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->create_time(), output);
  }

  // string email = 5;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->email(), output);
  }

  // string id = 6;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->id(), output);
  }

  // bool is_male = 7;
  if (this->is_male() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_male(), output);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->name(), output);
  }

  // string nick_name = 9;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->nick_name(), output);
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->phone(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.XUsersItem)
}

::google::protobuf::uint8* XUsersItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.XUsersItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // int32 age = 2;
  if (this->age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->age(), target);
  }

  // string avatar = 3;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar().data(), static_cast<int>(this->avatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.avatar");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->avatar(), target);
  }

  // string create_time = 4;
  if (this->create_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_time().data(), static_cast<int>(this->create_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.create_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->create_time(), target);
  }

  // string email = 5;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->email(), target);
  }

  // string id = 6;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->id(), target);
  }

  // bool is_male = 7;
  if (this->is_male() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_male(), target);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->name(), target);
  }

  // string nick_name = 9;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->nick_name(), target);
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.XUsersItem.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->phone(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.XUsersItem)
  return target;
}

size_t XUsersItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.XUsersItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string avatar = 3;
  if (this->avatar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar());
  }

  // string create_time = 4;
  if (this->create_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->create_time());
  }

  // string email = 5;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string id = 6;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 8;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string nick_name = 9;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // int32 age = 2;
  if (this->age() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->age());
  }

  // bool is_male = 7;
  if (this->is_male() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XUsersItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.XUsersItem)
  GOOGLE_DCHECK_NE(&from, this);
  const XUsersItem* source =
      ::google::protobuf::DynamicCastToGenerated<XUsersItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.XUsersItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.XUsersItem)
    MergeFrom(*source);
  }
}

void XUsersItem::MergeFrom(const XUsersItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.XUsersItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.avatar().size() > 0) {

    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  if (from.create_time().size() > 0) {

    create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.age() != 0) {
    set_age(from.age());
  }
  if (from.is_male() != 0) {
    set_is_male(from.is_male());
  }
}

void XUsersItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.XUsersItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XUsersItem::CopyFrom(const XUsersItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.XUsersItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XUsersItem::IsInitialized() const {
  return true;
}

void XUsersItem::Swap(XUsersItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XUsersItem::InternalSwap(XUsersItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  avatar_.Swap(&other->avatar_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  create_time_.Swap(&other->create_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_name_.Swap(&other->nick_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(age_, other->age_);
  swap(is_male_, other->is_male_);
}

::google::protobuf::Metadata XUsersItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void XUsersItemList::InitAsDefaultInstance() {
}
class XUsersItemList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XUsersItemList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XUsersItemList::XUsersItemList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.XUsersItemList)
}
XUsersItemList::XUsersItemList(const XUsersItemList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.XUsersItemList)
}

void XUsersItemList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_XUsersItemList_goshare_2eproto.base);
}

XUsersItemList::~XUsersItemList() {
  // @@protoc_insertion_point(destructor:pb.XUsersItemList)
  SharedDtor();
}

void XUsersItemList::SharedDtor() {
}

void XUsersItemList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const XUsersItemList& XUsersItemList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_XUsersItemList_goshare_2eproto.base);
  return *internal_default_instance();
}


void XUsersItemList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.XUsersItemList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* XUsersItemList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<XUsersItemList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .pb.XUsersItem list = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::pb::XUsersItem::_InternalParse;
          object = msg->add_list();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool XUsersItemList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.XUsersItemList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.XUsersItem list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.XUsersItemList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.XUsersItemList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void XUsersItemList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.XUsersItemList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.XUsersItem list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.XUsersItemList)
}

::google::protobuf::uint8* XUsersItemList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.XUsersItemList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.XUsersItem list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.XUsersItemList)
  return target;
}

size_t XUsersItemList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.XUsersItemList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.XUsersItem list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XUsersItemList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.XUsersItemList)
  GOOGLE_DCHECK_NE(&from, this);
  const XUsersItemList* source =
      ::google::protobuf::DynamicCastToGenerated<XUsersItemList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.XUsersItemList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.XUsersItemList)
    MergeFrom(*source);
  }
}

void XUsersItemList::MergeFrom(const XUsersItemList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.XUsersItemList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void XUsersItemList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.XUsersItemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XUsersItemList::CopyFrom(const XUsersItemList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.XUsersItemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XUsersItemList::IsInitialized() const {
  return true;
}

void XUsersItemList::Swap(XUsersItemList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XUsersItemList::InternalSwap(XUsersItemList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
}

::google::protobuf::Metadata XUsersItemList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::pb::EmptyRequest* Arena::CreateMaybeMessage< ::pb::EmptyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pb::EmptyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::EmptyResponse* Arena::CreateMaybeMessage< ::pb::EmptyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::pb::EmptyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ReqSSEStockOptionList* Arena::CreateMaybeMessage< ::pb::ReqSSEStockOptionList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReqSSEStockOptionList >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspSSEStockOptionList* Arena::CreateMaybeMessage< ::pb::RspSSEStockOptionList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspSSEStockOptionList >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ReqUserLogin* Arena::CreateMaybeMessage< ::pb::ReqUserLogin >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReqUserLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspUserLogin* Arena::CreateMaybeMessage< ::pb::RspUserLogin >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspUserLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::I18Item* Arena::CreateMaybeMessage< ::pb::I18Item >(Arena* arena) {
  return Arena::CreateInternal< ::pb::I18Item >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RouteItem* Arena::CreateMaybeMessage< ::pb::RouteItem >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RouteItem >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspGetRoutes* Arena::CreateMaybeMessage< ::pb::RspGetRoutes >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspGetRoutes >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::XUser* Arena::CreateMaybeMessage< ::pb::XUser >(Arena* arena) {
  return Arena::CreateInternal< ::pb::XUser >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspCurrentUser* Arena::CreateMaybeMessage< ::pb::RspCurrentUser >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspCurrentUser >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::XPermission* Arena::CreateMaybeMessage< ::pb::XPermission >(Arena* arena) {
  return Arena::CreateInternal< ::pb::XPermission >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::XUsersItem* Arena::CreateMaybeMessage< ::pb::XUsersItem >(Arena* arena) {
  return Arena::CreateInternal< ::pb::XUsersItem >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::XUsersItemList* Arena::CreateMaybeMessage< ::pb::XUsersItemList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::XUsersItemList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
