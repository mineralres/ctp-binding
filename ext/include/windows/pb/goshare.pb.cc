// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goshare.proto

#include "goshare.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SSEStockOption_common_2eproto;
namespace pb {
class ReqSSEStockOptionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqSSEStockOptionList> _instance;
} _ReqSSEStockOptionList_default_instance_;
class RspSSEStockOptionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspSSEStockOptionList> _instance;
} _RspSSEStockOptionList_default_instance_;
}  // namespace pb
static void InitDefaultsReqSSEStockOptionList_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReqSSEStockOptionList_default_instance_;
    new (ptr) ::pb::ReqSSEStockOptionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReqSSEStockOptionList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqSSEStockOptionList_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqSSEStockOptionList_goshare_2eproto}, {}};

static void InitDefaultsRspSSEStockOptionList_goshare_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspSSEStockOptionList_default_instance_;
    new (ptr) ::pb::RspSSEStockOptionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspSSEStockOptionList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspSSEStockOptionList_goshare_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspSSEStockOptionList_goshare_2eproto}, {
      &scc_info_SSEStockOption_common_2eproto.base,}};

void InitDefaults_goshare_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReqSSEStockOptionList_goshare_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspSSEStockOptionList_goshare_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_goshare_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_goshare_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_goshare_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_goshare_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::ReqSSEStockOptionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspSSEStockOptionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::RspSSEStockOptionList, list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::ReqSSEStockOptionList)},
  { 5, -1, sizeof(::pb::RspSSEStockOptionList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ReqSSEStockOptionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RspSSEStockOptionList_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_goshare_2eproto = {
  {}, AddDescriptors_goshare_2eproto, "goshare.proto", schemas,
  file_default_instances, TableStruct_goshare_2eproto::offsets,
  file_level_metadata_goshare_2eproto, 2, file_level_enum_descriptors_goshare_2eproto, file_level_service_descriptors_goshare_2eproto,
};

const char descriptor_table_protodef_goshare_2eproto[] =
  "\n\rgoshare.proto\022\002pb\032\014common.proto\032\021marke"
  "t_data.proto\032\034google/api/annotations.pro"
  "to\032\016strategy.proto\032\rtrading.proto\"\027\n\025Req"
  "SSEStockOptionList\"9\n\025RspSSEStockOptionL"
  "ist\022 \n\004list\030\001 \003(\0132\022.pb.SSEStockOption2\327\010"
  "\n\007GoShare\022q\n\010LastTick\022\n.pb.Symbol\032\026.pb.M"
  "arketDataSnapshot\"A\202\323\344\223\002;\"\020/api/v1/lastT"
  "ick:\001*Z$\022\"/api/v1/lastTick/{exchange}/{c"
  "ode}\022\217\001\n\022SSEStockOptionList\022\031.pb.ReqSSES"
  "tockOptionList\032\031.pb.RspSSEStockOptionLis"
  "t\"C\202\323\344\223\002=\"\032/api/v1/sseStockOptionList:\001*"
  "Z\034\022\032/api/v1/sseStockOptionList\022p\n\023Subscr"
  "ibeMarketData\022\032.pb.ReqSubscribeMarketDat"
  "a\032\026.pb.MarketDataSnapshot\"#\202\323\344\223\002\035\022\033/api/"
  "v1/subscribeMarketData0\001\022f\n\010PushTick\022\026.p"
  "b.MarketDataSnapshot\032\021.pb.EmptyResponse\""
  "/\202\323\344\223\002)\"\020/api/v1/pushTick:\001*Z\022\022\020/api/v1/"
  "pushTick\022Q\n\017GetStrategyList\022\020.pb.EmptyRe"
  "quest\032\020.pb.StrategyList\"\032\202\323\344\223\002\024\022\022/api/v1"
  "/strategies\022N\n\013GetStrategy\022\022.pb.ReqGetSt"
  "rategy\032\014.pb.Strategy\"\035\202\323\344\223\002\027\022\025/api/v1/st"
  "rategy/{id}\022N\n\016CreateStrategy\022\014.pb.Strat"
  "egy\032\021.pb.EmptyResponse\"\033\202\323\344\223\002\025\"\020/api/v1/"
  "strategy:\001*\022Y\n\016DeleteStrategy\022\025.pb.ReqDe"
  "leteStrategy\032\021.pb.EmptyResponse\"\035\202\323\344\223\002\027*"
  "\025/api/v1/strategy/{id}\022_\n\023GetTradingRout"
  "eList\022\020.pb.EmptyRequest\032\024.pb.TradingRout"
  "eList\" \202\323\344\223\002\032\022\030/api/v1/tradingRouteList\022"
  "W\n\017AddTradingRoute\022\020.pb.TradingRoute\032\021.p"
  "b.EmptyResponse\"\037\202\323\344\223\002\031\"\024/api/v1/trading"
  "Route:\001*\022e\n\022DeleteTradingRoute\022\031.pb.ReqD"
  "eleteTradingRoute\032\021.pb.EmptyResponse\"!\202\323"
  "\344\223\002\033*\031/api/v1/tradingRoute/{id}b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_goshare_2eproto = {
  false, InitDefaults_goshare_2eproto, 
  descriptor_table_protodef_goshare_2eproto,
  "goshare.proto", &assign_descriptors_table_goshare_2eproto, 1319,
};

void AddDescriptors_goshare_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[5] =
  {
    ::AddDescriptors_common_2eproto,
    ::AddDescriptors_market_5fdata_2eproto,
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_strategy_2eproto,
    ::AddDescriptors_trading_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_goshare_2eproto, deps, 5);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_goshare_2eproto = []() { AddDescriptors_goshare_2eproto(); return true; }();
namespace pb {

// ===================================================================

void ReqSSEStockOptionList::InitAsDefaultInstance() {
}
class ReqSSEStockOptionList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqSSEStockOptionList::ReqSSEStockOptionList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReqSSEStockOptionList)
}
ReqSSEStockOptionList::ReqSSEStockOptionList(const ReqSSEStockOptionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ReqSSEStockOptionList)
}

void ReqSSEStockOptionList::SharedCtor() {
}

ReqSSEStockOptionList::~ReqSSEStockOptionList() {
  // @@protoc_insertion_point(destructor:pb.ReqSSEStockOptionList)
  SharedDtor();
}

void ReqSSEStockOptionList::SharedDtor() {
}

void ReqSSEStockOptionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqSSEStockOptionList& ReqSSEStockOptionList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqSSEStockOptionList_goshare_2eproto.base);
  return *internal_default_instance();
}


void ReqSSEStockOptionList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReqSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqSSEStockOptionList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqSSEStockOptionList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqSSEStockOptionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReqSSEStockOptionList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReqSSEStockOptionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReqSSEStockOptionList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqSSEStockOptionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReqSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReqSSEStockOptionList)
}

::google::protobuf::uint8* ReqSSEStockOptionList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReqSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReqSSEStockOptionList)
  return target;
}

size_t ReqSSEStockOptionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReqSSEStockOptionList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqSSEStockOptionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReqSSEStockOptionList)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqSSEStockOptionList* source =
      ::google::protobuf::DynamicCastToGenerated<ReqSSEStockOptionList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReqSSEStockOptionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReqSSEStockOptionList)
    MergeFrom(*source);
  }
}

void ReqSSEStockOptionList::MergeFrom(const ReqSSEStockOptionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReqSSEStockOptionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReqSSEStockOptionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReqSSEStockOptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSSEStockOptionList::CopyFrom(const ReqSSEStockOptionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReqSSEStockOptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSSEStockOptionList::IsInitialized() const {
  return true;
}

void ReqSSEStockOptionList::Swap(ReqSSEStockOptionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqSSEStockOptionList::InternalSwap(ReqSSEStockOptionList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqSSEStockOptionList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RspSSEStockOptionList::InitAsDefaultInstance() {
}
class RspSSEStockOptionList::HasBitSetters {
 public:
};

void RspSSEStockOptionList::clear_list() {
  list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspSSEStockOptionList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspSSEStockOptionList::RspSSEStockOptionList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspSSEStockOptionList)
}
RspSSEStockOptionList::RspSSEStockOptionList(const RspSSEStockOptionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RspSSEStockOptionList)
}

void RspSSEStockOptionList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RspSSEStockOptionList_goshare_2eproto.base);
}

RspSSEStockOptionList::~RspSSEStockOptionList() {
  // @@protoc_insertion_point(destructor:pb.RspSSEStockOptionList)
  SharedDtor();
}

void RspSSEStockOptionList::SharedDtor() {
}

void RspSSEStockOptionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspSSEStockOptionList& RspSSEStockOptionList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RspSSEStockOptionList_goshare_2eproto.base);
  return *internal_default_instance();
}


void RspSSEStockOptionList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspSSEStockOptionList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RspSSEStockOptionList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .pb.SSEStockOption list = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::pb::SSEStockOption::_InternalParse;
          object = msg->add_list();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspSSEStockOptionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspSSEStockOptionList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.SSEStockOption list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspSSEStockOptionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspSSEStockOptionList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspSSEStockOptionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.SSEStockOption list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspSSEStockOptionList)
}

::google::protobuf::uint8* RspSSEStockOptionList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspSSEStockOptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.SSEStockOption list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspSSEStockOptionList)
  return target;
}

size_t RspSSEStockOptionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspSSEStockOptionList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.SSEStockOption list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspSSEStockOptionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspSSEStockOptionList)
  GOOGLE_DCHECK_NE(&from, this);
  const RspSSEStockOptionList* source =
      ::google::protobuf::DynamicCastToGenerated<RspSSEStockOptionList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspSSEStockOptionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspSSEStockOptionList)
    MergeFrom(*source);
  }
}

void RspSSEStockOptionList::MergeFrom(const RspSSEStockOptionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspSSEStockOptionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void RspSSEStockOptionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspSSEStockOptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspSSEStockOptionList::CopyFrom(const RspSSEStockOptionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspSSEStockOptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspSSEStockOptionList::IsInitialized() const {
  return true;
}

void RspSSEStockOptionList::Swap(RspSSEStockOptionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspSSEStockOptionList::InternalSwap(RspSSEStockOptionList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
}

::google::protobuf::Metadata RspSSEStockOptionList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_goshare_2eproto);
  return ::file_level_metadata_goshare_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::pb::ReqSSEStockOptionList* Arena::CreateMaybeMessage< ::pb::ReqSSEStockOptionList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReqSSEStockOptionList >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspSSEStockOptionList* Arena::CreateMaybeMessage< ::pb::RspSSEStockOptionList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspSSEStockOptionList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
