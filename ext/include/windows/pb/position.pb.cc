// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: position.proto

#include "position.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProductID_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Symbol_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_position_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PositionSummation_position_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_position_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Position_position_2eproto;
namespace pb {
class PositionSummationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionSummation> _instance;
} _PositionSummation_default_instance_;
class PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Position> _instance;
} _Position_default_instance_;
class PositionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionList> _instance;
} _PositionList_default_instance_;
class ReqForceClosePositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqForceClosePosition> _instance;
} _ReqForceClosePosition_default_instance_;
}  // namespace pb
static void InitDefaultsPositionSummation_position_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_PositionSummation_default_instance_;
    new (ptr) ::pb::PositionSummation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::PositionSummation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PositionSummation_position_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPositionSummation_position_2eproto}, {}};

static void InitDefaultsPosition_position_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Position_default_instance_;
    new (ptr) ::pb::Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Position::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Position_position_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPosition_position_2eproto}, {
      &scc_info_Symbol_common_2eproto.base,
      &scc_info_PositionSummation_position_2eproto.base,
      &scc_info_ProductID_common_2eproto.base,}};

static void InitDefaultsPositionList_position_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_PositionList_default_instance_;
    new (ptr) ::pb::PositionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::PositionList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PositionList_position_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPositionList_position_2eproto}, {
      &scc_info_Position_position_2eproto.base,}};

static void InitDefaultsReqForceClosePosition_position_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReqForceClosePosition_default_instance_;
    new (ptr) ::pb::ReqForceClosePosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReqForceClosePosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReqForceClosePosition_position_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReqForceClosePosition_position_2eproto}, {
      &scc_info_Symbol_common_2eproto.base,}};

void InitDefaults_position_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PositionSummation_position_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Position_position_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PositionList_position_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqForceClosePosition_position_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_position_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_position_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_position_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_position_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, direction_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, type_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, route_account_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, position_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, amount_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, cost_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, frozen_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, available_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, position_profit_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, closed_profit_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, margin_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, frozen_margin_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, commission_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, frozen_commission_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, interest_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, frozen_interest_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, mtm_profit_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, cleared_closed_profit_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, stamp_tax_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, transfer_fee_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, branch_),
  PROTOBUF_FIELD_OFFSET(::pb::PositionSummation, branch_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::Position, symbol_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, summation_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, today_summation_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, yesterday_summation_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, pre_settlement_price_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, settlement_price_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, last_price_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, trading_day_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, product_type_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, settlement_group_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, volume_multiple_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, product_id_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, price_tick_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, symbol_name_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, account_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, account_name_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, company_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, branch_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, expire_date_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, branch_name_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, is_close_today_allowed_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, user_),
  PROTOBUF_FIELD_OFFSET(::pb::Position, user_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::PositionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::PositionList, list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::ReqForceClosePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ReqForceClosePosition, user_),
  PROTOBUF_FIELD_OFFSET(::pb::ReqForceClosePosition, symbol_),
  PROTOBUF_FIELD_OFFSET(::pb::ReqForceClosePosition, direction_),
  PROTOBUF_FIELD_OFFSET(::pb::ReqForceClosePosition, price_),
  PROTOBUF_FIELD_OFFSET(::pb::ReqForceClosePosition, volume_),
  PROTOBUF_FIELD_OFFSET(::pb::ReqForceClosePosition, account_),
  PROTOBUF_FIELD_OFFSET(::pb::ReqForceClosePosition, repurchase_),
  PROTOBUF_FIELD_OFFSET(::pb::ReqForceClosePosition, comment_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::PositionSummation)},
  { 27, -1, sizeof(::pb::Position)},
  { 55, -1, sizeof(::pb::PositionList)},
  { 61, -1, sizeof(::pb::ReqForceClosePosition)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_PositionSummation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_PositionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ReqForceClosePosition_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_position_2eproto = {
  {}, AddDescriptors_position_2eproto, "position.proto", schemas,
  file_default_instances, TableStruct_position_2eproto::offsets,
  file_level_metadata_position_2eproto, 4, file_level_enum_descriptors_position_2eproto, file_level_service_descriptors_position_2eproto,
};

const char descriptor_table_protodef_position_2eproto[] =
  "\n\016position.proto\022\002pb\032\014common.proto\032\013orde"
  "r.proto\"\320\003\n\021PositionSummation\022\021\n\tdirecti"
  "on\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\022\025\n\rroute_account\030"
  "\003 \001(\t\022\020\n\010position\030\004 \001(\005\022\016\n\006amount\030\005 \001(\001\022"
  "\014\n\004cost\030\006 \001(\001\022\016\n\006frozen\030\007 \001(\005\022\021\n\tavailab"
  "le\030\010 \001(\005\022\027\n\017position_profit\030\t \001(\001\022\025\n\rclo"
  "sed_profit\030\n \001(\001\022\016\n\006margin\030\013 \001(\001\022\025\n\rfroz"
  "en_margin\030\014 \001(\001\022\022\n\ncommission\030\r \001(\001\022\031\n\021f"
  "rozen_commission\030\016 \001(\001\022\020\n\010interest\030\017 \001(\001"
  "\022\027\n\017frozen_interest\030\020 \001(\001\022\022\n\nmtm_profit\030"
  "\021 \001(\001\022\035\n\025cleared_closed_profit\030\022 \001(\001\022\021\n\t"
  "stamp_tax\030\023 \001(\001\022\024\n\014transfer_fee\030\024 \001(\001\022\016\n"
  "\006branch\030\025 \001(\t\022\023\n\013branch_name\030\026 \001(\t\"\335\004\n\010P"
  "osition\022\032\n\006symbol\030\001 \001(\0132\n.pb.Symbol\022(\n\ts"
  "ummation\030\002 \001(\0132\025.pb.PositionSummation\022.\n"
  "\017today_summation\030\003 \001(\0132\025.pb.PositionSumm"
  "ation\0222\n\023yesterday_summation\030\004 \001(\0132\025.pb."
  "PositionSummation\022\034\n\024pre_settlement_pric"
  "e\030\005 \001(\001\022\030\n\020settlement_price\030\006 \001(\001\022\022\n\nlas"
  "t_price\030\007 \001(\001\022\023\n\013trading_day\030\010 \001(\005\022\024\n\014pr"
  "oduct_type\030\t \001(\005\022\030\n\020settlement_group\030\n \001"
  "(\005\022\027\n\017volume_multiple\030\013 \001(\005\022!\n\nproduct_i"
  "d\030\014 \001(\0132\r.pb.ProductID\022\022\n\nprice_tick\030\r \001"
  "(\001\022\023\n\013symbol_name\030\016 \001(\t\022\017\n\007account\030\017 \001(\t"
  "\022\024\n\014account_name\030\020 \001(\t\022\017\n\007company\030\021 \001(\003\022"
  "\016\n\006branch\030\022 \001(\t\022\023\n\013expire_date\030\023 \001(\005\022\023\n\013"
  "branch_name\030\024 \001(\t\022\036\n\026is_close_today_allo"
  "wed\030\025 \001(\010\022\014\n\004user\030\026 \001(\t\022\021\n\tuser_name\030\027 \001"
  "(\t\"*\n\014PositionList\022\032\n\004list\030\001 \003(\0132\014.pb.Po"
  "sition\"\275\001\n\025ReqForceClosePosition\022\014\n\004user"
  "\030\001 \001(\t\022\032\n\006symbol\030\002 \001(\0132\n.pb.Symbol\022%\n\tdi"
  "rection\030\003 \001(\0162\022.pb.OrderDirection\022\r\n\005pri"
  "ce\030\004 \001(\001\022\016\n\006volume\030\005 \001(\005\022\017\n\007account\030\006 \001("
  "\t\022\022\n\nrepurchase\030\007 \001(\010\022\017\n\007comment\030\010 \001(\tb\006"
  "proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_position_2eproto = {
  false, InitDefaults_position_2eproto, 
  descriptor_table_protodef_position_2eproto,
  "position.proto", &assign_descriptors_table_position_2eproto, 1366,
};

void AddDescriptors_position_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_common_2eproto,
    ::AddDescriptors_order_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_position_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_position_2eproto = []() { AddDescriptors_position_2eproto(); return true; }();
namespace pb {

// ===================================================================

void PositionSummation::InitAsDefaultInstance() {
}
class PositionSummation::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionSummation::kDirectionFieldNumber;
const int PositionSummation::kTypeFieldNumber;
const int PositionSummation::kRouteAccountFieldNumber;
const int PositionSummation::kPositionFieldNumber;
const int PositionSummation::kAmountFieldNumber;
const int PositionSummation::kCostFieldNumber;
const int PositionSummation::kFrozenFieldNumber;
const int PositionSummation::kAvailableFieldNumber;
const int PositionSummation::kPositionProfitFieldNumber;
const int PositionSummation::kClosedProfitFieldNumber;
const int PositionSummation::kMarginFieldNumber;
const int PositionSummation::kFrozenMarginFieldNumber;
const int PositionSummation::kCommissionFieldNumber;
const int PositionSummation::kFrozenCommissionFieldNumber;
const int PositionSummation::kInterestFieldNumber;
const int PositionSummation::kFrozenInterestFieldNumber;
const int PositionSummation::kMtmProfitFieldNumber;
const int PositionSummation::kClearedClosedProfitFieldNumber;
const int PositionSummation::kStampTaxFieldNumber;
const int PositionSummation::kTransferFeeFieldNumber;
const int PositionSummation::kBranchFieldNumber;
const int PositionSummation::kBranchNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionSummation::PositionSummation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PositionSummation)
}
PositionSummation::PositionSummation(const PositionSummation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  route_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.route_account().size() > 0) {
    route_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_account_);
  }
  branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.branch().size() > 0) {
    branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_);
  }
  branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.branch_name().size() > 0) {
    branch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_name_);
  }
  ::memcpy(&direction_, &from.direction_,
    static_cast<size_t>(reinterpret_cast<char*>(&available_) -
    reinterpret_cast<char*>(&direction_)) + sizeof(available_));
  // @@protoc_insertion_point(copy_constructor:pb.PositionSummation)
}

void PositionSummation::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PositionSummation_position_2eproto.base);
  route_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&available_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(available_));
}

PositionSummation::~PositionSummation() {
  // @@protoc_insertion_point(destructor:pb.PositionSummation)
  SharedDtor();
}

void PositionSummation::SharedDtor() {
  route_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PositionSummation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PositionSummation& PositionSummation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PositionSummation_position_2eproto.base);
  return *internal_default_instance();
}


void PositionSummation::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PositionSummation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  route_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&available_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(available_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PositionSummation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PositionSummation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 direction = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_direction(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string route_account = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.PositionSummation.route_account");
        object = msg->mutable_route_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 position = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_position(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double amount = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 41) goto handle_unusual;
        msg->set_amount(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double cost = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 49) goto handle_unusual;
        msg->set_cost(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // int32 frozen = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_frozen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 available = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_available(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double position_profit = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 73) goto handle_unusual;
        msg->set_position_profit(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double closed_profit = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 81) goto handle_unusual;
        msg->set_closed_profit(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double margin = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 89) goto handle_unusual;
        msg->set_margin(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double frozen_margin = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 97) goto handle_unusual;
        msg->set_frozen_margin(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double commission = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 105) goto handle_unusual;
        msg->set_commission(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double frozen_commission = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 113) goto handle_unusual;
        msg->set_frozen_commission(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double interest = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 121) goto handle_unusual;
        msg->set_interest(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double frozen_interest = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 129) goto handle_unusual;
        msg->set_frozen_interest(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double mtm_profit = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 137) goto handle_unusual;
        msg->set_mtm_profit(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double cleared_closed_profit = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 145) goto handle_unusual;
        msg->set_cleared_closed_profit(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double stamp_tax = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 153) goto handle_unusual;
        msg->set_stamp_tax(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double transfer_fee = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 161) goto handle_unusual;
        msg->set_transfer_fee(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // string branch = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.PositionSummation.branch");
        object = msg->mutable_branch();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string branch_name = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.PositionSummation.branch_name");
        object = msg->mutable_branch_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PositionSummation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.PositionSummation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 direction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string route_account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_route_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->route_account().data(), static_cast<int>(this->route_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.PositionSummation.route_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double amount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (41 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cost = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (49 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 frozen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frozen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 available = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double position_profit = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (73 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &position_profit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double closed_profit = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (81 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closed_profit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double margin = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (89 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &margin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double frozen_margin = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (97 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozen_margin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double commission = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (105 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &commission_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double frozen_commission = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (113 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozen_commission_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double interest = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (121 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &interest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double frozen_interest = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (129 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozen_interest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double mtm_profit = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (137 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mtm_profit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cleared_closed_profit = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (145 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cleared_closed_profit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double stamp_tax = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (153 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stamp_tax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double transfer_fee = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (161 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &transfer_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string branch = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branch().data(), static_cast<int>(this->branch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.PositionSummation.branch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string branch_name = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branch_name().data(), static_cast<int>(this->branch_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.PositionSummation.branch_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.PositionSummation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.PositionSummation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PositionSummation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.PositionSummation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 direction = 1;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->direction(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // string route_account = 3;
  if (this->route_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->route_account().data(), static_cast<int>(this->route_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PositionSummation.route_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->route_account(), output);
  }

  // int32 position = 4;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->position(), output);
  }

  // double amount = 5;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->amount(), output);
  }

  // double cost = 6;
  if (this->cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->cost(), output);
  }

  // int32 frozen = 7;
  if (this->frozen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->frozen(), output);
  }

  // int32 available = 8;
  if (this->available() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->available(), output);
  }

  // double position_profit = 9;
  if (this->position_profit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->position_profit(), output);
  }

  // double closed_profit = 10;
  if (this->closed_profit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->closed_profit(), output);
  }

  // double margin = 11;
  if (this->margin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->margin(), output);
  }

  // double frozen_margin = 12;
  if (this->frozen_margin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->frozen_margin(), output);
  }

  // double commission = 13;
  if (this->commission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->commission(), output);
  }

  // double frozen_commission = 14;
  if (this->frozen_commission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->frozen_commission(), output);
  }

  // double interest = 15;
  if (this->interest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->interest(), output);
  }

  // double frozen_interest = 16;
  if (this->frozen_interest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->frozen_interest(), output);
  }

  // double mtm_profit = 17;
  if (this->mtm_profit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->mtm_profit(), output);
  }

  // double cleared_closed_profit = 18;
  if (this->cleared_closed_profit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->cleared_closed_profit(), output);
  }

  // double stamp_tax = 19;
  if (this->stamp_tax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->stamp_tax(), output);
  }

  // double transfer_fee = 20;
  if (this->transfer_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->transfer_fee(), output);
  }

  // string branch = 21;
  if (this->branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch().data(), static_cast<int>(this->branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PositionSummation.branch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->branch(), output);
  }

  // string branch_name = 22;
  if (this->branch_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch_name().data(), static_cast<int>(this->branch_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PositionSummation.branch_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->branch_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.PositionSummation)
}

::google::protobuf::uint8* PositionSummation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.PositionSummation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 direction = 1;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->direction(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // string route_account = 3;
  if (this->route_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->route_account().data(), static_cast<int>(this->route_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PositionSummation.route_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->route_account(), target);
  }

  // int32 position = 4;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->position(), target);
  }

  // double amount = 5;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->amount(), target);
  }

  // double cost = 6;
  if (this->cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->cost(), target);
  }

  // int32 frozen = 7;
  if (this->frozen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->frozen(), target);
  }

  // int32 available = 8;
  if (this->available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->available(), target);
  }

  // double position_profit = 9;
  if (this->position_profit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->position_profit(), target);
  }

  // double closed_profit = 10;
  if (this->closed_profit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->closed_profit(), target);
  }

  // double margin = 11;
  if (this->margin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->margin(), target);
  }

  // double frozen_margin = 12;
  if (this->frozen_margin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->frozen_margin(), target);
  }

  // double commission = 13;
  if (this->commission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->commission(), target);
  }

  // double frozen_commission = 14;
  if (this->frozen_commission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->frozen_commission(), target);
  }

  // double interest = 15;
  if (this->interest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->interest(), target);
  }

  // double frozen_interest = 16;
  if (this->frozen_interest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->frozen_interest(), target);
  }

  // double mtm_profit = 17;
  if (this->mtm_profit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->mtm_profit(), target);
  }

  // double cleared_closed_profit = 18;
  if (this->cleared_closed_profit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->cleared_closed_profit(), target);
  }

  // double stamp_tax = 19;
  if (this->stamp_tax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->stamp_tax(), target);
  }

  // double transfer_fee = 20;
  if (this->transfer_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->transfer_fee(), target);
  }

  // string branch = 21;
  if (this->branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch().data(), static_cast<int>(this->branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PositionSummation.branch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->branch(), target);
  }

  // string branch_name = 22;
  if (this->branch_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch_name().data(), static_cast<int>(this->branch_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PositionSummation.branch_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->branch_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PositionSummation)
  return target;
}

size_t PositionSummation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PositionSummation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string route_account = 3;
  if (this->route_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->route_account());
  }

  // string branch = 21;
  if (this->branch().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->branch());
  }

  // string branch_name = 22;
  if (this->branch_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->branch_name());
  }

  // int32 direction = 1;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // double amount = 5;
  if (this->amount() != 0) {
    total_size += 1 + 8;
  }

  // int32 position = 4;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position());
  }

  // int32 frozen = 7;
  if (this->frozen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frozen());
  }

  // double cost = 6;
  if (this->cost() != 0) {
    total_size += 1 + 8;
  }

  // double position_profit = 9;
  if (this->position_profit() != 0) {
    total_size += 1 + 8;
  }

  // double closed_profit = 10;
  if (this->closed_profit() != 0) {
    total_size += 1 + 8;
  }

  // double margin = 11;
  if (this->margin() != 0) {
    total_size += 1 + 8;
  }

  // double frozen_margin = 12;
  if (this->frozen_margin() != 0) {
    total_size += 1 + 8;
  }

  // double commission = 13;
  if (this->commission() != 0) {
    total_size += 1 + 8;
  }

  // double frozen_commission = 14;
  if (this->frozen_commission() != 0) {
    total_size += 1 + 8;
  }

  // double interest = 15;
  if (this->interest() != 0) {
    total_size += 1 + 8;
  }

  // double frozen_interest = 16;
  if (this->frozen_interest() != 0) {
    total_size += 2 + 8;
  }

  // double mtm_profit = 17;
  if (this->mtm_profit() != 0) {
    total_size += 2 + 8;
  }

  // double cleared_closed_profit = 18;
  if (this->cleared_closed_profit() != 0) {
    total_size += 2 + 8;
  }

  // double stamp_tax = 19;
  if (this->stamp_tax() != 0) {
    total_size += 2 + 8;
  }

  // double transfer_fee = 20;
  if (this->transfer_fee() != 0) {
    total_size += 2 + 8;
  }

  // int32 available = 8;
  if (this->available() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->available());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionSummation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PositionSummation)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionSummation* source =
      ::google::protobuf::DynamicCastToGenerated<PositionSummation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PositionSummation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PositionSummation)
    MergeFrom(*source);
  }
}

void PositionSummation::MergeFrom(const PositionSummation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PositionSummation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.route_account().size() > 0) {

    route_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_account_);
  }
  if (from.branch().size() > 0) {

    branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_);
  }
  if (from.branch_name().size() > 0) {

    branch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_name_);
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
  if (from.frozen() != 0) {
    set_frozen(from.frozen());
  }
  if (from.cost() != 0) {
    set_cost(from.cost());
  }
  if (from.position_profit() != 0) {
    set_position_profit(from.position_profit());
  }
  if (from.closed_profit() != 0) {
    set_closed_profit(from.closed_profit());
  }
  if (from.margin() != 0) {
    set_margin(from.margin());
  }
  if (from.frozen_margin() != 0) {
    set_frozen_margin(from.frozen_margin());
  }
  if (from.commission() != 0) {
    set_commission(from.commission());
  }
  if (from.frozen_commission() != 0) {
    set_frozen_commission(from.frozen_commission());
  }
  if (from.interest() != 0) {
    set_interest(from.interest());
  }
  if (from.frozen_interest() != 0) {
    set_frozen_interest(from.frozen_interest());
  }
  if (from.mtm_profit() != 0) {
    set_mtm_profit(from.mtm_profit());
  }
  if (from.cleared_closed_profit() != 0) {
    set_cleared_closed_profit(from.cleared_closed_profit());
  }
  if (from.stamp_tax() != 0) {
    set_stamp_tax(from.stamp_tax());
  }
  if (from.transfer_fee() != 0) {
    set_transfer_fee(from.transfer_fee());
  }
  if (from.available() != 0) {
    set_available(from.available());
  }
}

void PositionSummation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PositionSummation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionSummation::CopyFrom(const PositionSummation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PositionSummation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionSummation::IsInitialized() const {
  return true;
}

void PositionSummation::Swap(PositionSummation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionSummation::InternalSwap(PositionSummation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  route_account_.Swap(&other->route_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  branch_.Swap(&other->branch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  branch_name_.Swap(&other->branch_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(direction_, other->direction_);
  swap(type_, other->type_);
  swap(amount_, other->amount_);
  swap(position_, other->position_);
  swap(frozen_, other->frozen_);
  swap(cost_, other->cost_);
  swap(position_profit_, other->position_profit_);
  swap(closed_profit_, other->closed_profit_);
  swap(margin_, other->margin_);
  swap(frozen_margin_, other->frozen_margin_);
  swap(commission_, other->commission_);
  swap(frozen_commission_, other->frozen_commission_);
  swap(interest_, other->interest_);
  swap(frozen_interest_, other->frozen_interest_);
  swap(mtm_profit_, other->mtm_profit_);
  swap(cleared_closed_profit_, other->cleared_closed_profit_);
  swap(stamp_tax_, other->stamp_tax_);
  swap(transfer_fee_, other->transfer_fee_);
  swap(available_, other->available_);
}

::google::protobuf::Metadata PositionSummation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_position_2eproto);
  return ::file_level_metadata_position_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Position::InitAsDefaultInstance() {
  ::pb::_Position_default_instance_._instance.get_mutable()->symbol_ = const_cast< ::pb::Symbol*>(
      ::pb::Symbol::internal_default_instance());
  ::pb::_Position_default_instance_._instance.get_mutable()->summation_ = const_cast< ::pb::PositionSummation*>(
      ::pb::PositionSummation::internal_default_instance());
  ::pb::_Position_default_instance_._instance.get_mutable()->today_summation_ = const_cast< ::pb::PositionSummation*>(
      ::pb::PositionSummation::internal_default_instance());
  ::pb::_Position_default_instance_._instance.get_mutable()->yesterday_summation_ = const_cast< ::pb::PositionSummation*>(
      ::pb::PositionSummation::internal_default_instance());
  ::pb::_Position_default_instance_._instance.get_mutable()->product_id_ = const_cast< ::pb::ProductID*>(
      ::pb::ProductID::internal_default_instance());
}
class Position::HasBitSetters {
 public:
  static const ::pb::Symbol& symbol(const Position* msg);
  static const ::pb::PositionSummation& summation(const Position* msg);
  static const ::pb::PositionSummation& today_summation(const Position* msg);
  static const ::pb::PositionSummation& yesterday_summation(const Position* msg);
  static const ::pb::ProductID& product_id(const Position* msg);
};

const ::pb::Symbol&
Position::HasBitSetters::symbol(const Position* msg) {
  return *msg->symbol_;
}
const ::pb::PositionSummation&
Position::HasBitSetters::summation(const Position* msg) {
  return *msg->summation_;
}
const ::pb::PositionSummation&
Position::HasBitSetters::today_summation(const Position* msg) {
  return *msg->today_summation_;
}
const ::pb::PositionSummation&
Position::HasBitSetters::yesterday_summation(const Position* msg) {
  return *msg->yesterday_summation_;
}
const ::pb::ProductID&
Position::HasBitSetters::product_id(const Position* msg) {
  return *msg->product_id_;
}
void Position::clear_symbol() {
  if (GetArenaNoVirtual() == nullptr && symbol_ != nullptr) {
    delete symbol_;
  }
  symbol_ = nullptr;
}
void Position::clear_product_id() {
  if (GetArenaNoVirtual() == nullptr && product_id_ != nullptr) {
    delete product_id_;
  }
  product_id_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kSymbolFieldNumber;
const int Position::kSummationFieldNumber;
const int Position::kTodaySummationFieldNumber;
const int Position::kYesterdaySummationFieldNumber;
const int Position::kPreSettlementPriceFieldNumber;
const int Position::kSettlementPriceFieldNumber;
const int Position::kLastPriceFieldNumber;
const int Position::kTradingDayFieldNumber;
const int Position::kProductTypeFieldNumber;
const int Position::kSettlementGroupFieldNumber;
const int Position::kVolumeMultipleFieldNumber;
const int Position::kProductIdFieldNumber;
const int Position::kPriceTickFieldNumber;
const int Position::kSymbolNameFieldNumber;
const int Position::kAccountFieldNumber;
const int Position::kAccountNameFieldNumber;
const int Position::kCompanyFieldNumber;
const int Position::kBranchFieldNumber;
const int Position::kExpireDateFieldNumber;
const int Position::kBranchNameFieldNumber;
const int Position::kIsCloseTodayAllowedFieldNumber;
const int Position::kUserFieldNumber;
const int Position::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Position)
}
Position::Position(const Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol_name().size() > 0) {
    symbol_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_name_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_name().size() > 0) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.branch().size() > 0) {
    branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_);
  }
  branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.branch_name().size() > 0) {
    branch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_name_);
  }
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.has_symbol()) {
    symbol_ = new ::pb::Symbol(*from.symbol_);
  } else {
    symbol_ = nullptr;
  }
  if (from.has_summation()) {
    summation_ = new ::pb::PositionSummation(*from.summation_);
  } else {
    summation_ = nullptr;
  }
  if (from.has_today_summation()) {
    today_summation_ = new ::pb::PositionSummation(*from.today_summation_);
  } else {
    today_summation_ = nullptr;
  }
  if (from.has_yesterday_summation()) {
    yesterday_summation_ = new ::pb::PositionSummation(*from.yesterday_summation_);
  } else {
    yesterday_summation_ = nullptr;
  }
  if (from.has_product_id()) {
    product_id_ = new ::pb::ProductID(*from.product_id_);
  } else {
    product_id_ = nullptr;
  }
  ::memcpy(&pre_settlement_price_, &from.pre_settlement_price_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_close_today_allowed_) -
    reinterpret_cast<char*>(&pre_settlement_price_)) + sizeof(is_close_today_allowed_));
  // @@protoc_insertion_point(copy_constructor:pb.Position)
}

void Position::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Position_position_2eproto.base);
  symbol_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&symbol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_close_today_allowed_) -
      reinterpret_cast<char*>(&symbol_)) + sizeof(is_close_today_allowed_));
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:pb.Position)
  SharedDtor();
}

void Position::SharedDtor() {
  symbol_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete symbol_;
  if (this != internal_default_instance()) delete summation_;
  if (this != internal_default_instance()) delete today_summation_;
  if (this != internal_default_instance()) delete yesterday_summation_;
  if (this != internal_default_instance()) delete product_id_;
}

void Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Position& Position::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Position_position_2eproto.base);
  return *internal_default_instance();
}


void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && symbol_ != nullptr) {
    delete symbol_;
  }
  symbol_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && summation_ != nullptr) {
    delete summation_;
  }
  summation_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && today_summation_ != nullptr) {
    delete today_summation_;
  }
  today_summation_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && yesterday_summation_ != nullptr) {
    delete yesterday_summation_;
  }
  yesterday_summation_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && product_id_ != nullptr) {
    delete product_id_;
  }
  product_id_ = nullptr;
  ::memset(&pre_settlement_price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_close_today_allowed_) -
      reinterpret_cast<char*>(&pre_settlement_price_)) + sizeof(is_close_today_allowed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Position::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Position*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .pb.Symbol symbol = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::Symbol::_InternalParse;
        object = msg->mutable_symbol();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pb.PositionSummation summation = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::PositionSummation::_InternalParse;
        object = msg->mutable_summation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pb.PositionSummation today_summation = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::PositionSummation::_InternalParse;
        object = msg->mutable_today_summation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pb.PositionSummation yesterday_summation = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::PositionSummation::_InternalParse;
        object = msg->mutable_yesterday_summation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // double pre_settlement_price = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 41) goto handle_unusual;
        msg->set_pre_settlement_price(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double settlement_price = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 49) goto handle_unusual;
        msg->set_settlement_price(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double last_price = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 57) goto handle_unusual;
        msg->set_last_price(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // int32 trading_day = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_trading_day(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 product_type = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_product_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 settlement_group = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_settlement_group(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 volume_multiple = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_volume_multiple(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .pb.ProductID product_id = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::ProductID::_InternalParse;
        object = msg->mutable_product_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // double price_tick = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 105) goto handle_unusual;
        msg->set_price_tick(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // string symbol_name = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.Position.symbol_name");
        object = msg->mutable_symbol_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string account = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.Position.account");
        object = msg->mutable_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string account_name = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.Position.account_name");
        object = msg->mutable_account_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 company = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 136) goto handle_unusual;
        msg->set_company(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string branch = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.Position.branch");
        object = msg->mutable_branch();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 expire_date = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 152) goto handle_unusual;
        msg->set_expire_date(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string branch_name = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.Position.branch_name");
        object = msg->mutable_branch_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool is_close_today_allowed = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 168) goto handle_unusual;
        msg->set_is_close_today_allowed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string user = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.Position.user");
        object = msg->mutable_user();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string user_name = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.Position.user_name");
        object = msg->mutable_user_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Position)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Symbol symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_symbol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.PositionSummation summation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_summation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.PositionSummation today_summation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_today_summation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.PositionSummation yesterday_summation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_yesterday_summation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pre_settlement_price = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (41 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pre_settlement_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double settlement_price = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (49 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &settlement_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double last_price = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (57 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &last_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 trading_day = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trading_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 product_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &product_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 settlement_group = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &settlement_group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volume_multiple = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_multiple_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.ProductID product_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double price_tick = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (105 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol_name = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol_name().data(), static_cast<int>(this->symbol_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Position.symbol_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Position.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_name = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), static_cast<int>(this->account_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Position.account_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 company = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (136 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &company_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string branch = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branch().data(), static_cast<int>(this->branch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Position.branch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 expire_date = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (152 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expire_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string branch_name = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branch_name().data(), static_cast<int>(this->branch_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Position.branch_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_close_today_allowed = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (168 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_close_today_allowed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Position.user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_name = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Position.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Position)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Symbol symbol = 1;
  if (this->has_symbol()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::symbol(this), output);
  }

  // .pb.PositionSummation summation = 2;
  if (this->has_summation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::summation(this), output);
  }

  // .pb.PositionSummation today_summation = 3;
  if (this->has_today_summation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::today_summation(this), output);
  }

  // .pb.PositionSummation yesterday_summation = 4;
  if (this->has_yesterday_summation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::yesterday_summation(this), output);
  }

  // double pre_settlement_price = 5;
  if (this->pre_settlement_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->pre_settlement_price(), output);
  }

  // double settlement_price = 6;
  if (this->settlement_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->settlement_price(), output);
  }

  // double last_price = 7;
  if (this->last_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->last_price(), output);
  }

  // int32 trading_day = 8;
  if (this->trading_day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->trading_day(), output);
  }

  // int32 product_type = 9;
  if (this->product_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->product_type(), output);
  }

  // int32 settlement_group = 10;
  if (this->settlement_group() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->settlement_group(), output);
  }

  // int32 volume_multiple = 11;
  if (this->volume_multiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->volume_multiple(), output);
  }

  // .pb.ProductID product_id = 12;
  if (this->has_product_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::product_id(this), output);
  }

  // double price_tick = 13;
  if (this->price_tick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->price_tick(), output);
  }

  // string symbol_name = 14;
  if (this->symbol_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol_name().data(), static_cast<int>(this->symbol_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.symbol_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->symbol_name(), output);
  }

  // string account = 15;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->account(), output);
  }

  // string account_name = 16;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->account_name(), output);
  }

  // int64 company = 17;
  if (this->company() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->company(), output);
  }

  // string branch = 18;
  if (this->branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch().data(), static_cast<int>(this->branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.branch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->branch(), output);
  }

  // int32 expire_date = 19;
  if (this->expire_date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->expire_date(), output);
  }

  // string branch_name = 20;
  if (this->branch_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch_name().data(), static_cast<int>(this->branch_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.branch_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->branch_name(), output);
  }

  // bool is_close_today_allowed = 21;
  if (this->is_close_today_allowed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->is_close_today_allowed(), output);
  }

  // string user = 22;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->user(), output);
  }

  // string user_name = 23;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->user_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Symbol symbol = 1;
  if (this->has_symbol()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::symbol(this), target);
  }

  // .pb.PositionSummation summation = 2;
  if (this->has_summation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::summation(this), target);
  }

  // .pb.PositionSummation today_summation = 3;
  if (this->has_today_summation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::today_summation(this), target);
  }

  // .pb.PositionSummation yesterday_summation = 4;
  if (this->has_yesterday_summation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::yesterday_summation(this), target);
  }

  // double pre_settlement_price = 5;
  if (this->pre_settlement_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->pre_settlement_price(), target);
  }

  // double settlement_price = 6;
  if (this->settlement_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->settlement_price(), target);
  }

  // double last_price = 7;
  if (this->last_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->last_price(), target);
  }

  // int32 trading_day = 8;
  if (this->trading_day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->trading_day(), target);
  }

  // int32 product_type = 9;
  if (this->product_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->product_type(), target);
  }

  // int32 settlement_group = 10;
  if (this->settlement_group() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->settlement_group(), target);
  }

  // int32 volume_multiple = 11;
  if (this->volume_multiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->volume_multiple(), target);
  }

  // .pb.ProductID product_id = 12;
  if (this->has_product_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::product_id(this), target);
  }

  // double price_tick = 13;
  if (this->price_tick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->price_tick(), target);
  }

  // string symbol_name = 14;
  if (this->symbol_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol_name().data(), static_cast<int>(this->symbol_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.symbol_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->symbol_name(), target);
  }

  // string account = 15;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->account(), target);
  }

  // string account_name = 16;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->account_name(), target);
  }

  // int64 company = 17;
  if (this->company() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->company(), target);
  }

  // string branch = 18;
  if (this->branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch().data(), static_cast<int>(this->branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.branch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->branch(), target);
  }

  // int32 expire_date = 19;
  if (this->expire_date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->expire_date(), target);
  }

  // string branch_name = 20;
  if (this->branch_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch_name().data(), static_cast<int>(this->branch_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.branch_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->branch_name(), target);
  }

  // bool is_close_today_allowed = 21;
  if (this->is_close_today_allowed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->is_close_today_allowed(), target);
  }

  // string user = 22;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->user(), target);
  }

  // string user_name = 23;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Position.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->user_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Position)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol_name = 14;
  if (this->symbol_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol_name());
  }

  // string account = 15;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string account_name = 16;
  if (this->account_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // string branch = 18;
  if (this->branch().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->branch());
  }

  // string branch_name = 20;
  if (this->branch_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->branch_name());
  }

  // string user = 22;
  if (this->user().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // string user_name = 23;
  if (this->user_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // .pb.Symbol symbol = 1;
  if (this->has_symbol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *symbol_);
  }

  // .pb.PositionSummation summation = 2;
  if (this->has_summation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *summation_);
  }

  // .pb.PositionSummation today_summation = 3;
  if (this->has_today_summation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *today_summation_);
  }

  // .pb.PositionSummation yesterday_summation = 4;
  if (this->has_yesterday_summation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *yesterday_summation_);
  }

  // .pb.ProductID product_id = 12;
  if (this->has_product_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *product_id_);
  }

  // double pre_settlement_price = 5;
  if (this->pre_settlement_price() != 0) {
    total_size += 1 + 8;
  }

  // double settlement_price = 6;
  if (this->settlement_price() != 0) {
    total_size += 1 + 8;
  }

  // double last_price = 7;
  if (this->last_price() != 0) {
    total_size += 1 + 8;
  }

  // int32 trading_day = 8;
  if (this->trading_day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trading_day());
  }

  // int32 product_type = 9;
  if (this->product_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->product_type());
  }

  // int32 settlement_group = 10;
  if (this->settlement_group() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->settlement_group());
  }

  // int32 volume_multiple = 11;
  if (this->volume_multiple() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume_multiple());
  }

  // double price_tick = 13;
  if (this->price_tick() != 0) {
    total_size += 1 + 8;
  }

  // int64 company = 17;
  if (this->company() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->company());
  }

  // int32 expire_date = 19;
  if (this->expire_date() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->expire_date());
  }

  // bool is_close_today_allowed = 21;
  if (this->is_close_today_allowed() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Position* source =
      ::google::protobuf::DynamicCastToGenerated<Position>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol_name().size() > 0) {

    symbol_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_name_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.branch().size() > 0) {

    branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_);
  }
  if (from.branch_name().size() > 0) {

    branch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_name_);
  }
  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.has_symbol()) {
    mutable_symbol()->::pb::Symbol::MergeFrom(from.symbol());
  }
  if (from.has_summation()) {
    mutable_summation()->::pb::PositionSummation::MergeFrom(from.summation());
  }
  if (from.has_today_summation()) {
    mutable_today_summation()->::pb::PositionSummation::MergeFrom(from.today_summation());
  }
  if (from.has_yesterday_summation()) {
    mutable_yesterday_summation()->::pb::PositionSummation::MergeFrom(from.yesterday_summation());
  }
  if (from.has_product_id()) {
    mutable_product_id()->::pb::ProductID::MergeFrom(from.product_id());
  }
  if (from.pre_settlement_price() != 0) {
    set_pre_settlement_price(from.pre_settlement_price());
  }
  if (from.settlement_price() != 0) {
    set_settlement_price(from.settlement_price());
  }
  if (from.last_price() != 0) {
    set_last_price(from.last_price());
  }
  if (from.trading_day() != 0) {
    set_trading_day(from.trading_day());
  }
  if (from.product_type() != 0) {
    set_product_type(from.product_type());
  }
  if (from.settlement_group() != 0) {
    set_settlement_group(from.settlement_group());
  }
  if (from.volume_multiple() != 0) {
    set_volume_multiple(from.volume_multiple());
  }
  if (from.price_tick() != 0) {
    set_price_tick(from.price_tick());
  }
  if (from.company() != 0) {
    set_company(from.company());
  }
  if (from.expire_date() != 0) {
    set_expire_date(from.expire_date());
  }
  if (from.is_close_today_allowed() != 0) {
    set_is_close_today_allowed(from.is_close_today_allowed());
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  symbol_name_.Swap(&other->symbol_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_name_.Swap(&other->account_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  branch_.Swap(&other->branch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  branch_name_.Swap(&other->branch_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_.Swap(&other->user_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_name_.Swap(&other->user_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(symbol_, other->symbol_);
  swap(summation_, other->summation_);
  swap(today_summation_, other->today_summation_);
  swap(yesterday_summation_, other->yesterday_summation_);
  swap(product_id_, other->product_id_);
  swap(pre_settlement_price_, other->pre_settlement_price_);
  swap(settlement_price_, other->settlement_price_);
  swap(last_price_, other->last_price_);
  swap(trading_day_, other->trading_day_);
  swap(product_type_, other->product_type_);
  swap(settlement_group_, other->settlement_group_);
  swap(volume_multiple_, other->volume_multiple_);
  swap(price_tick_, other->price_tick_);
  swap(company_, other->company_);
  swap(expire_date_, other->expire_date_);
  swap(is_close_today_allowed_, other->is_close_today_allowed_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_position_2eproto);
  return ::file_level_metadata_position_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PositionList::InitAsDefaultInstance() {
}
class PositionList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionList::PositionList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PositionList)
}
PositionList::PositionList(const PositionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.PositionList)
}

void PositionList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PositionList_position_2eproto.base);
}

PositionList::~PositionList() {
  // @@protoc_insertion_point(destructor:pb.PositionList)
  SharedDtor();
}

void PositionList::SharedDtor() {
}

void PositionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PositionList& PositionList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PositionList_position_2eproto.base);
  return *internal_default_instance();
}


void PositionList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PositionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PositionList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PositionList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .pb.Position list = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::pb::Position::_InternalParse;
          object = msg->add_list();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PositionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.PositionList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.Position list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.PositionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.PositionList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PositionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.PositionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.Position list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.PositionList)
}

::google::protobuf::uint8* PositionList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.PositionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.Position list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PositionList)
  return target;
}

size_t PositionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PositionList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.Position list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PositionList)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionList* source =
      ::google::protobuf::DynamicCastToGenerated<PositionList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PositionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PositionList)
    MergeFrom(*source);
  }
}

void PositionList::MergeFrom(const PositionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PositionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void PositionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PositionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionList::CopyFrom(const PositionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PositionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionList::IsInitialized() const {
  return true;
}

void PositionList::Swap(PositionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionList::InternalSwap(PositionList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
}

::google::protobuf::Metadata PositionList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_position_2eproto);
  return ::file_level_metadata_position_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReqForceClosePosition::InitAsDefaultInstance() {
  ::pb::_ReqForceClosePosition_default_instance_._instance.get_mutable()->symbol_ = const_cast< ::pb::Symbol*>(
      ::pb::Symbol::internal_default_instance());
}
class ReqForceClosePosition::HasBitSetters {
 public:
  static const ::pb::Symbol& symbol(const ReqForceClosePosition* msg);
};

const ::pb::Symbol&
ReqForceClosePosition::HasBitSetters::symbol(const ReqForceClosePosition* msg) {
  return *msg->symbol_;
}
void ReqForceClosePosition::clear_symbol() {
  if (GetArenaNoVirtual() == nullptr && symbol_ != nullptr) {
    delete symbol_;
  }
  symbol_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqForceClosePosition::kUserFieldNumber;
const int ReqForceClosePosition::kSymbolFieldNumber;
const int ReqForceClosePosition::kDirectionFieldNumber;
const int ReqForceClosePosition::kPriceFieldNumber;
const int ReqForceClosePosition::kVolumeFieldNumber;
const int ReqForceClosePosition::kAccountFieldNumber;
const int ReqForceClosePosition::kRepurchaseFieldNumber;
const int ReqForceClosePosition::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqForceClosePosition::ReqForceClosePosition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReqForceClosePosition)
}
ReqForceClosePosition::ReqForceClosePosition(const ReqForceClosePosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_symbol()) {
    symbol_ = new ::pb::Symbol(*from.symbol_);
  } else {
    symbol_ = nullptr;
  }
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&repurchase_) -
    reinterpret_cast<char*>(&price_)) + sizeof(repurchase_));
  // @@protoc_insertion_point(copy_constructor:pb.ReqForceClosePosition)
}

void ReqForceClosePosition::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReqForceClosePosition_position_2eproto.base);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&symbol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repurchase_) -
      reinterpret_cast<char*>(&symbol_)) + sizeof(repurchase_));
}

ReqForceClosePosition::~ReqForceClosePosition() {
  // @@protoc_insertion_point(destructor:pb.ReqForceClosePosition)
  SharedDtor();
}

void ReqForceClosePosition::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete symbol_;
}

void ReqForceClosePosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqForceClosePosition& ReqForceClosePosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqForceClosePosition_position_2eproto.base);
  return *internal_default_instance();
}


void ReqForceClosePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReqForceClosePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && symbol_ != nullptr) {
    delete symbol_;
  }
  symbol_ = nullptr;
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repurchase_) -
      reinterpret_cast<char*>(&price_)) + sizeof(repurchase_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqForceClosePosition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqForceClosePosition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string user = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.ReqForceClosePosition.user");
        object = msg->mutable_user();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .pb.Symbol symbol = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pb::Symbol::_InternalParse;
        object = msg->mutable_symbol();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pb.OrderDirection direction = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_direction(static_cast<::pb::OrderDirection>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double price = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_price(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // int32 volume = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_volume(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string account = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.ReqForceClosePosition.account");
        object = msg->mutable_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool repurchase = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_repurchase(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string comment = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("pb.ReqForceClosePosition.comment");
        object = msg->mutable_comment();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqForceClosePosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReqForceClosePosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ReqForceClosePosition.user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Symbol symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_symbol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.OrderDirection direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_direction(static_cast< ::pb::OrderDirection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volume = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ReqForceClosePosition.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool repurchase = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &repurchase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comment = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ReqForceClosePosition.comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReqForceClosePosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReqForceClosePosition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqForceClosePosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReqForceClosePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqForceClosePosition.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user(), output);
  }

  // .pb.Symbol symbol = 2;
  if (this->has_symbol()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::symbol(this), output);
  }

  // .pb.OrderDirection direction = 3;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->direction(), output);
  }

  // double price = 4;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->price(), output);
  }

  // int32 volume = 5;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->volume(), output);
  }

  // string account = 6;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqForceClosePosition.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account(), output);
  }

  // bool repurchase = 7;
  if (this->repurchase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->repurchase(), output);
  }

  // string comment = 8;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqForceClosePosition.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->comment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReqForceClosePosition)
}

::google::protobuf::uint8* ReqForceClosePosition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReqForceClosePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqForceClosePosition.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user(), target);
  }

  // .pb.Symbol symbol = 2;
  if (this->has_symbol()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::symbol(this), target);
  }

  // .pb.OrderDirection direction = 3;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->direction(), target);
  }

  // double price = 4;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->price(), target);
  }

  // int32 volume = 5;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->volume(), target);
  }

  // string account = 6;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqForceClosePosition.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account(), target);
  }

  // bool repurchase = 7;
  if (this->repurchase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->repurchase(), target);
  }

  // string comment = 8;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReqForceClosePosition.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->comment(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReqForceClosePosition)
  return target;
}

size_t ReqForceClosePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReqForceClosePosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // string account = 6;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string comment = 8;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // .pb.Symbol symbol = 2;
  if (this->has_symbol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *symbol_);
  }

  // double price = 4;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // .pb.OrderDirection direction = 3;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
  }

  // int32 volume = 5;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // bool repurchase = 7;
  if (this->repurchase() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqForceClosePosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReqForceClosePosition)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqForceClosePosition* source =
      ::google::protobuf::DynamicCastToGenerated<ReqForceClosePosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReqForceClosePosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReqForceClosePosition)
    MergeFrom(*source);
  }
}

void ReqForceClosePosition::MergeFrom(const ReqForceClosePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReqForceClosePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_symbol()) {
    mutable_symbol()->::pb::Symbol::MergeFrom(from.symbol());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.repurchase() != 0) {
    set_repurchase(from.repurchase());
  }
}

void ReqForceClosePosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReqForceClosePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqForceClosePosition::CopyFrom(const ReqForceClosePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReqForceClosePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqForceClosePosition::IsInitialized() const {
  return true;
}

void ReqForceClosePosition::Swap(ReqForceClosePosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqForceClosePosition::InternalSwap(ReqForceClosePosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  user_.Swap(&other->user_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(symbol_, other->symbol_);
  swap(price_, other->price_);
  swap(direction_, other->direction_);
  swap(volume_, other->volume_);
  swap(repurchase_, other->repurchase_);
}

::google::protobuf::Metadata ReqForceClosePosition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_position_2eproto);
  return ::file_level_metadata_position_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::pb::PositionSummation* Arena::CreateMaybeMessage< ::pb::PositionSummation >(Arena* arena) {
  return Arena::CreateInternal< ::pb::PositionSummation >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::Position* Arena::CreateMaybeMessage< ::pb::Position >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Position >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::PositionList* Arena::CreateMaybeMessage< ::pb::PositionList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::PositionList >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ReqForceClosePosition* Arena::CreateMaybeMessage< ::pb::ReqForceClosePosition >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReqForceClosePosition >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
