// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: binding.proto

#ifndef PROTOBUF_INCLUDED_binding_2eproto
#define PROTOBUF_INCLUDED_binding_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_binding_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_binding_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[17]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_binding_2eproto();
namespace pb {
class CtpOnFrontConnected;
class CtpOnFrontConnectedDefaultTypeInternal;
extern CtpOnFrontConnectedDefaultTypeInternal _CtpOnFrontConnected_default_instance_;
class CtpOnFrontDisconnected;
class CtpOnFrontDisconnectedDefaultTypeInternal;
extern CtpOnFrontDisconnectedDefaultTypeInternal _CtpOnFrontDisconnected_default_instance_;
class CtpOnRspSettlementInfoConfirm;
class CtpOnRspSettlementInfoConfirmDefaultTypeInternal;
extern CtpOnRspSettlementInfoConfirmDefaultTypeInternal _CtpOnRspSettlementInfoConfirm_default_instance_;
class CtpReqAuthencate;
class CtpReqAuthencateDefaultTypeInternal;
extern CtpReqAuthencateDefaultTypeInternal _CtpReqAuthencate_default_instance_;
class CtpReqConnect;
class CtpReqConnectDefaultTypeInternal;
extern CtpReqConnectDefaultTypeInternal _CtpReqConnect_default_instance_;
class CtpReqQryAccountRegister;
class CtpReqQryAccountRegisterDefaultTypeInternal;
extern CtpReqQryAccountRegisterDefaultTypeInternal _CtpReqQryAccountRegister_default_instance_;
class CtpReqQryInvestor;
class CtpReqQryInvestorDefaultTypeInternal;
extern CtpReqQryInvestorDefaultTypeInternal _CtpReqQryInvestor_default_instance_;
class CtpReqQryTransferBank;
class CtpReqQryTransferBankDefaultTypeInternal;
extern CtpReqQryTransferBankDefaultTypeInternal _CtpReqQryTransferBank_default_instance_;
class CtpReqSettlementInfoConfirm;
class CtpReqSettlementInfoConfirmDefaultTypeInternal;
extern CtpReqSettlementInfoConfirmDefaultTypeInternal _CtpReqSettlementInfoConfirm_default_instance_;
class CtpReqTransfer;
class CtpReqTransferDefaultTypeInternal;
extern CtpReqTransferDefaultTypeInternal _CtpReqTransfer_default_instance_;
class CtpReqUserLogin;
class CtpReqUserLoginDefaultTypeInternal;
extern CtpReqUserLoginDefaultTypeInternal _CtpReqUserLogin_default_instance_;
class CtpRspAuthencate;
class CtpRspAuthencateDefaultTypeInternal;
extern CtpRspAuthencateDefaultTypeInternal _CtpRspAuthencate_default_instance_;
class CtpRspQryAccountRegister;
class CtpRspQryAccountRegisterDefaultTypeInternal;
extern CtpRspQryAccountRegisterDefaultTypeInternal _CtpRspQryAccountRegister_default_instance_;
class CtpRspQryInvestor;
class CtpRspQryInvestorDefaultTypeInternal;
extern CtpRspQryInvestorDefaultTypeInternal _CtpRspQryInvestor_default_instance_;
class CtpRspQryTransferBank;
class CtpRspQryTransferBankDefaultTypeInternal;
extern CtpRspQryTransferBankDefaultTypeInternal _CtpRspQryTransferBank_default_instance_;
class CtpRspTransfer;
class CtpRspTransferDefaultTypeInternal;
extern CtpRspTransferDefaultTypeInternal _CtpRspTransfer_default_instance_;
class CtpRspUserLogin;
class CtpRspUserLoginDefaultTypeInternal;
extern CtpRspUserLoginDefaultTypeInternal _CtpRspUserLogin_default_instance_;
}  // namespace pb
namespace google {
namespace protobuf {
template<> ::pb::CtpOnFrontConnected* Arena::CreateMaybeMessage<::pb::CtpOnFrontConnected>(Arena*);
template<> ::pb::CtpOnFrontDisconnected* Arena::CreateMaybeMessage<::pb::CtpOnFrontDisconnected>(Arena*);
template<> ::pb::CtpOnRspSettlementInfoConfirm* Arena::CreateMaybeMessage<::pb::CtpOnRspSettlementInfoConfirm>(Arena*);
template<> ::pb::CtpReqAuthencate* Arena::CreateMaybeMessage<::pb::CtpReqAuthencate>(Arena*);
template<> ::pb::CtpReqConnect* Arena::CreateMaybeMessage<::pb::CtpReqConnect>(Arena*);
template<> ::pb::CtpReqQryAccountRegister* Arena::CreateMaybeMessage<::pb::CtpReqQryAccountRegister>(Arena*);
template<> ::pb::CtpReqQryInvestor* Arena::CreateMaybeMessage<::pb::CtpReqQryInvestor>(Arena*);
template<> ::pb::CtpReqQryTransferBank* Arena::CreateMaybeMessage<::pb::CtpReqQryTransferBank>(Arena*);
template<> ::pb::CtpReqSettlementInfoConfirm* Arena::CreateMaybeMessage<::pb::CtpReqSettlementInfoConfirm>(Arena*);
template<> ::pb::CtpReqTransfer* Arena::CreateMaybeMessage<::pb::CtpReqTransfer>(Arena*);
template<> ::pb::CtpReqUserLogin* Arena::CreateMaybeMessage<::pb::CtpReqUserLogin>(Arena*);
template<> ::pb::CtpRspAuthencate* Arena::CreateMaybeMessage<::pb::CtpRspAuthencate>(Arena*);
template<> ::pb::CtpRspQryAccountRegister* Arena::CreateMaybeMessage<::pb::CtpRspQryAccountRegister>(Arena*);
template<> ::pb::CtpRspQryInvestor* Arena::CreateMaybeMessage<::pb::CtpRspQryInvestor>(Arena*);
template<> ::pb::CtpRspQryTransferBank* Arena::CreateMaybeMessage<::pb::CtpRspQryTransferBank>(Arena*);
template<> ::pb::CtpRspTransfer* Arena::CreateMaybeMessage<::pb::CtpRspTransfer>(Arena*);
template<> ::pb::CtpRspUserLogin* Arena::CreateMaybeMessage<::pb::CtpRspUserLogin>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pb {

enum BindingCallType {
  CTP_CREATE_API = 0,
  CTP_USER_LOGIN = 1,
  CTP_ON_RSP_USER_LOGIN = 2,
  CTP_ON_RTN_ORDER = 3,
  CTP_ON_RTN_TRADE = 4,
  CTP_ON_RTN_CANCEL_ORDER = 5,
  CTP_ON_RTN_MTR = 6,
  CTP_ON_DISCONNECTED = 7,
  CTP_REQ_SEND_ORDER = 8,
  CTP_REQ_CANCEL_ORDER = 9,
  CTP_MD_CREATE_API = 10,
  CTP_MD_USER_LOGIN = 11,
  CTP_MD_ON_RSP_USER_LOGIN = 12,
  CTP_MD_SUBSCRIBE = 13,
  CTP_MD_ON_RSP_SUBSCRIBE = 14,
  CTP_MD_ON_RTN_MDS = 15,
  CTP_MD_UNSUBSCRIBE = 16,
  CTP_MD_ON_RSP_UNSCRIBE = 17,
  CTP_ON_LOG = 18,
  CTP_QUERY_TRADING_ACCOUNT = 19,
  CTP_QUERY_POSITION_DETAIL = 20,
  CTP_RSP_QUERY_TRADING_ACCOUNT = 21,
  CTP_RSP_QUERY_POSITION_DETAIL = 22,
  CTP_DELETE_API = 23,
  CTP_MD_DELETE_API = 24,
  CTP_QUERY_MARGIN_RATE = 25,
  CTP_RSP_QUERY_MARGIN_RATE = 26,
  CTP_QUERY_COMMISSION_RATE = 27,
  CTP_RSP_QUERY_COMMISSION_RATE = 28,
  CTP_REQ_CONNECT = 29,
  CTP_ON_FRONT_CONNECTED = 30,
  CTP_ON_FRONT_DISCONNECTED = 31,
  CTP_REQ_SETTLEMENT_INFO_CONFIRM = 33,
  CTP_RSP_SETTLEMENT_INFO_CONFIRM = 34,
  CTP_REQ_QUERY_INVESTOR = 35,
  CTP_RSP_QUERY_INVESTOR = 36,
  CTP_REQ_QUERY_TRANSFER_BANK = 41,
  CTP_RSP_QUERY_TRANSFER_BANK = 42,
  CTP_REQ_TRANSFER = 43,
  CTP_RSP_TRANSFER = 44,
  CTP_REQ_USER_LOGIN = 45,
  CTP_RSP_USER_LOGIN = 46,
  CTP_REQ_AUTHENTICATE = 47,
  CTP_RSP_AUTHENTICATE = 48,
  CTP_REQ_QRY_ACCOUNT_REGISTER = 49,
  CTP_RSP_QRY_ACCOUNT_REGISTER = 50,
  BindingCallType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  BindingCallType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool BindingCallType_IsValid(int value);
const BindingCallType BindingCallType_MIN = CTP_CREATE_API;
const BindingCallType BindingCallType_MAX = CTP_RSP_QRY_ACCOUNT_REGISTER;
const int BindingCallType_ARRAYSIZE = BindingCallType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BindingCallType_descriptor();
inline const ::std::string& BindingCallType_Name(BindingCallType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BindingCallType_descriptor(), value);
}
inline bool BindingCallType_Parse(
    const ::std::string& name, BindingCallType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BindingCallType>(
    BindingCallType_descriptor(), name, value);
}
// ===================================================================

class CtpReqQryAccountRegister :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpReqQryAccountRegister) */ {
 public:
  CtpReqQryAccountRegister();
  virtual ~CtpReqQryAccountRegister();

  CtpReqQryAccountRegister(const CtpReqQryAccountRegister& from);

  inline CtpReqQryAccountRegister& operator=(const CtpReqQryAccountRegister& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpReqQryAccountRegister(CtpReqQryAccountRegister&& from) noexcept
    : CtpReqQryAccountRegister() {
    *this = ::std::move(from);
  }

  inline CtpReqQryAccountRegister& operator=(CtpReqQryAccountRegister&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpReqQryAccountRegister& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpReqQryAccountRegister* internal_default_instance() {
    return reinterpret_cast<const CtpReqQryAccountRegister*>(
               &_CtpReqQryAccountRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CtpReqQryAccountRegister* other);
  friend void swap(CtpReqQryAccountRegister& a, CtpReqQryAccountRegister& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpReqQryAccountRegister* New() const final {
    return CreateMaybeMessage<CtpReqQryAccountRegister>(nullptr);
  }

  CtpReqQryAccountRegister* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpReqQryAccountRegister>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpReqQryAccountRegister& from);
  void MergeFrom(const CtpReqQryAccountRegister& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpReqQryAccountRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string broker_id = 1;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 1;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string account_id = 2;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  const ::std::string& account_id() const;
  void set_account_id(const ::std::string& value);
  #if LANG_CXX11
  void set_account_id(::std::string&& value);
  #endif
  void set_account_id(const char* value);
  void set_account_id(const char* value, size_t size);
  ::std::string* mutable_account_id();
  ::std::string* release_account_id();
  void set_allocated_account_id(::std::string* account_id);

  // string bank_id = 3;
  void clear_bank_id();
  static const int kBankIdFieldNumber = 3;
  const ::std::string& bank_id() const;
  void set_bank_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_id(::std::string&& value);
  #endif
  void set_bank_id(const char* value);
  void set_bank_id(const char* value, size_t size);
  ::std::string* mutable_bank_id();
  ::std::string* release_bank_id();
  void set_allocated_bank_id(::std::string* bank_id);

  // string bank_branch_id = 4;
  void clear_bank_branch_id();
  static const int kBankBranchIdFieldNumber = 4;
  const ::std::string& bank_branch_id() const;
  void set_bank_branch_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_branch_id(::std::string&& value);
  #endif
  void set_bank_branch_id(const char* value);
  void set_bank_branch_id(const char* value, size_t size);
  ::std::string* mutable_bank_branch_id();
  ::std::string* release_bank_branch_id();
  void set_allocated_bank_branch_id(::std::string* bank_branch_id);

  // string currency_id = 5;
  void clear_currency_id();
  static const int kCurrencyIdFieldNumber = 5;
  const ::std::string& currency_id() const;
  void set_currency_id(const ::std::string& value);
  #if LANG_CXX11
  void set_currency_id(::std::string&& value);
  #endif
  void set_currency_id(const char* value);
  void set_currency_id(const char* value, size_t size);
  ::std::string* mutable_currency_id();
  ::std::string* release_currency_id();
  void set_allocated_currency_id(::std::string* currency_id);

  // @@protoc_insertion_point(class_scope:pb.CtpReqQryAccountRegister)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr account_id_;
  ::google::protobuf::internal::ArenaStringPtr bank_id_;
  ::google::protobuf::internal::ArenaStringPtr bank_branch_id_;
  ::google::protobuf::internal::ArenaStringPtr currency_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpRspQryAccountRegister :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpRspQryAccountRegister) */ {
 public:
  CtpRspQryAccountRegister();
  virtual ~CtpRspQryAccountRegister();

  CtpRspQryAccountRegister(const CtpRspQryAccountRegister& from);

  inline CtpRspQryAccountRegister& operator=(const CtpRspQryAccountRegister& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpRspQryAccountRegister(CtpRspQryAccountRegister&& from) noexcept
    : CtpRspQryAccountRegister() {
    *this = ::std::move(from);
  }

  inline CtpRspQryAccountRegister& operator=(CtpRspQryAccountRegister&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpRspQryAccountRegister& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpRspQryAccountRegister* internal_default_instance() {
    return reinterpret_cast<const CtpRspQryAccountRegister*>(
               &_CtpRspQryAccountRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CtpRspQryAccountRegister* other);
  friend void swap(CtpRspQryAccountRegister& a, CtpRspQryAccountRegister& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpRspQryAccountRegister* New() const final {
    return CreateMaybeMessage<CtpRspQryAccountRegister>(nullptr);
  }

  CtpRspQryAccountRegister* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpRspQryAccountRegister>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpRspQryAccountRegister& from);
  void MergeFrom(const CtpRspQryAccountRegister& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpRspQryAccountRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_msg = 2;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 2;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_error_msg(::std::string&& value);
  #endif
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // string trading_day = 5;
  void clear_trading_day();
  static const int kTradingDayFieldNumber = 5;
  const ::std::string& trading_day() const;
  void set_trading_day(const ::std::string& value);
  #if LANG_CXX11
  void set_trading_day(::std::string&& value);
  #endif
  void set_trading_day(const char* value);
  void set_trading_day(const char* value, size_t size);
  ::std::string* mutable_trading_day();
  ::std::string* release_trading_day();
  void set_allocated_trading_day(::std::string* trading_day);

  // string bank_id = 6;
  void clear_bank_id();
  static const int kBankIdFieldNumber = 6;
  const ::std::string& bank_id() const;
  void set_bank_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_id(::std::string&& value);
  #endif
  void set_bank_id(const char* value);
  void set_bank_id(const char* value, size_t size);
  ::std::string* mutable_bank_id();
  ::std::string* release_bank_id();
  void set_allocated_bank_id(::std::string* bank_id);

  // string bank_branch_id = 7;
  void clear_bank_branch_id();
  static const int kBankBranchIdFieldNumber = 7;
  const ::std::string& bank_branch_id() const;
  void set_bank_branch_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_branch_id(::std::string&& value);
  #endif
  void set_bank_branch_id(const char* value);
  void set_bank_branch_id(const char* value, size_t size);
  ::std::string* mutable_bank_branch_id();
  ::std::string* release_bank_branch_id();
  void set_allocated_bank_branch_id(::std::string* bank_branch_id);

  // string bank_account = 8;
  void clear_bank_account();
  static const int kBankAccountFieldNumber = 8;
  const ::std::string& bank_account() const;
  void set_bank_account(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_account(::std::string&& value);
  #endif
  void set_bank_account(const char* value);
  void set_bank_account(const char* value, size_t size);
  ::std::string* mutable_bank_account();
  ::std::string* release_bank_account();
  void set_allocated_bank_account(::std::string* bank_account);

  // string broker_id = 9;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 9;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string broker_branch_id = 10;
  void clear_broker_branch_id();
  static const int kBrokerBranchIdFieldNumber = 10;
  const ::std::string& broker_branch_id() const;
  void set_broker_branch_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_branch_id(::std::string&& value);
  #endif
  void set_broker_branch_id(const char* value);
  void set_broker_branch_id(const char* value, size_t size);
  ::std::string* mutable_broker_branch_id();
  ::std::string* release_broker_branch_id();
  void set_allocated_broker_branch_id(::std::string* broker_branch_id);

  // string account_id = 11;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 11;
  const ::std::string& account_id() const;
  void set_account_id(const ::std::string& value);
  #if LANG_CXX11
  void set_account_id(::std::string&& value);
  #endif
  void set_account_id(const char* value);
  void set_account_id(const char* value, size_t size);
  ::std::string* mutable_account_id();
  ::std::string* release_account_id();
  void set_allocated_account_id(::std::string* account_id);

  // string identified_card_no = 13;
  void clear_identified_card_no();
  static const int kIdentifiedCardNoFieldNumber = 13;
  const ::std::string& identified_card_no() const;
  void set_identified_card_no(const ::std::string& value);
  #if LANG_CXX11
  void set_identified_card_no(::std::string&& value);
  #endif
  void set_identified_card_no(const char* value);
  void set_identified_card_no(const char* value, size_t size);
  ::std::string* mutable_identified_card_no();
  ::std::string* release_identified_card_no();
  void set_allocated_identified_card_no(::std::string* identified_card_no);

  // string customer_name = 14;
  void clear_customer_name();
  static const int kCustomerNameFieldNumber = 14;
  const ::std::string& customer_name() const;
  void set_customer_name(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_name(::std::string&& value);
  #endif
  void set_customer_name(const char* value);
  void set_customer_name(const char* value, size_t size);
  ::std::string* mutable_customer_name();
  ::std::string* release_customer_name();
  void set_allocated_customer_name(::std::string* customer_name);

  // string currency_id = 15;
  void clear_currency_id();
  static const int kCurrencyIdFieldNumber = 15;
  const ::std::string& currency_id() const;
  void set_currency_id(const ::std::string& value);
  #if LANG_CXX11
  void set_currency_id(::std::string&& value);
  #endif
  void set_currency_id(const char* value);
  void set_currency_id(const char* value, size_t size);
  ::std::string* mutable_currency_id();
  ::std::string* release_currency_id();
  void set_allocated_currency_id(::std::string* currency_id);

  // string reg_date = 17;
  void clear_reg_date();
  static const int kRegDateFieldNumber = 17;
  const ::std::string& reg_date() const;
  void set_reg_date(const ::std::string& value);
  #if LANG_CXX11
  void set_reg_date(::std::string&& value);
  #endif
  void set_reg_date(const char* value);
  void set_reg_date(const char* value, size_t size);
  ::std::string* mutable_reg_date();
  ::std::string* release_reg_date();
  void set_allocated_reg_date(::std::string* reg_date);

  // string out_date = 18;
  void clear_out_date();
  static const int kOutDateFieldNumber = 18;
  const ::std::string& out_date() const;
  void set_out_date(const ::std::string& value);
  #if LANG_CXX11
  void set_out_date(::std::string&& value);
  #endif
  void set_out_date(const char* value);
  void set_out_date(const char* value, size_t size);
  ::std::string* mutable_out_date();
  ::std::string* release_out_date();
  void set_allocated_out_date(::std::string* out_date);

  // string long_customer_name = 22;
  void clear_long_customer_name();
  static const int kLongCustomerNameFieldNumber = 22;
  const ::std::string& long_customer_name() const;
  void set_long_customer_name(const ::std::string& value);
  #if LANG_CXX11
  void set_long_customer_name(::std::string&& value);
  #endif
  void set_long_customer_name(const char* value);
  void set_long_customer_name(const char* value, size_t size);
  ::std::string* mutable_long_customer_name();
  ::std::string* release_long_customer_name();
  void set_allocated_long_customer_name(::std::string* long_customer_name);

  // int32 error_id = 1;
  void clear_error_id();
  static const int kErrorIdFieldNumber = 1;
  ::google::protobuf::int32 error_id() const;
  void set_error_id(::google::protobuf::int32 value);

  // int32 request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::int32 request_id() const;
  void set_request_id(::google::protobuf::int32 value);

  // bool is_last = 4;
  void clear_is_last();
  static const int kIsLastFieldNumber = 4;
  bool is_last() const;
  void set_is_last(bool value);

  // int32 id_card_type = 12;
  void clear_id_card_type();
  static const int kIdCardTypeFieldNumber = 12;
  ::google::protobuf::int32 id_card_type() const;
  void set_id_card_type(::google::protobuf::int32 value);

  // int32 open_or_destory = 16;
  void clear_open_or_destory();
  static const int kOpenOrDestoryFieldNumber = 16;
  ::google::protobuf::int32 open_or_destory() const;
  void set_open_or_destory(::google::protobuf::int32 value);

  // int32 tid = 19;
  void clear_tid();
  static const int kTidFieldNumber = 19;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // int32 cust_type = 20;
  void clear_cust_type();
  static const int kCustTypeFieldNumber = 20;
  ::google::protobuf::int32 cust_type() const;
  void set_cust_type(::google::protobuf::int32 value);

  // int32 bank_acc_type = 21;
  void clear_bank_acc_type();
  static const int kBankAccTypeFieldNumber = 21;
  ::google::protobuf::int32 bank_acc_type() const;
  void set_bank_acc_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.CtpRspQryAccountRegister)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::google::protobuf::internal::ArenaStringPtr trading_day_;
  ::google::protobuf::internal::ArenaStringPtr bank_id_;
  ::google::protobuf::internal::ArenaStringPtr bank_branch_id_;
  ::google::protobuf::internal::ArenaStringPtr bank_account_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr broker_branch_id_;
  ::google::protobuf::internal::ArenaStringPtr account_id_;
  ::google::protobuf::internal::ArenaStringPtr identified_card_no_;
  ::google::protobuf::internal::ArenaStringPtr customer_name_;
  ::google::protobuf::internal::ArenaStringPtr currency_id_;
  ::google::protobuf::internal::ArenaStringPtr reg_date_;
  ::google::protobuf::internal::ArenaStringPtr out_date_;
  ::google::protobuf::internal::ArenaStringPtr long_customer_name_;
  ::google::protobuf::int32 error_id_;
  ::google::protobuf::int32 request_id_;
  bool is_last_;
  ::google::protobuf::int32 id_card_type_;
  ::google::protobuf::int32 open_or_destory_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 cust_type_;
  ::google::protobuf::int32 bank_acc_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpReqAuthencate :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpReqAuthencate) */ {
 public:
  CtpReqAuthencate();
  virtual ~CtpReqAuthencate();

  CtpReqAuthencate(const CtpReqAuthencate& from);

  inline CtpReqAuthencate& operator=(const CtpReqAuthencate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpReqAuthencate(CtpReqAuthencate&& from) noexcept
    : CtpReqAuthencate() {
    *this = ::std::move(from);
  }

  inline CtpReqAuthencate& operator=(CtpReqAuthencate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpReqAuthencate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpReqAuthencate* internal_default_instance() {
    return reinterpret_cast<const CtpReqAuthencate*>(
               &_CtpReqAuthencate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CtpReqAuthencate* other);
  friend void swap(CtpReqAuthencate& a, CtpReqAuthencate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpReqAuthencate* New() const final {
    return CreateMaybeMessage<CtpReqAuthencate>(nullptr);
  }

  CtpReqAuthencate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpReqAuthencate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpReqAuthencate& from);
  void MergeFrom(const CtpReqAuthencate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpReqAuthencate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string auth_code = 1;
  void clear_auth_code();
  static const int kAuthCodeFieldNumber = 1;
  const ::std::string& auth_code() const;
  void set_auth_code(const ::std::string& value);
  #if LANG_CXX11
  void set_auth_code(::std::string&& value);
  #endif
  void set_auth_code(const char* value);
  void set_auth_code(const char* value, size_t size);
  ::std::string* mutable_auth_code();
  ::std::string* release_auth_code();
  void set_allocated_auth_code(::std::string* auth_code);

  // string product = 2;
  void clear_product();
  static const int kProductFieldNumber = 2;
  const ::std::string& product() const;
  void set_product(const ::std::string& value);
  #if LANG_CXX11
  void set_product(::std::string&& value);
  #endif
  void set_product(const char* value);
  void set_product(const char* value, size_t size);
  ::std::string* mutable_product();
  ::std::string* release_product();
  void set_allocated_product(::std::string* product);

  // @@protoc_insertion_point(class_scope:pb.CtpReqAuthencate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr auth_code_;
  ::google::protobuf::internal::ArenaStringPtr product_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpRspAuthencate :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpRspAuthencate) */ {
 public:
  CtpRspAuthencate();
  virtual ~CtpRspAuthencate();

  CtpRspAuthencate(const CtpRspAuthencate& from);

  inline CtpRspAuthencate& operator=(const CtpRspAuthencate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpRspAuthencate(CtpRspAuthencate&& from) noexcept
    : CtpRspAuthencate() {
    *this = ::std::move(from);
  }

  inline CtpRspAuthencate& operator=(CtpRspAuthencate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpRspAuthencate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpRspAuthencate* internal_default_instance() {
    return reinterpret_cast<const CtpRspAuthencate*>(
               &_CtpRspAuthencate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CtpRspAuthencate* other);
  friend void swap(CtpRspAuthencate& a, CtpRspAuthencate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpRspAuthencate* New() const final {
    return CreateMaybeMessage<CtpRspAuthencate>(nullptr);
  }

  CtpRspAuthencate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpRspAuthencate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpRspAuthencate& from);
  void MergeFrom(const CtpRspAuthencate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpRspAuthencate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_msg = 2;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 2;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_error_msg(::std::string&& value);
  #endif
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // string broker_id = 5;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 5;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string user_id = 6;
  void clear_user_id();
  static const int kUserIdFieldNumber = 6;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string user_product_info = 7;
  void clear_user_product_info();
  static const int kUserProductInfoFieldNumber = 7;
  const ::std::string& user_product_info() const;
  void set_user_product_info(const ::std::string& value);
  #if LANG_CXX11
  void set_user_product_info(::std::string&& value);
  #endif
  void set_user_product_info(const char* value);
  void set_user_product_info(const char* value, size_t size);
  ::std::string* mutable_user_product_info();
  ::std::string* release_user_product_info();
  void set_allocated_user_product_info(::std::string* user_product_info);

  // int32 error_id = 1;
  void clear_error_id();
  static const int kErrorIdFieldNumber = 1;
  ::google::protobuf::int32 error_id() const;
  void set_error_id(::google::protobuf::int32 value);

  // int32 request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::int32 request_id() const;
  void set_request_id(::google::protobuf::int32 value);

  // bool is_last = 4;
  void clear_is_last();
  static const int kIsLastFieldNumber = 4;
  bool is_last() const;
  void set_is_last(bool value);

  // @@protoc_insertion_point(class_scope:pb.CtpRspAuthencate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_product_info_;
  ::google::protobuf::int32 error_id_;
  ::google::protobuf::int32 request_id_;
  bool is_last_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpReqUserLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpReqUserLogin) */ {
 public:
  CtpReqUserLogin();
  virtual ~CtpReqUserLogin();

  CtpReqUserLogin(const CtpReqUserLogin& from);

  inline CtpReqUserLogin& operator=(const CtpReqUserLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpReqUserLogin(CtpReqUserLogin&& from) noexcept
    : CtpReqUserLogin() {
    *this = ::std::move(from);
  }

  inline CtpReqUserLogin& operator=(CtpReqUserLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpReqUserLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpReqUserLogin* internal_default_instance() {
    return reinterpret_cast<const CtpReqUserLogin*>(
               &_CtpReqUserLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CtpReqUserLogin* other);
  friend void swap(CtpReqUserLogin& a, CtpReqUserLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpReqUserLogin* New() const final {
    return CreateMaybeMessage<CtpReqUserLogin>(nullptr);
  }

  CtpReqUserLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpReqUserLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpReqUserLogin& from);
  void MergeFrom(const CtpReqUserLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpReqUserLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string broker_id = 1;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 1;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string account = 2;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:pb.CtpReqUserLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpRspUserLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpRspUserLogin) */ {
 public:
  CtpRspUserLogin();
  virtual ~CtpRspUserLogin();

  CtpRspUserLogin(const CtpRspUserLogin& from);

  inline CtpRspUserLogin& operator=(const CtpRspUserLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpRspUserLogin(CtpRspUserLogin&& from) noexcept
    : CtpRspUserLogin() {
    *this = ::std::move(from);
  }

  inline CtpRspUserLogin& operator=(CtpRspUserLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpRspUserLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpRspUserLogin* internal_default_instance() {
    return reinterpret_cast<const CtpRspUserLogin*>(
               &_CtpRspUserLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CtpRspUserLogin* other);
  friend void swap(CtpRspUserLogin& a, CtpRspUserLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpRspUserLogin* New() const final {
    return CreateMaybeMessage<CtpRspUserLogin>(nullptr);
  }

  CtpRspUserLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpRspUserLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpRspUserLogin& from);
  void MergeFrom(const CtpRspUserLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpRspUserLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_msg = 2;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 2;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_error_msg(::std::string&& value);
  #endif
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // string trading_day = 5;
  void clear_trading_day();
  static const int kTradingDayFieldNumber = 5;
  const ::std::string& trading_day() const;
  void set_trading_day(const ::std::string& value);
  #if LANG_CXX11
  void set_trading_day(::std::string&& value);
  #endif
  void set_trading_day(const char* value);
  void set_trading_day(const char* value, size_t size);
  ::std::string* mutable_trading_day();
  ::std::string* release_trading_day();
  void set_allocated_trading_day(::std::string* trading_day);

  // string login_time = 6;
  void clear_login_time();
  static const int kLoginTimeFieldNumber = 6;
  const ::std::string& login_time() const;
  void set_login_time(const ::std::string& value);
  #if LANG_CXX11
  void set_login_time(::std::string&& value);
  #endif
  void set_login_time(const char* value);
  void set_login_time(const char* value, size_t size);
  ::std::string* mutable_login_time();
  ::std::string* release_login_time();
  void set_allocated_login_time(::std::string* login_time);

  // string broker_id = 7;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 7;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string user_id = 8;
  void clear_user_id();
  static const int kUserIdFieldNumber = 8;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string system_name = 9;
  void clear_system_name();
  static const int kSystemNameFieldNumber = 9;
  const ::std::string& system_name() const;
  void set_system_name(const ::std::string& value);
  #if LANG_CXX11
  void set_system_name(::std::string&& value);
  #endif
  void set_system_name(const char* value);
  void set_system_name(const char* value, size_t size);
  ::std::string* mutable_system_name();
  ::std::string* release_system_name();
  void set_allocated_system_name(::std::string* system_name);

  // string max_order_ref = 12;
  void clear_max_order_ref();
  static const int kMaxOrderRefFieldNumber = 12;
  const ::std::string& max_order_ref() const;
  void set_max_order_ref(const ::std::string& value);
  #if LANG_CXX11
  void set_max_order_ref(::std::string&& value);
  #endif
  void set_max_order_ref(const char* value);
  void set_max_order_ref(const char* value, size_t size);
  ::std::string* mutable_max_order_ref();
  ::std::string* release_max_order_ref();
  void set_allocated_max_order_ref(::std::string* max_order_ref);

  // string shfe_time = 13;
  void clear_shfe_time();
  static const int kShfeTimeFieldNumber = 13;
  const ::std::string& shfe_time() const;
  void set_shfe_time(const ::std::string& value);
  #if LANG_CXX11
  void set_shfe_time(::std::string&& value);
  #endif
  void set_shfe_time(const char* value);
  void set_shfe_time(const char* value, size_t size);
  ::std::string* mutable_shfe_time();
  ::std::string* release_shfe_time();
  void set_allocated_shfe_time(::std::string* shfe_time);

  // string dce_time = 14;
  void clear_dce_time();
  static const int kDceTimeFieldNumber = 14;
  const ::std::string& dce_time() const;
  void set_dce_time(const ::std::string& value);
  #if LANG_CXX11
  void set_dce_time(::std::string&& value);
  #endif
  void set_dce_time(const char* value);
  void set_dce_time(const char* value, size_t size);
  ::std::string* mutable_dce_time();
  ::std::string* release_dce_time();
  void set_allocated_dce_time(::std::string* dce_time);

  // string czce_time = 15;
  void clear_czce_time();
  static const int kCzceTimeFieldNumber = 15;
  const ::std::string& czce_time() const;
  void set_czce_time(const ::std::string& value);
  #if LANG_CXX11
  void set_czce_time(::std::string&& value);
  #endif
  void set_czce_time(const char* value);
  void set_czce_time(const char* value, size_t size);
  ::std::string* mutable_czce_time();
  ::std::string* release_czce_time();
  void set_allocated_czce_time(::std::string* czce_time);

  // string cffex_time = 16;
  void clear_cffex_time();
  static const int kCffexTimeFieldNumber = 16;
  const ::std::string& cffex_time() const;
  void set_cffex_time(const ::std::string& value);
  #if LANG_CXX11
  void set_cffex_time(::std::string&& value);
  #endif
  void set_cffex_time(const char* value);
  void set_cffex_time(const char* value, size_t size);
  ::std::string* mutable_cffex_time();
  ::std::string* release_cffex_time();
  void set_allocated_cffex_time(::std::string* cffex_time);

  // string ine_time = 17;
  void clear_ine_time();
  static const int kIneTimeFieldNumber = 17;
  const ::std::string& ine_time() const;
  void set_ine_time(const ::std::string& value);
  #if LANG_CXX11
  void set_ine_time(::std::string&& value);
  #endif
  void set_ine_time(const char* value);
  void set_ine_time(const char* value, size_t size);
  ::std::string* mutable_ine_time();
  ::std::string* release_ine_time();
  void set_allocated_ine_time(::std::string* ine_time);

  // int32 error_id = 1;
  void clear_error_id();
  static const int kErrorIdFieldNumber = 1;
  ::google::protobuf::int32 error_id() const;
  void set_error_id(::google::protobuf::int32 value);

  // int32 request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::int32 request_id() const;
  void set_request_id(::google::protobuf::int32 value);

  // bool is_last = 4;
  void clear_is_last();
  static const int kIsLastFieldNumber = 4;
  bool is_last() const;
  void set_is_last(bool value);

  // int32 front_id = 10;
  void clear_front_id();
  static const int kFrontIdFieldNumber = 10;
  ::google::protobuf::int32 front_id() const;
  void set_front_id(::google::protobuf::int32 value);

  // int32 session_id = 11;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 11;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.CtpRspUserLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::google::protobuf::internal::ArenaStringPtr trading_day_;
  ::google::protobuf::internal::ArenaStringPtr login_time_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr system_name_;
  ::google::protobuf::internal::ArenaStringPtr max_order_ref_;
  ::google::protobuf::internal::ArenaStringPtr shfe_time_;
  ::google::protobuf::internal::ArenaStringPtr dce_time_;
  ::google::protobuf::internal::ArenaStringPtr czce_time_;
  ::google::protobuf::internal::ArenaStringPtr cffex_time_;
  ::google::protobuf::internal::ArenaStringPtr ine_time_;
  ::google::protobuf::int32 error_id_;
  ::google::protobuf::int32 request_id_;
  bool is_last_;
  ::google::protobuf::int32 front_id_;
  ::google::protobuf::int32 session_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpReqConnect :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpReqConnect) */ {
 public:
  CtpReqConnect();
  virtual ~CtpReqConnect();

  CtpReqConnect(const CtpReqConnect& from);

  inline CtpReqConnect& operator=(const CtpReqConnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpReqConnect(CtpReqConnect&& from) noexcept
    : CtpReqConnect() {
    *this = ::std::move(from);
  }

  inline CtpReqConnect& operator=(CtpReqConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpReqConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpReqConnect* internal_default_instance() {
    return reinterpret_cast<const CtpReqConnect*>(
               &_CtpReqConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CtpReqConnect* other);
  friend void swap(CtpReqConnect& a, CtpReqConnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpReqConnect* New() const final {
    return CreateMaybeMessage<CtpReqConnect>(nullptr);
  }

  CtpReqConnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpReqConnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpReqConnect& from);
  void MergeFrom(const CtpReqConnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpReqConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // string account = 2;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string directory = 3;
  void clear_directory();
  static const int kDirectoryFieldNumber = 3;
  const ::std::string& directory() const;
  void set_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_directory(::std::string&& value);
  #endif
  void set_directory(const char* value);
  void set_directory(const char* value, size_t size);
  ::std::string* mutable_directory();
  ::std::string* release_directory();
  void set_allocated_directory(::std::string* directory);

  // @@protoc_insertion_point(class_scope:pb.CtpReqConnect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr directory_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpOnFrontConnected :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpOnFrontConnected) */ {
 public:
  CtpOnFrontConnected();
  virtual ~CtpOnFrontConnected();

  CtpOnFrontConnected(const CtpOnFrontConnected& from);

  inline CtpOnFrontConnected& operator=(const CtpOnFrontConnected& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpOnFrontConnected(CtpOnFrontConnected&& from) noexcept
    : CtpOnFrontConnected() {
    *this = ::std::move(from);
  }

  inline CtpOnFrontConnected& operator=(CtpOnFrontConnected&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpOnFrontConnected& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpOnFrontConnected* internal_default_instance() {
    return reinterpret_cast<const CtpOnFrontConnected*>(
               &_CtpOnFrontConnected_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CtpOnFrontConnected* other);
  friend void swap(CtpOnFrontConnected& a, CtpOnFrontConnected& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpOnFrontConnected* New() const final {
    return CreateMaybeMessage<CtpOnFrontConnected>(nullptr);
  }

  CtpOnFrontConnected* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpOnFrontConnected>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpOnFrontConnected& from);
  void MergeFrom(const CtpOnFrontConnected& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpOnFrontConnected* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.CtpOnFrontConnected)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpOnFrontDisconnected :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpOnFrontDisconnected) */ {
 public:
  CtpOnFrontDisconnected();
  virtual ~CtpOnFrontDisconnected();

  CtpOnFrontDisconnected(const CtpOnFrontDisconnected& from);

  inline CtpOnFrontDisconnected& operator=(const CtpOnFrontDisconnected& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpOnFrontDisconnected(CtpOnFrontDisconnected&& from) noexcept
    : CtpOnFrontDisconnected() {
    *this = ::std::move(from);
  }

  inline CtpOnFrontDisconnected& operator=(CtpOnFrontDisconnected&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpOnFrontDisconnected& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpOnFrontDisconnected* internal_default_instance() {
    return reinterpret_cast<const CtpOnFrontDisconnected*>(
               &_CtpOnFrontDisconnected_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CtpOnFrontDisconnected* other);
  friend void swap(CtpOnFrontDisconnected& a, CtpOnFrontDisconnected& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpOnFrontDisconnected* New() const final {
    return CreateMaybeMessage<CtpOnFrontDisconnected>(nullptr);
  }

  CtpOnFrontDisconnected* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpOnFrontDisconnected>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpOnFrontDisconnected& from);
  void MergeFrom(const CtpOnFrontDisconnected& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpOnFrontDisconnected* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.CtpOnFrontDisconnected)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpReqSettlementInfoConfirm :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpReqSettlementInfoConfirm) */ {
 public:
  CtpReqSettlementInfoConfirm();
  virtual ~CtpReqSettlementInfoConfirm();

  CtpReqSettlementInfoConfirm(const CtpReqSettlementInfoConfirm& from);

  inline CtpReqSettlementInfoConfirm& operator=(const CtpReqSettlementInfoConfirm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpReqSettlementInfoConfirm(CtpReqSettlementInfoConfirm&& from) noexcept
    : CtpReqSettlementInfoConfirm() {
    *this = ::std::move(from);
  }

  inline CtpReqSettlementInfoConfirm& operator=(CtpReqSettlementInfoConfirm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpReqSettlementInfoConfirm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpReqSettlementInfoConfirm* internal_default_instance() {
    return reinterpret_cast<const CtpReqSettlementInfoConfirm*>(
               &_CtpReqSettlementInfoConfirm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CtpReqSettlementInfoConfirm* other);
  friend void swap(CtpReqSettlementInfoConfirm& a, CtpReqSettlementInfoConfirm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpReqSettlementInfoConfirm* New() const final {
    return CreateMaybeMessage<CtpReqSettlementInfoConfirm>(nullptr);
  }

  CtpReqSettlementInfoConfirm* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpReqSettlementInfoConfirm>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpReqSettlementInfoConfirm& from);
  void MergeFrom(const CtpReqSettlementInfoConfirm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpReqSettlementInfoConfirm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string broker_id = 1;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 1;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string investor_id = 2;
  void clear_investor_id();
  static const int kInvestorIdFieldNumber = 2;
  const ::std::string& investor_id() const;
  void set_investor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_investor_id(::std::string&& value);
  #endif
  void set_investor_id(const char* value);
  void set_investor_id(const char* value, size_t size);
  ::std::string* mutable_investor_id();
  ::std::string* release_investor_id();
  void set_allocated_investor_id(::std::string* investor_id);

  // @@protoc_insertion_point(class_scope:pb.CtpReqSettlementInfoConfirm)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr investor_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpOnRspSettlementInfoConfirm :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpOnRspSettlementInfoConfirm) */ {
 public:
  CtpOnRspSettlementInfoConfirm();
  virtual ~CtpOnRspSettlementInfoConfirm();

  CtpOnRspSettlementInfoConfirm(const CtpOnRspSettlementInfoConfirm& from);

  inline CtpOnRspSettlementInfoConfirm& operator=(const CtpOnRspSettlementInfoConfirm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpOnRspSettlementInfoConfirm(CtpOnRspSettlementInfoConfirm&& from) noexcept
    : CtpOnRspSettlementInfoConfirm() {
    *this = ::std::move(from);
  }

  inline CtpOnRspSettlementInfoConfirm& operator=(CtpOnRspSettlementInfoConfirm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpOnRspSettlementInfoConfirm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpOnRspSettlementInfoConfirm* internal_default_instance() {
    return reinterpret_cast<const CtpOnRspSettlementInfoConfirm*>(
               &_CtpOnRspSettlementInfoConfirm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CtpOnRspSettlementInfoConfirm* other);
  friend void swap(CtpOnRspSettlementInfoConfirm& a, CtpOnRspSettlementInfoConfirm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpOnRspSettlementInfoConfirm* New() const final {
    return CreateMaybeMessage<CtpOnRspSettlementInfoConfirm>(nullptr);
  }

  CtpOnRspSettlementInfoConfirm* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpOnRspSettlementInfoConfirm>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpOnRspSettlementInfoConfirm& from);
  void MergeFrom(const CtpOnRspSettlementInfoConfirm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpOnRspSettlementInfoConfirm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_msg = 2;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 2;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_error_msg(::std::string&& value);
  #endif
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // string broker_id = 5;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 5;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string investor_id = 6;
  void clear_investor_id();
  static const int kInvestorIdFieldNumber = 6;
  const ::std::string& investor_id() const;
  void set_investor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_investor_id(::std::string&& value);
  #endif
  void set_investor_id(const char* value);
  void set_investor_id(const char* value, size_t size);
  ::std::string* mutable_investor_id();
  ::std::string* release_investor_id();
  void set_allocated_investor_id(::std::string* investor_id);

  // string confirm_date = 7;
  void clear_confirm_date();
  static const int kConfirmDateFieldNumber = 7;
  const ::std::string& confirm_date() const;
  void set_confirm_date(const ::std::string& value);
  #if LANG_CXX11
  void set_confirm_date(::std::string&& value);
  #endif
  void set_confirm_date(const char* value);
  void set_confirm_date(const char* value, size_t size);
  ::std::string* mutable_confirm_date();
  ::std::string* release_confirm_date();
  void set_allocated_confirm_date(::std::string* confirm_date);

  // string confirm_time = 8;
  void clear_confirm_time();
  static const int kConfirmTimeFieldNumber = 8;
  const ::std::string& confirm_time() const;
  void set_confirm_time(const ::std::string& value);
  #if LANG_CXX11
  void set_confirm_time(::std::string&& value);
  #endif
  void set_confirm_time(const char* value);
  void set_confirm_time(const char* value, size_t size);
  ::std::string* mutable_confirm_time();
  ::std::string* release_confirm_time();
  void set_allocated_confirm_time(::std::string* confirm_time);

  // string account_id = 10;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 10;
  const ::std::string& account_id() const;
  void set_account_id(const ::std::string& value);
  #if LANG_CXX11
  void set_account_id(::std::string&& value);
  #endif
  void set_account_id(const char* value);
  void set_account_id(const char* value, size_t size);
  ::std::string* mutable_account_id();
  ::std::string* release_account_id();
  void set_allocated_account_id(::std::string* account_id);

  // string currency_id = 11;
  void clear_currency_id();
  static const int kCurrencyIdFieldNumber = 11;
  const ::std::string& currency_id() const;
  void set_currency_id(const ::std::string& value);
  #if LANG_CXX11
  void set_currency_id(::std::string&& value);
  #endif
  void set_currency_id(const char* value);
  void set_currency_id(const char* value, size_t size);
  ::std::string* mutable_currency_id();
  ::std::string* release_currency_id();
  void set_allocated_currency_id(::std::string* currency_id);

  // int32 error_id = 1;
  void clear_error_id();
  static const int kErrorIdFieldNumber = 1;
  ::google::protobuf::int32 error_id() const;
  void set_error_id(::google::protobuf::int32 value);

  // int32 request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::int32 request_id() const;
  void set_request_id(::google::protobuf::int32 value);

  // bool is_last = 4;
  void clear_is_last();
  static const int kIsLastFieldNumber = 4;
  bool is_last() const;
  void set_is_last(bool value);

  // int32 settlement_id = 9;
  void clear_settlement_id();
  static const int kSettlementIdFieldNumber = 9;
  ::google::protobuf::int32 settlement_id() const;
  void set_settlement_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.CtpOnRspSettlementInfoConfirm)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr investor_id_;
  ::google::protobuf::internal::ArenaStringPtr confirm_date_;
  ::google::protobuf::internal::ArenaStringPtr confirm_time_;
  ::google::protobuf::internal::ArenaStringPtr account_id_;
  ::google::protobuf::internal::ArenaStringPtr currency_id_;
  ::google::protobuf::int32 error_id_;
  ::google::protobuf::int32 request_id_;
  bool is_last_;
  ::google::protobuf::int32 settlement_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpReqQryInvestor :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpReqQryInvestor) */ {
 public:
  CtpReqQryInvestor();
  virtual ~CtpReqQryInvestor();

  CtpReqQryInvestor(const CtpReqQryInvestor& from);

  inline CtpReqQryInvestor& operator=(const CtpReqQryInvestor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpReqQryInvestor(CtpReqQryInvestor&& from) noexcept
    : CtpReqQryInvestor() {
    *this = ::std::move(from);
  }

  inline CtpReqQryInvestor& operator=(CtpReqQryInvestor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpReqQryInvestor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpReqQryInvestor* internal_default_instance() {
    return reinterpret_cast<const CtpReqQryInvestor*>(
               &_CtpReqQryInvestor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CtpReqQryInvestor* other);
  friend void swap(CtpReqQryInvestor& a, CtpReqQryInvestor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpReqQryInvestor* New() const final {
    return CreateMaybeMessage<CtpReqQryInvestor>(nullptr);
  }

  CtpReqQryInvestor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpReqQryInvestor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpReqQryInvestor& from);
  void MergeFrom(const CtpReqQryInvestor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpReqQryInvestor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.CtpReqQryInvestor)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpRspQryInvestor :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpRspQryInvestor) */ {
 public:
  CtpRspQryInvestor();
  virtual ~CtpRspQryInvestor();

  CtpRspQryInvestor(const CtpRspQryInvestor& from);

  inline CtpRspQryInvestor& operator=(const CtpRspQryInvestor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpRspQryInvestor(CtpRspQryInvestor&& from) noexcept
    : CtpRspQryInvestor() {
    *this = ::std::move(from);
  }

  inline CtpRspQryInvestor& operator=(CtpRspQryInvestor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpRspQryInvestor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpRspQryInvestor* internal_default_instance() {
    return reinterpret_cast<const CtpRspQryInvestor*>(
               &_CtpRspQryInvestor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CtpRspQryInvestor* other);
  friend void swap(CtpRspQryInvestor& a, CtpRspQryInvestor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpRspQryInvestor* New() const final {
    return CreateMaybeMessage<CtpRspQryInvestor>(nullptr);
  }

  CtpRspQryInvestor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpRspQryInvestor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpRspQryInvestor& from);
  void MergeFrom(const CtpRspQryInvestor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpRspQryInvestor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_msg = 2;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 2;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_error_msg(::std::string&& value);
  #endif
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // string investor_id = 5;
  void clear_investor_id();
  static const int kInvestorIdFieldNumber = 5;
  const ::std::string& investor_id() const;
  void set_investor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_investor_id(::std::string&& value);
  #endif
  void set_investor_id(const char* value);
  void set_investor_id(const char* value, size_t size);
  ::std::string* mutable_investor_id();
  ::std::string* release_investor_id();
  void set_allocated_investor_id(::std::string* investor_id);

  // string broker_id = 6;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 6;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string investor_group_id = 7;
  void clear_investor_group_id();
  static const int kInvestorGroupIdFieldNumber = 7;
  const ::std::string& investor_group_id() const;
  void set_investor_group_id(const ::std::string& value);
  #if LANG_CXX11
  void set_investor_group_id(::std::string&& value);
  #endif
  void set_investor_group_id(const char* value);
  void set_investor_group_id(const char* value, size_t size);
  ::std::string* mutable_investor_group_id();
  ::std::string* release_investor_group_id();
  void set_allocated_investor_group_id(::std::string* investor_group_id);

  // string investor_name = 8;
  void clear_investor_name();
  static const int kInvestorNameFieldNumber = 8;
  const ::std::string& investor_name() const;
  void set_investor_name(const ::std::string& value);
  #if LANG_CXX11
  void set_investor_name(::std::string&& value);
  #endif
  void set_investor_name(const char* value);
  void set_investor_name(const char* value, size_t size);
  ::std::string* mutable_investor_name();
  ::std::string* release_investor_name();
  void set_allocated_investor_name(::std::string* investor_name);

  // string identified_card_no = 10;
  void clear_identified_card_no();
  static const int kIdentifiedCardNoFieldNumber = 10;
  const ::std::string& identified_card_no() const;
  void set_identified_card_no(const ::std::string& value);
  #if LANG_CXX11
  void set_identified_card_no(::std::string&& value);
  #endif
  void set_identified_card_no(const char* value);
  void set_identified_card_no(const char* value, size_t size);
  ::std::string* mutable_identified_card_no();
  ::std::string* release_identified_card_no();
  void set_allocated_identified_card_no(::std::string* identified_card_no);

  // string telphone = 12;
  void clear_telphone();
  static const int kTelphoneFieldNumber = 12;
  const ::std::string& telphone() const;
  void set_telphone(const ::std::string& value);
  #if LANG_CXX11
  void set_telphone(::std::string&& value);
  #endif
  void set_telphone(const char* value);
  void set_telphone(const char* value, size_t size);
  ::std::string* mutable_telphone();
  ::std::string* release_telphone();
  void set_allocated_telphone(::std::string* telphone);

  // string address = 13;
  void clear_address();
  static const int kAddressFieldNumber = 13;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // string open_date = 14;
  void clear_open_date();
  static const int kOpenDateFieldNumber = 14;
  const ::std::string& open_date() const;
  void set_open_date(const ::std::string& value);
  #if LANG_CXX11
  void set_open_date(::std::string&& value);
  #endif
  void set_open_date(const char* value);
  void set_open_date(const char* value, size_t size);
  ::std::string* mutable_open_date();
  ::std::string* release_open_date();
  void set_allocated_open_date(::std::string* open_date);

  // string mobile = 15;
  void clear_mobile();
  static const int kMobileFieldNumber = 15;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile(::std::string&& value);
  #endif
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // int32 error_id = 1;
  void clear_error_id();
  static const int kErrorIdFieldNumber = 1;
  ::google::protobuf::int32 error_id() const;
  void set_error_id(::google::protobuf::int32 value);

  // int32 request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::int32 request_id() const;
  void set_request_id(::google::protobuf::int32 value);

  // bool is_last = 4;
  void clear_is_last();
  static const int kIsLastFieldNumber = 4;
  bool is_last() const;
  void set_is_last(bool value);

  // bool is_active = 11;
  void clear_is_active();
  static const int kIsActiveFieldNumber = 11;
  bool is_active() const;
  void set_is_active(bool value);

  // int32 identified_card_type = 9;
  void clear_identified_card_type();
  static const int kIdentifiedCardTypeFieldNumber = 9;
  ::google::protobuf::int32 identified_card_type() const;
  void set_identified_card_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.CtpRspQryInvestor)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::google::protobuf::internal::ArenaStringPtr investor_id_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr investor_group_id_;
  ::google::protobuf::internal::ArenaStringPtr investor_name_;
  ::google::protobuf::internal::ArenaStringPtr identified_card_no_;
  ::google::protobuf::internal::ArenaStringPtr telphone_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr open_date_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  ::google::protobuf::int32 error_id_;
  ::google::protobuf::int32 request_id_;
  bool is_last_;
  bool is_active_;
  ::google::protobuf::int32 identified_card_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpReqQryTransferBank :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpReqQryTransferBank) */ {
 public:
  CtpReqQryTransferBank();
  virtual ~CtpReqQryTransferBank();

  CtpReqQryTransferBank(const CtpReqQryTransferBank& from);

  inline CtpReqQryTransferBank& operator=(const CtpReqQryTransferBank& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpReqQryTransferBank(CtpReqQryTransferBank&& from) noexcept
    : CtpReqQryTransferBank() {
    *this = ::std::move(from);
  }

  inline CtpReqQryTransferBank& operator=(CtpReqQryTransferBank&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpReqQryTransferBank& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpReqQryTransferBank* internal_default_instance() {
    return reinterpret_cast<const CtpReqQryTransferBank*>(
               &_CtpReqQryTransferBank_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CtpReqQryTransferBank* other);
  friend void swap(CtpReqQryTransferBank& a, CtpReqQryTransferBank& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpReqQryTransferBank* New() const final {
    return CreateMaybeMessage<CtpReqQryTransferBank>(nullptr);
  }

  CtpReqQryTransferBank* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpReqQryTransferBank>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpReqQryTransferBank& from);
  void MergeFrom(const CtpReqQryTransferBank& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpReqQryTransferBank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string broker_id = 1;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 1;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string investor_id = 2;
  void clear_investor_id();
  static const int kInvestorIdFieldNumber = 2;
  const ::std::string& investor_id() const;
  void set_investor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_investor_id(::std::string&& value);
  #endif
  void set_investor_id(const char* value);
  void set_investor_id(const char* value, size_t size);
  ::std::string* mutable_investor_id();
  ::std::string* release_investor_id();
  void set_allocated_investor_id(::std::string* investor_id);

  // @@protoc_insertion_point(class_scope:pb.CtpReqQryTransferBank)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr investor_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpRspQryTransferBank :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpRspQryTransferBank) */ {
 public:
  CtpRspQryTransferBank();
  virtual ~CtpRspQryTransferBank();

  CtpRspQryTransferBank(const CtpRspQryTransferBank& from);

  inline CtpRspQryTransferBank& operator=(const CtpRspQryTransferBank& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpRspQryTransferBank(CtpRspQryTransferBank&& from) noexcept
    : CtpRspQryTransferBank() {
    *this = ::std::move(from);
  }

  inline CtpRspQryTransferBank& operator=(CtpRspQryTransferBank&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpRspQryTransferBank& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpRspQryTransferBank* internal_default_instance() {
    return reinterpret_cast<const CtpRspQryTransferBank*>(
               &_CtpRspQryTransferBank_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CtpRspQryTransferBank* other);
  friend void swap(CtpRspQryTransferBank& a, CtpRspQryTransferBank& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpRspQryTransferBank* New() const final {
    return CreateMaybeMessage<CtpRspQryTransferBank>(nullptr);
  }

  CtpRspQryTransferBank* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpRspQryTransferBank>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpRspQryTransferBank& from);
  void MergeFrom(const CtpRspQryTransferBank& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpRspQryTransferBank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_msg = 2;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 2;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_error_msg(::std::string&& value);
  #endif
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // string broker_id = 5;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 5;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string bank_id = 6;
  void clear_bank_id();
  static const int kBankIdFieldNumber = 6;
  const ::std::string& bank_id() const;
  void set_bank_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_id(::std::string&& value);
  #endif
  void set_bank_id(const char* value);
  void set_bank_id(const char* value, size_t size);
  ::std::string* mutable_bank_id();
  ::std::string* release_bank_id();
  void set_allocated_bank_id(::std::string* bank_id);

  // string bank_branch_id = 7;
  void clear_bank_branch_id();
  static const int kBankBranchIdFieldNumber = 7;
  const ::std::string& bank_branch_id() const;
  void set_bank_branch_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_branch_id(::std::string&& value);
  #endif
  void set_bank_branch_id(const char* value);
  void set_bank_branch_id(const char* value, size_t size);
  ::std::string* mutable_bank_branch_id();
  ::std::string* release_bank_branch_id();
  void set_allocated_bank_branch_id(::std::string* bank_branch_id);

  // string bank_name = 8;
  void clear_bank_name();
  static const int kBankNameFieldNumber = 8;
  const ::std::string& bank_name() const;
  void set_bank_name(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_name(::std::string&& value);
  #endif
  void set_bank_name(const char* value);
  void set_bank_name(const char* value, size_t size);
  ::std::string* mutable_bank_name();
  ::std::string* release_bank_name();
  void set_allocated_bank_name(::std::string* bank_name);

  // int32 error_id = 1;
  void clear_error_id();
  static const int kErrorIdFieldNumber = 1;
  ::google::protobuf::int32 error_id() const;
  void set_error_id(::google::protobuf::int32 value);

  // int32 request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::int32 request_id() const;
  void set_request_id(::google::protobuf::int32 value);

  // bool is_last = 4;
  void clear_is_last();
  static const int kIsLastFieldNumber = 4;
  bool is_last() const;
  void set_is_last(bool value);

  // @@protoc_insertion_point(class_scope:pb.CtpRspQryTransferBank)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr bank_id_;
  ::google::protobuf::internal::ArenaStringPtr bank_branch_id_;
  ::google::protobuf::internal::ArenaStringPtr bank_name_;
  ::google::protobuf::int32 error_id_;
  ::google::protobuf::int32 request_id_;
  bool is_last_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpReqTransfer :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpReqTransfer) */ {
 public:
  CtpReqTransfer();
  virtual ~CtpReqTransfer();

  CtpReqTransfer(const CtpReqTransfer& from);

  inline CtpReqTransfer& operator=(const CtpReqTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpReqTransfer(CtpReqTransfer&& from) noexcept
    : CtpReqTransfer() {
    *this = ::std::move(from);
  }

  inline CtpReqTransfer& operator=(CtpReqTransfer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpReqTransfer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpReqTransfer* internal_default_instance() {
    return reinterpret_cast<const CtpReqTransfer*>(
               &_CtpReqTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CtpReqTransfer* other);
  friend void swap(CtpReqTransfer& a, CtpReqTransfer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpReqTransfer* New() const final {
    return CreateMaybeMessage<CtpReqTransfer>(nullptr);
  }

  CtpReqTransfer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpReqTransfer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpReqTransfer& from);
  void MergeFrom(const CtpReqTransfer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpReqTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string trade_code = 1;
  void clear_trade_code();
  static const int kTradeCodeFieldNumber = 1;
  const ::std::string& trade_code() const;
  void set_trade_code(const ::std::string& value);
  #if LANG_CXX11
  void set_trade_code(::std::string&& value);
  #endif
  void set_trade_code(const char* value);
  void set_trade_code(const char* value, size_t size);
  ::std::string* mutable_trade_code();
  ::std::string* release_trade_code();
  void set_allocated_trade_code(::std::string* trade_code);

  // string bank_id = 2;
  void clear_bank_id();
  static const int kBankIdFieldNumber = 2;
  const ::std::string& bank_id() const;
  void set_bank_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_id(::std::string&& value);
  #endif
  void set_bank_id(const char* value);
  void set_bank_id(const char* value, size_t size);
  ::std::string* mutable_bank_id();
  ::std::string* release_bank_id();
  void set_allocated_bank_id(::std::string* bank_id);

  // string bank_branch_id = 3;
  void clear_bank_branch_id();
  static const int kBankBranchIdFieldNumber = 3;
  const ::std::string& bank_branch_id() const;
  void set_bank_branch_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_branch_id(::std::string&& value);
  #endif
  void set_bank_branch_id(const char* value);
  void set_bank_branch_id(const char* value, size_t size);
  ::std::string* mutable_bank_branch_id();
  ::std::string* release_bank_branch_id();
  void set_allocated_bank_branch_id(::std::string* bank_branch_id);

  // string broker_id = 4;
  void clear_broker_id();
  static const int kBrokerIdFieldNumber = 4;
  const ::std::string& broker_id() const;
  void set_broker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_id(::std::string&& value);
  #endif
  void set_broker_id(const char* value);
  void set_broker_id(const char* value, size_t size);
  ::std::string* mutable_broker_id();
  ::std::string* release_broker_id();
  void set_allocated_broker_id(::std::string* broker_id);

  // string broker_branch_id = 5;
  void clear_broker_branch_id();
  static const int kBrokerBranchIdFieldNumber = 5;
  const ::std::string& broker_branch_id() const;
  void set_broker_branch_id(const ::std::string& value);
  #if LANG_CXX11
  void set_broker_branch_id(::std::string&& value);
  #endif
  void set_broker_branch_id(const char* value);
  void set_broker_branch_id(const char* value, size_t size);
  ::std::string* mutable_broker_branch_id();
  ::std::string* release_broker_branch_id();
  void set_allocated_broker_branch_id(::std::string* broker_branch_id);

  // string trade_date = 6;
  void clear_trade_date();
  static const int kTradeDateFieldNumber = 6;
  const ::std::string& trade_date() const;
  void set_trade_date(const ::std::string& value);
  #if LANG_CXX11
  void set_trade_date(::std::string&& value);
  #endif
  void set_trade_date(const char* value);
  void set_trade_date(const char* value, size_t size);
  ::std::string* mutable_trade_date();
  ::std::string* release_trade_date();
  void set_allocated_trade_date(::std::string* trade_date);

  // string trade_time = 7;
  void clear_trade_time();
  static const int kTradeTimeFieldNumber = 7;
  const ::std::string& trade_time() const;
  void set_trade_time(const ::std::string& value);
  #if LANG_CXX11
  void set_trade_time(::std::string&& value);
  #endif
  void set_trade_time(const char* value);
  void set_trade_time(const char* value, size_t size);
  ::std::string* mutable_trade_time();
  ::std::string* release_trade_time();
  void set_allocated_trade_time(::std::string* trade_time);

  // string bank_serial = 8;
  void clear_bank_serial();
  static const int kBankSerialFieldNumber = 8;
  const ::std::string& bank_serial() const;
  void set_bank_serial(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_serial(::std::string&& value);
  #endif
  void set_bank_serial(const char* value);
  void set_bank_serial(const char* value, size_t size);
  ::std::string* mutable_bank_serial();
  ::std::string* release_bank_serial();
  void set_allocated_bank_serial(::std::string* bank_serial);

  // string trading_day = 9;
  void clear_trading_day();
  static const int kTradingDayFieldNumber = 9;
  const ::std::string& trading_day() const;
  void set_trading_day(const ::std::string& value);
  #if LANG_CXX11
  void set_trading_day(::std::string&& value);
  #endif
  void set_trading_day(const char* value);
  void set_trading_day(const char* value, size_t size);
  ::std::string* mutable_trading_day();
  ::std::string* release_trading_day();
  void set_allocated_trading_day(::std::string* trading_day);

  // string last_fragment = 11;
  void clear_last_fragment();
  static const int kLastFragmentFieldNumber = 11;
  const ::std::string& last_fragment() const;
  void set_last_fragment(const ::std::string& value);
  #if LANG_CXX11
  void set_last_fragment(::std::string&& value);
  #endif
  void set_last_fragment(const char* value);
  void set_last_fragment(const char* value, size_t size);
  ::std::string* mutable_last_fragment();
  ::std::string* release_last_fragment();
  void set_allocated_last_fragment(::std::string* last_fragment);

  // string customer_name = 13;
  void clear_customer_name();
  static const int kCustomerNameFieldNumber = 13;
  const ::std::string& customer_name() const;
  void set_customer_name(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_name(::std::string&& value);
  #endif
  void set_customer_name(const char* value);
  void set_customer_name(const char* value, size_t size);
  ::std::string* mutable_customer_name();
  ::std::string* release_customer_name();
  void set_allocated_customer_name(::std::string* customer_name);

  // string identified_card_no = 15;
  void clear_identified_card_no();
  static const int kIdentifiedCardNoFieldNumber = 15;
  const ::std::string& identified_card_no() const;
  void set_identified_card_no(const ::std::string& value);
  #if LANG_CXX11
  void set_identified_card_no(::std::string&& value);
  #endif
  void set_identified_card_no(const char* value);
  void set_identified_card_no(const char* value, size_t size);
  ::std::string* mutable_identified_card_no();
  ::std::string* release_identified_card_no();
  void set_allocated_identified_card_no(::std::string* identified_card_no);

  // string cust_type = 16;
  void clear_cust_type();
  static const int kCustTypeFieldNumber = 16;
  const ::std::string& cust_type() const;
  void set_cust_type(const ::std::string& value);
  #if LANG_CXX11
  void set_cust_type(::std::string&& value);
  #endif
  void set_cust_type(const char* value);
  void set_cust_type(const char* value, size_t size);
  ::std::string* mutable_cust_type();
  ::std::string* release_cust_type();
  void set_allocated_cust_type(::std::string* cust_type);

  // string bank_account = 17;
  void clear_bank_account();
  static const int kBankAccountFieldNumber = 17;
  const ::std::string& bank_account() const;
  void set_bank_account(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_account(::std::string&& value);
  #endif
  void set_bank_account(const char* value);
  void set_bank_account(const char* value, size_t size);
  ::std::string* mutable_bank_account();
  ::std::string* release_bank_account();
  void set_allocated_bank_account(::std::string* bank_account);

  // string bank_password = 18;
  void clear_bank_password();
  static const int kBankPasswordFieldNumber = 18;
  const ::std::string& bank_password() const;
  void set_bank_password(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_password(::std::string&& value);
  #endif
  void set_bank_password(const char* value);
  void set_bank_password(const char* value, size_t size);
  ::std::string* mutable_bank_password();
  ::std::string* release_bank_password();
  void set_allocated_bank_password(::std::string* bank_password);

  // string account_id = 19;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 19;
  const ::std::string& account_id() const;
  void set_account_id(const ::std::string& value);
  #if LANG_CXX11
  void set_account_id(::std::string&& value);
  #endif
  void set_account_id(const char* value);
  void set_account_id(const char* value, size_t size);
  ::std::string* mutable_account_id();
  ::std::string* release_account_id();
  void set_allocated_account_id(::std::string* account_id);

  // string password = 20;
  void clear_password();
  static const int kPasswordFieldNumber = 20;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string user_id = 23;
  void clear_user_id();
  static const int kUserIdFieldNumber = 23;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string verify_cert_no_flag = 24;
  void clear_verify_cert_no_flag();
  static const int kVerifyCertNoFlagFieldNumber = 24;
  const ::std::string& verify_cert_no_flag() const;
  void set_verify_cert_no_flag(const ::std::string& value);
  #if LANG_CXX11
  void set_verify_cert_no_flag(::std::string&& value);
  #endif
  void set_verify_cert_no_flag(const char* value);
  void set_verify_cert_no_flag(const char* value, size_t size);
  ::std::string* mutable_verify_cert_no_flag();
  ::std::string* release_verify_cert_no_flag();
  void set_allocated_verify_cert_no_flag(::std::string* verify_cert_no_flag);

  // string currency_id = 25;
  void clear_currency_id();
  static const int kCurrencyIdFieldNumber = 25;
  const ::std::string& currency_id() const;
  void set_currency_id(const ::std::string& value);
  #if LANG_CXX11
  void set_currency_id(::std::string&& value);
  #endif
  void set_currency_id(const char* value);
  void set_currency_id(const char* value, size_t size);
  ::std::string* mutable_currency_id();
  ::std::string* release_currency_id();
  void set_allocated_currency_id(::std::string* currency_id);

  // string message = 31;
  void clear_message();
  static const int kMessageFieldNumber = 31;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // string digest = 32;
  void clear_digest();
  static const int kDigestFieldNumber = 32;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const char* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // string device_id = 34;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 34;
  const ::std::string& device_id() const;
  void set_device_id(const ::std::string& value);
  #if LANG_CXX11
  void set_device_id(::std::string&& value);
  #endif
  void set_device_id(const char* value);
  void set_device_id(const char* value, size_t size);
  ::std::string* mutable_device_id();
  ::std::string* release_device_id();
  void set_allocated_device_id(::std::string* device_id);

  // string bank_secu_acc = 35;
  void clear_bank_secu_acc();
  static const int kBankSecuAccFieldNumber = 35;
  const ::std::string& bank_secu_acc() const;
  void set_bank_secu_acc(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_secu_acc(::std::string&& value);
  #endif
  void set_bank_secu_acc(const char* value);
  void set_bank_secu_acc(const char* value, size_t size);
  ::std::string* mutable_bank_secu_acc();
  ::std::string* release_bank_secu_acc();
  void set_allocated_bank_secu_acc(::std::string* bank_secu_acc);

  // string bank_pwd_flag = 36;
  void clear_bank_pwd_flag();
  static const int kBankPwdFlagFieldNumber = 36;
  const ::std::string& bank_pwd_flag() const;
  void set_bank_pwd_flag(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_pwd_flag(::std::string&& value);
  #endif
  void set_bank_pwd_flag(const char* value);
  void set_bank_pwd_flag(const char* value, size_t size);
  ::std::string* mutable_bank_pwd_flag();
  ::std::string* release_bank_pwd_flag();
  void set_allocated_bank_pwd_flag(::std::string* bank_pwd_flag);

  // string secu_pwd_flag = 37;
  void clear_secu_pwd_flag();
  static const int kSecuPwdFlagFieldNumber = 37;
  const ::std::string& secu_pwd_flag() const;
  void set_secu_pwd_flag(const ::std::string& value);
  #if LANG_CXX11
  void set_secu_pwd_flag(::std::string&& value);
  #endif
  void set_secu_pwd_flag(const char* value);
  void set_secu_pwd_flag(const char* value, size_t size);
  ::std::string* mutable_secu_pwd_flag();
  ::std::string* release_secu_pwd_flag();
  void set_allocated_secu_pwd_flag(::std::string* secu_pwd_flag);

  // string oper_no = 38;
  void clear_oper_no();
  static const int kOperNoFieldNumber = 38;
  const ::std::string& oper_no() const;
  void set_oper_no(const ::std::string& value);
  #if LANG_CXX11
  void set_oper_no(::std::string&& value);
  #endif
  void set_oper_no(const char* value);
  void set_oper_no(const char* value, size_t size);
  ::std::string* mutable_oper_no();
  ::std::string* release_oper_no();
  void set_allocated_oper_no(::std::string* oper_no);

  // string transfer_status = 41;
  void clear_transfer_status();
  static const int kTransferStatusFieldNumber = 41;
  const ::std::string& transfer_status() const;
  void set_transfer_status(const ::std::string& value);
  #if LANG_CXX11
  void set_transfer_status(::std::string&& value);
  #endif
  void set_transfer_status(const char* value);
  void set_transfer_status(const char* value, size_t size);
  ::std::string* mutable_transfer_status();
  ::std::string* release_transfer_status();
  void set_allocated_transfer_status(::std::string* transfer_status);

  // string long_customer_name = 42;
  void clear_long_customer_name();
  static const int kLongCustomerNameFieldNumber = 42;
  const ::std::string& long_customer_name() const;
  void set_long_customer_name(const ::std::string& value);
  #if LANG_CXX11
  void set_long_customer_name(::std::string&& value);
  #endif
  void set_long_customer_name(const char* value);
  void set_long_customer_name(const char* value, size_t size);
  ::std::string* mutable_long_customer_name();
  ::std::string* release_long_customer_name();
  void set_allocated_long_customer_name(::std::string* long_customer_name);

  // int32 plate_serieal = 10;
  void clear_plate_serieal();
  static const int kPlateSeriealFieldNumber = 10;
  ::google::protobuf::int32 plate_serieal() const;
  void set_plate_serieal(::google::protobuf::int32 value);

  // int32 session_id = 12;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 12;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // int32 id_card_type = 14;
  void clear_id_card_type();
  static const int kIdCardTypeFieldNumber = 14;
  ::google::protobuf::int32 id_card_type() const;
  void set_id_card_type(::google::protobuf::int32 value);

  // int32 install_id = 21;
  void clear_install_id();
  static const int kInstallIdFieldNumber = 21;
  ::google::protobuf::int32 install_id() const;
  void set_install_id(::google::protobuf::int32 value);

  // int32 future_serial = 22;
  void clear_future_serial();
  static const int kFutureSerialFieldNumber = 22;
  ::google::protobuf::int32 future_serial() const;
  void set_future_serial(::google::protobuf::int32 value);

  // int32 fee_pay_flag = 28;
  void clear_fee_pay_flag();
  static const int kFeePayFlagFieldNumber = 28;
  ::google::protobuf::int32 fee_pay_flag() const;
  void set_fee_pay_flag(::google::protobuf::int32 value);

  // double trade_amount = 26;
  void clear_trade_amount();
  static const int kTradeAmountFieldNumber = 26;
  double trade_amount() const;
  void set_trade_amount(double value);

  // double future_fetch_amount = 27;
  void clear_future_fetch_amount();
  static const int kFutureFetchAmountFieldNumber = 27;
  double future_fetch_amount() const;
  void set_future_fetch_amount(double value);

  // double cust_fee = 29;
  void clear_cust_fee();
  static const int kCustFeeFieldNumber = 29;
  double cust_fee() const;
  void set_cust_fee(double value);

  // double broker_fee = 30;
  void clear_broker_fee();
  static const int kBrokerFeeFieldNumber = 30;
  double broker_fee() const;
  void set_broker_fee(double value);

  // int32 bank_acc_type = 33;
  void clear_bank_acc_type();
  static const int kBankAccTypeFieldNumber = 33;
  ::google::protobuf::int32 bank_acc_type() const;
  void set_bank_acc_type(::google::protobuf::int32 value);

  // int32 request_id = 39;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 39;
  ::google::protobuf::int32 request_id() const;
  void set_request_id(::google::protobuf::int32 value);

  // int32 tid = 40;
  void clear_tid();
  static const int kTidFieldNumber = 40;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.CtpReqTransfer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr trade_code_;
  ::google::protobuf::internal::ArenaStringPtr bank_id_;
  ::google::protobuf::internal::ArenaStringPtr bank_branch_id_;
  ::google::protobuf::internal::ArenaStringPtr broker_id_;
  ::google::protobuf::internal::ArenaStringPtr broker_branch_id_;
  ::google::protobuf::internal::ArenaStringPtr trade_date_;
  ::google::protobuf::internal::ArenaStringPtr trade_time_;
  ::google::protobuf::internal::ArenaStringPtr bank_serial_;
  ::google::protobuf::internal::ArenaStringPtr trading_day_;
  ::google::protobuf::internal::ArenaStringPtr last_fragment_;
  ::google::protobuf::internal::ArenaStringPtr customer_name_;
  ::google::protobuf::internal::ArenaStringPtr identified_card_no_;
  ::google::protobuf::internal::ArenaStringPtr cust_type_;
  ::google::protobuf::internal::ArenaStringPtr bank_account_;
  ::google::protobuf::internal::ArenaStringPtr bank_password_;
  ::google::protobuf::internal::ArenaStringPtr account_id_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr verify_cert_no_flag_;
  ::google::protobuf::internal::ArenaStringPtr currency_id_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  ::google::protobuf::internal::ArenaStringPtr device_id_;
  ::google::protobuf::internal::ArenaStringPtr bank_secu_acc_;
  ::google::protobuf::internal::ArenaStringPtr bank_pwd_flag_;
  ::google::protobuf::internal::ArenaStringPtr secu_pwd_flag_;
  ::google::protobuf::internal::ArenaStringPtr oper_no_;
  ::google::protobuf::internal::ArenaStringPtr transfer_status_;
  ::google::protobuf::internal::ArenaStringPtr long_customer_name_;
  ::google::protobuf::int32 plate_serieal_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 id_card_type_;
  ::google::protobuf::int32 install_id_;
  ::google::protobuf::int32 future_serial_;
  ::google::protobuf::int32 fee_pay_flag_;
  double trade_amount_;
  double future_fetch_amount_;
  double cust_fee_;
  double broker_fee_;
  ::google::protobuf::int32 bank_acc_type_;
  ::google::protobuf::int32 request_id_;
  ::google::protobuf::int32 tid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// -------------------------------------------------------------------

class CtpRspTransfer :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.CtpRspTransfer) */ {
 public:
  CtpRspTransfer();
  virtual ~CtpRspTransfer();

  CtpRspTransfer(const CtpRspTransfer& from);

  inline CtpRspTransfer& operator=(const CtpRspTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CtpRspTransfer(CtpRspTransfer&& from) noexcept
    : CtpRspTransfer() {
    *this = ::std::move(from);
  }

  inline CtpRspTransfer& operator=(CtpRspTransfer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CtpRspTransfer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CtpRspTransfer* internal_default_instance() {
    return reinterpret_cast<const CtpRspTransfer*>(
               &_CtpRspTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CtpRspTransfer* other);
  friend void swap(CtpRspTransfer& a, CtpRspTransfer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CtpRspTransfer* New() const final {
    return CreateMaybeMessage<CtpRspTransfer>(nullptr);
  }

  CtpRspTransfer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CtpRspTransfer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CtpRspTransfer& from);
  void MergeFrom(const CtpRspTransfer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CtpRspTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_msg = 2;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 2;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_error_msg(::std::string&& value);
  #endif
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // .pb.CtpReqTransfer req = 5;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 5;
  const ::pb::CtpReqTransfer& req() const;
  ::pb::CtpReqTransfer* release_req();
  ::pb::CtpReqTransfer* mutable_req();
  void set_allocated_req(::pb::CtpReqTransfer* req);

  // int32 error_id = 1;
  void clear_error_id();
  static const int kErrorIdFieldNumber = 1;
  ::google::protobuf::int32 error_id() const;
  void set_error_id(::google::protobuf::int32 value);

  // int32 request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::int32 request_id() const;
  void set_request_id(::google::protobuf::int32 value);

  // bool is_last = 4;
  void clear_is_last();
  static const int kIsLastFieldNumber = 4;
  bool is_last() const;
  void set_is_last(bool value);

  // @@protoc_insertion_point(class_scope:pb.CtpRspTransfer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::pb::CtpReqTransfer* req_;
  ::google::protobuf::int32 error_id_;
  ::google::protobuf::int32 request_id_;
  bool is_last_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_binding_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CtpReqQryAccountRegister

// string broker_id = 1;
inline void CtpReqQryAccountRegister::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqQryAccountRegister::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqQryAccountRegister.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpReqQryAccountRegister::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqQryAccountRegister.broker_id)
}
#if LANG_CXX11
inline void CtpReqQryAccountRegister::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqQryAccountRegister.broker_id)
}
#endif
inline void CtpReqQryAccountRegister::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqQryAccountRegister.broker_id)
}
inline void CtpReqQryAccountRegister::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqQryAccountRegister.broker_id)
}
inline ::std::string* CtpReqQryAccountRegister::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqQryAccountRegister.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqQryAccountRegister::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqQryAccountRegister.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqQryAccountRegister::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqQryAccountRegister.broker_id)
}

// string account_id = 2;
inline void CtpReqQryAccountRegister::clear_account_id() {
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqQryAccountRegister::account_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqQryAccountRegister.account_id)
  return account_id_.GetNoArena();
}
inline void CtpReqQryAccountRegister::set_account_id(const ::std::string& value) {
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqQryAccountRegister.account_id)
}
#if LANG_CXX11
inline void CtpReqQryAccountRegister::set_account_id(::std::string&& value) {
  
  account_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqQryAccountRegister.account_id)
}
#endif
inline void CtpReqQryAccountRegister::set_account_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqQryAccountRegister.account_id)
}
inline void CtpReqQryAccountRegister::set_account_id(const char* value, size_t size) {
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqQryAccountRegister.account_id)
}
inline ::std::string* CtpReqQryAccountRegister::mutable_account_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqQryAccountRegister.account_id)
  return account_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqQryAccountRegister::release_account_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqQryAccountRegister.account_id)
  
  return account_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqQryAccountRegister::set_allocated_account_id(::std::string* account_id) {
  if (account_id != nullptr) {
    
  } else {
    
  }
  account_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqQryAccountRegister.account_id)
}

// string bank_id = 3;
inline void CtpReqQryAccountRegister::clear_bank_id() {
  bank_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqQryAccountRegister::bank_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqQryAccountRegister.bank_id)
  return bank_id_.GetNoArena();
}
inline void CtpReqQryAccountRegister::set_bank_id(const ::std::string& value) {
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqQryAccountRegister.bank_id)
}
#if LANG_CXX11
inline void CtpReqQryAccountRegister::set_bank_id(::std::string&& value) {
  
  bank_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqQryAccountRegister.bank_id)
}
#endif
inline void CtpReqQryAccountRegister::set_bank_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqQryAccountRegister.bank_id)
}
inline void CtpReqQryAccountRegister::set_bank_id(const char* value, size_t size) {
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqQryAccountRegister.bank_id)
}
inline ::std::string* CtpReqQryAccountRegister::mutable_bank_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqQryAccountRegister.bank_id)
  return bank_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqQryAccountRegister::release_bank_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqQryAccountRegister.bank_id)
  
  return bank_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqQryAccountRegister::set_allocated_bank_id(::std::string* bank_id) {
  if (bank_id != nullptr) {
    
  } else {
    
  }
  bank_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqQryAccountRegister.bank_id)
}

// string bank_branch_id = 4;
inline void CtpReqQryAccountRegister::clear_bank_branch_id() {
  bank_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqQryAccountRegister::bank_branch_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqQryAccountRegister.bank_branch_id)
  return bank_branch_id_.GetNoArena();
}
inline void CtpReqQryAccountRegister::set_bank_branch_id(const ::std::string& value) {
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqQryAccountRegister.bank_branch_id)
}
#if LANG_CXX11
inline void CtpReqQryAccountRegister::set_bank_branch_id(::std::string&& value) {
  
  bank_branch_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqQryAccountRegister.bank_branch_id)
}
#endif
inline void CtpReqQryAccountRegister::set_bank_branch_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqQryAccountRegister.bank_branch_id)
}
inline void CtpReqQryAccountRegister::set_bank_branch_id(const char* value, size_t size) {
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqQryAccountRegister.bank_branch_id)
}
inline ::std::string* CtpReqQryAccountRegister::mutable_bank_branch_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqQryAccountRegister.bank_branch_id)
  return bank_branch_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqQryAccountRegister::release_bank_branch_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqQryAccountRegister.bank_branch_id)
  
  return bank_branch_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqQryAccountRegister::set_allocated_bank_branch_id(::std::string* bank_branch_id) {
  if (bank_branch_id != nullptr) {
    
  } else {
    
  }
  bank_branch_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_branch_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqQryAccountRegister.bank_branch_id)
}

// string currency_id = 5;
inline void CtpReqQryAccountRegister::clear_currency_id() {
  currency_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqQryAccountRegister::currency_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqQryAccountRegister.currency_id)
  return currency_id_.GetNoArena();
}
inline void CtpReqQryAccountRegister::set_currency_id(const ::std::string& value) {
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqQryAccountRegister.currency_id)
}
#if LANG_CXX11
inline void CtpReqQryAccountRegister::set_currency_id(::std::string&& value) {
  
  currency_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqQryAccountRegister.currency_id)
}
#endif
inline void CtpReqQryAccountRegister::set_currency_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqQryAccountRegister.currency_id)
}
inline void CtpReqQryAccountRegister::set_currency_id(const char* value, size_t size) {
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqQryAccountRegister.currency_id)
}
inline ::std::string* CtpReqQryAccountRegister::mutable_currency_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqQryAccountRegister.currency_id)
  return currency_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqQryAccountRegister::release_currency_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqQryAccountRegister.currency_id)
  
  return currency_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqQryAccountRegister::set_allocated_currency_id(::std::string* currency_id) {
  if (currency_id != nullptr) {
    
  } else {
    
  }
  currency_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqQryAccountRegister.currency_id)
}

// -------------------------------------------------------------------

// CtpRspQryAccountRegister

// int32 error_id = 1;
inline void CtpRspQryAccountRegister::clear_error_id() {
  error_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryAccountRegister::error_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.error_id)
  return error_id_;
}
inline void CtpRspQryAccountRegister::set_error_id(::google::protobuf::int32 value) {
  
  error_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.error_id)
}

// string error_msg = 2;
inline void CtpRspQryAccountRegister::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::error_msg() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.error_msg)
  return error_msg_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.error_msg)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_error_msg(::std::string&& value) {
  
  error_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.error_msg)
}
#endif
inline void CtpRspQryAccountRegister::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.error_msg)
}
inline void CtpRspQryAccountRegister::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.error_msg)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_error_msg() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != nullptr) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.error_msg)
}

// int32 request_id = 3;
inline void CtpRspQryAccountRegister::clear_request_id() {
  request_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryAccountRegister::request_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.request_id)
  return request_id_;
}
inline void CtpRspQryAccountRegister::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.request_id)
}

// bool is_last = 4;
inline void CtpRspQryAccountRegister::clear_is_last() {
  is_last_ = false;
}
inline bool CtpRspQryAccountRegister::is_last() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.is_last)
  return is_last_;
}
inline void CtpRspQryAccountRegister::set_is_last(bool value) {
  
  is_last_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.is_last)
}

// string trading_day = 5;
inline void CtpRspQryAccountRegister::clear_trading_day() {
  trading_day_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::trading_day() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.trading_day)
  return trading_day_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_trading_day(const ::std::string& value) {
  
  trading_day_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.trading_day)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_trading_day(::std::string&& value) {
  
  trading_day_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.trading_day)
}
#endif
inline void CtpRspQryAccountRegister::set_trading_day(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  trading_day_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.trading_day)
}
inline void CtpRspQryAccountRegister::set_trading_day(const char* value, size_t size) {
  
  trading_day_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.trading_day)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_trading_day() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.trading_day)
  return trading_day_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_trading_day() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.trading_day)
  
  return trading_day_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_trading_day(::std::string* trading_day) {
  if (trading_day != nullptr) {
    
  } else {
    
  }
  trading_day_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trading_day);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.trading_day)
}

// string bank_id = 6;
inline void CtpRspQryAccountRegister::clear_bank_id() {
  bank_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::bank_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.bank_id)
  return bank_id_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_bank_id(const ::std::string& value) {
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.bank_id)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_bank_id(::std::string&& value) {
  
  bank_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.bank_id)
}
#endif
inline void CtpRspQryAccountRegister::set_bank_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.bank_id)
}
inline void CtpRspQryAccountRegister::set_bank_id(const char* value, size_t size) {
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.bank_id)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_bank_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.bank_id)
  return bank_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_bank_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.bank_id)
  
  return bank_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_bank_id(::std::string* bank_id) {
  if (bank_id != nullptr) {
    
  } else {
    
  }
  bank_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.bank_id)
}

// string bank_branch_id = 7;
inline void CtpRspQryAccountRegister::clear_bank_branch_id() {
  bank_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::bank_branch_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.bank_branch_id)
  return bank_branch_id_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_bank_branch_id(const ::std::string& value) {
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.bank_branch_id)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_bank_branch_id(::std::string&& value) {
  
  bank_branch_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.bank_branch_id)
}
#endif
inline void CtpRspQryAccountRegister::set_bank_branch_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.bank_branch_id)
}
inline void CtpRspQryAccountRegister::set_bank_branch_id(const char* value, size_t size) {
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.bank_branch_id)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_bank_branch_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.bank_branch_id)
  return bank_branch_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_bank_branch_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.bank_branch_id)
  
  return bank_branch_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_bank_branch_id(::std::string* bank_branch_id) {
  if (bank_branch_id != nullptr) {
    
  } else {
    
  }
  bank_branch_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_branch_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.bank_branch_id)
}

// string bank_account = 8;
inline void CtpRspQryAccountRegister::clear_bank_account() {
  bank_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::bank_account() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.bank_account)
  return bank_account_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_bank_account(const ::std::string& value) {
  
  bank_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.bank_account)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_bank_account(::std::string&& value) {
  
  bank_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.bank_account)
}
#endif
inline void CtpRspQryAccountRegister::set_bank_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.bank_account)
}
inline void CtpRspQryAccountRegister::set_bank_account(const char* value, size_t size) {
  
  bank_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.bank_account)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_bank_account() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.bank_account)
  return bank_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_bank_account() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.bank_account)
  
  return bank_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_bank_account(::std::string* bank_account) {
  if (bank_account != nullptr) {
    
  } else {
    
  }
  bank_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_account);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.bank_account)
}

// string broker_id = 9;
inline void CtpRspQryAccountRegister::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.broker_id)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.broker_id)
}
#endif
inline void CtpRspQryAccountRegister::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.broker_id)
}
inline void CtpRspQryAccountRegister::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.broker_id)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.broker_id)
}

// string broker_branch_id = 10;
inline void CtpRspQryAccountRegister::clear_broker_branch_id() {
  broker_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::broker_branch_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.broker_branch_id)
  return broker_branch_id_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_broker_branch_id(const ::std::string& value) {
  
  broker_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.broker_branch_id)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_broker_branch_id(::std::string&& value) {
  
  broker_branch_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.broker_branch_id)
}
#endif
inline void CtpRspQryAccountRegister::set_broker_branch_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.broker_branch_id)
}
inline void CtpRspQryAccountRegister::set_broker_branch_id(const char* value, size_t size) {
  
  broker_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.broker_branch_id)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_broker_branch_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.broker_branch_id)
  return broker_branch_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_broker_branch_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.broker_branch_id)
  
  return broker_branch_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_broker_branch_id(::std::string* broker_branch_id) {
  if (broker_branch_id != nullptr) {
    
  } else {
    
  }
  broker_branch_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_branch_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.broker_branch_id)
}

// string account_id = 11;
inline void CtpRspQryAccountRegister::clear_account_id() {
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::account_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.account_id)
  return account_id_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_account_id(const ::std::string& value) {
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.account_id)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_account_id(::std::string&& value) {
  
  account_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.account_id)
}
#endif
inline void CtpRspQryAccountRegister::set_account_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.account_id)
}
inline void CtpRspQryAccountRegister::set_account_id(const char* value, size_t size) {
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.account_id)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_account_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.account_id)
  return account_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_account_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.account_id)
  
  return account_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_account_id(::std::string* account_id) {
  if (account_id != nullptr) {
    
  } else {
    
  }
  account_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.account_id)
}

// int32 id_card_type = 12;
inline void CtpRspQryAccountRegister::clear_id_card_type() {
  id_card_type_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryAccountRegister::id_card_type() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.id_card_type)
  return id_card_type_;
}
inline void CtpRspQryAccountRegister::set_id_card_type(::google::protobuf::int32 value) {
  
  id_card_type_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.id_card_type)
}

// string identified_card_no = 13;
inline void CtpRspQryAccountRegister::clear_identified_card_no() {
  identified_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::identified_card_no() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.identified_card_no)
  return identified_card_no_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_identified_card_no(const ::std::string& value) {
  
  identified_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.identified_card_no)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_identified_card_no(::std::string&& value) {
  
  identified_card_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.identified_card_no)
}
#endif
inline void CtpRspQryAccountRegister::set_identified_card_no(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  identified_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.identified_card_no)
}
inline void CtpRspQryAccountRegister::set_identified_card_no(const char* value, size_t size) {
  
  identified_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.identified_card_no)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_identified_card_no() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.identified_card_no)
  return identified_card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_identified_card_no() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.identified_card_no)
  
  return identified_card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_identified_card_no(::std::string* identified_card_no) {
  if (identified_card_no != nullptr) {
    
  } else {
    
  }
  identified_card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identified_card_no);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.identified_card_no)
}

// string customer_name = 14;
inline void CtpRspQryAccountRegister::clear_customer_name() {
  customer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::customer_name() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.customer_name)
  return customer_name_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_customer_name(const ::std::string& value) {
  
  customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.customer_name)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_customer_name(::std::string&& value) {
  
  customer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.customer_name)
}
#endif
inline void CtpRspQryAccountRegister::set_customer_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.customer_name)
}
inline void CtpRspQryAccountRegister::set_customer_name(const char* value, size_t size) {
  
  customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.customer_name)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_customer_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.customer_name)
  return customer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_customer_name() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.customer_name)
  
  return customer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_customer_name(::std::string* customer_name) {
  if (customer_name != nullptr) {
    
  } else {
    
  }
  customer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_name);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.customer_name)
}

// string currency_id = 15;
inline void CtpRspQryAccountRegister::clear_currency_id() {
  currency_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::currency_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.currency_id)
  return currency_id_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_currency_id(const ::std::string& value) {
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.currency_id)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_currency_id(::std::string&& value) {
  
  currency_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.currency_id)
}
#endif
inline void CtpRspQryAccountRegister::set_currency_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.currency_id)
}
inline void CtpRspQryAccountRegister::set_currency_id(const char* value, size_t size) {
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.currency_id)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_currency_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.currency_id)
  return currency_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_currency_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.currency_id)
  
  return currency_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_currency_id(::std::string* currency_id) {
  if (currency_id != nullptr) {
    
  } else {
    
  }
  currency_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.currency_id)
}

// int32 open_or_destory = 16;
inline void CtpRspQryAccountRegister::clear_open_or_destory() {
  open_or_destory_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryAccountRegister::open_or_destory() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.open_or_destory)
  return open_or_destory_;
}
inline void CtpRspQryAccountRegister::set_open_or_destory(::google::protobuf::int32 value) {
  
  open_or_destory_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.open_or_destory)
}

// string reg_date = 17;
inline void CtpRspQryAccountRegister::clear_reg_date() {
  reg_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::reg_date() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.reg_date)
  return reg_date_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_reg_date(const ::std::string& value) {
  
  reg_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.reg_date)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_reg_date(::std::string&& value) {
  
  reg_date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.reg_date)
}
#endif
inline void CtpRspQryAccountRegister::set_reg_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reg_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.reg_date)
}
inline void CtpRspQryAccountRegister::set_reg_date(const char* value, size_t size) {
  
  reg_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.reg_date)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_reg_date() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.reg_date)
  return reg_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_reg_date() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.reg_date)
  
  return reg_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_reg_date(::std::string* reg_date) {
  if (reg_date != nullptr) {
    
  } else {
    
  }
  reg_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reg_date);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.reg_date)
}

// string out_date = 18;
inline void CtpRspQryAccountRegister::clear_out_date() {
  out_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::out_date() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.out_date)
  return out_date_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_out_date(const ::std::string& value) {
  
  out_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.out_date)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_out_date(::std::string&& value) {
  
  out_date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.out_date)
}
#endif
inline void CtpRspQryAccountRegister::set_out_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  out_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.out_date)
}
inline void CtpRspQryAccountRegister::set_out_date(const char* value, size_t size) {
  
  out_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.out_date)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_out_date() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.out_date)
  return out_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_out_date() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.out_date)
  
  return out_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_out_date(::std::string* out_date) {
  if (out_date != nullptr) {
    
  } else {
    
  }
  out_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), out_date);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.out_date)
}

// int32 tid = 19;
inline void CtpRspQryAccountRegister::clear_tid() {
  tid_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryAccountRegister::tid() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.tid)
  return tid_;
}
inline void CtpRspQryAccountRegister::set_tid(::google::protobuf::int32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.tid)
}

// int32 cust_type = 20;
inline void CtpRspQryAccountRegister::clear_cust_type() {
  cust_type_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryAccountRegister::cust_type() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.cust_type)
  return cust_type_;
}
inline void CtpRspQryAccountRegister::set_cust_type(::google::protobuf::int32 value) {
  
  cust_type_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.cust_type)
}

// int32 bank_acc_type = 21;
inline void CtpRspQryAccountRegister::clear_bank_acc_type() {
  bank_acc_type_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryAccountRegister::bank_acc_type() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.bank_acc_type)
  return bank_acc_type_;
}
inline void CtpRspQryAccountRegister::set_bank_acc_type(::google::protobuf::int32 value) {
  
  bank_acc_type_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.bank_acc_type)
}

// string long_customer_name = 22;
inline void CtpRspQryAccountRegister::clear_long_customer_name() {
  long_customer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryAccountRegister::long_customer_name() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryAccountRegister.long_customer_name)
  return long_customer_name_.GetNoArena();
}
inline void CtpRspQryAccountRegister::set_long_customer_name(const ::std::string& value) {
  
  long_customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryAccountRegister.long_customer_name)
}
#if LANG_CXX11
inline void CtpRspQryAccountRegister::set_long_customer_name(::std::string&& value) {
  
  long_customer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryAccountRegister.long_customer_name)
}
#endif
inline void CtpRspQryAccountRegister::set_long_customer_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  long_customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryAccountRegister.long_customer_name)
}
inline void CtpRspQryAccountRegister::set_long_customer_name(const char* value, size_t size) {
  
  long_customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryAccountRegister.long_customer_name)
}
inline ::std::string* CtpRspQryAccountRegister::mutable_long_customer_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryAccountRegister.long_customer_name)
  return long_customer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryAccountRegister::release_long_customer_name() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryAccountRegister.long_customer_name)
  
  return long_customer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryAccountRegister::set_allocated_long_customer_name(::std::string* long_customer_name) {
  if (long_customer_name != nullptr) {
    
  } else {
    
  }
  long_customer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), long_customer_name);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryAccountRegister.long_customer_name)
}

// -------------------------------------------------------------------

// CtpReqAuthencate

// string auth_code = 1;
inline void CtpReqAuthencate::clear_auth_code() {
  auth_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqAuthencate::auth_code() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqAuthencate.auth_code)
  return auth_code_.GetNoArena();
}
inline void CtpReqAuthencate::set_auth_code(const ::std::string& value) {
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqAuthencate.auth_code)
}
#if LANG_CXX11
inline void CtpReqAuthencate::set_auth_code(::std::string&& value) {
  
  auth_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqAuthencate.auth_code)
}
#endif
inline void CtpReqAuthencate::set_auth_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqAuthencate.auth_code)
}
inline void CtpReqAuthencate::set_auth_code(const char* value, size_t size) {
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqAuthencate.auth_code)
}
inline ::std::string* CtpReqAuthencate::mutable_auth_code() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqAuthencate.auth_code)
  return auth_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqAuthencate::release_auth_code() {
  // @@protoc_insertion_point(field_release:pb.CtpReqAuthencate.auth_code)
  
  return auth_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqAuthencate::set_allocated_auth_code(::std::string* auth_code) {
  if (auth_code != nullptr) {
    
  } else {
    
  }
  auth_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_code);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqAuthencate.auth_code)
}

// string product = 2;
inline void CtpReqAuthencate::clear_product() {
  product_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqAuthencate::product() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqAuthencate.product)
  return product_.GetNoArena();
}
inline void CtpReqAuthencate::set_product(const ::std::string& value) {
  
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqAuthencate.product)
}
#if LANG_CXX11
inline void CtpReqAuthencate::set_product(::std::string&& value) {
  
  product_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqAuthencate.product)
}
#endif
inline void CtpReqAuthencate::set_product(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqAuthencate.product)
}
inline void CtpReqAuthencate::set_product(const char* value, size_t size) {
  
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqAuthencate.product)
}
inline ::std::string* CtpReqAuthencate::mutable_product() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqAuthencate.product)
  return product_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqAuthencate::release_product() {
  // @@protoc_insertion_point(field_release:pb.CtpReqAuthencate.product)
  
  return product_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqAuthencate::set_allocated_product(::std::string* product) {
  if (product != nullptr) {
    
  } else {
    
  }
  product_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqAuthencate.product)
}

// -------------------------------------------------------------------

// CtpRspAuthencate

// int32 error_id = 1;
inline void CtpRspAuthencate::clear_error_id() {
  error_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspAuthencate::error_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspAuthencate.error_id)
  return error_id_;
}
inline void CtpRspAuthencate::set_error_id(::google::protobuf::int32 value) {
  
  error_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspAuthencate.error_id)
}

// string error_msg = 2;
inline void CtpRspAuthencate::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspAuthencate::error_msg() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspAuthencate.error_msg)
  return error_msg_.GetNoArena();
}
inline void CtpRspAuthencate::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspAuthencate.error_msg)
}
#if LANG_CXX11
inline void CtpRspAuthencate::set_error_msg(::std::string&& value) {
  
  error_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspAuthencate.error_msg)
}
#endif
inline void CtpRspAuthencate::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspAuthencate.error_msg)
}
inline void CtpRspAuthencate::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspAuthencate.error_msg)
}
inline ::std::string* CtpRspAuthencate::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspAuthencate.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspAuthencate::release_error_msg() {
  // @@protoc_insertion_point(field_release:pb.CtpRspAuthencate.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspAuthencate::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != nullptr) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspAuthencate.error_msg)
}

// int32 request_id = 3;
inline void CtpRspAuthencate::clear_request_id() {
  request_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspAuthencate::request_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspAuthencate.request_id)
  return request_id_;
}
inline void CtpRspAuthencate::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspAuthencate.request_id)
}

// bool is_last = 4;
inline void CtpRspAuthencate::clear_is_last() {
  is_last_ = false;
}
inline bool CtpRspAuthencate::is_last() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspAuthencate.is_last)
  return is_last_;
}
inline void CtpRspAuthencate::set_is_last(bool value) {
  
  is_last_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspAuthencate.is_last)
}

// string broker_id = 5;
inline void CtpRspAuthencate::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspAuthencate::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspAuthencate.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpRspAuthencate::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspAuthencate.broker_id)
}
#if LANG_CXX11
inline void CtpRspAuthencate::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspAuthencate.broker_id)
}
#endif
inline void CtpRspAuthencate::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspAuthencate.broker_id)
}
inline void CtpRspAuthencate::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspAuthencate.broker_id)
}
inline ::std::string* CtpRspAuthencate::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspAuthencate.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspAuthencate::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspAuthencate.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspAuthencate::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspAuthencate.broker_id)
}

// string user_id = 6;
inline void CtpRspAuthencate::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspAuthencate::user_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspAuthencate.user_id)
  return user_id_.GetNoArena();
}
inline void CtpRspAuthencate::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspAuthencate.user_id)
}
#if LANG_CXX11
inline void CtpRspAuthencate::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspAuthencate.user_id)
}
#endif
inline void CtpRspAuthencate::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspAuthencate.user_id)
}
inline void CtpRspAuthencate::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspAuthencate.user_id)
}
inline ::std::string* CtpRspAuthencate::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspAuthencate.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspAuthencate::release_user_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspAuthencate.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspAuthencate::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspAuthencate.user_id)
}

// string user_product_info = 7;
inline void CtpRspAuthencate::clear_user_product_info() {
  user_product_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspAuthencate::user_product_info() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspAuthencate.user_product_info)
  return user_product_info_.GetNoArena();
}
inline void CtpRspAuthencate::set_user_product_info(const ::std::string& value) {
  
  user_product_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspAuthencate.user_product_info)
}
#if LANG_CXX11
inline void CtpRspAuthencate::set_user_product_info(::std::string&& value) {
  
  user_product_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspAuthencate.user_product_info)
}
#endif
inline void CtpRspAuthencate::set_user_product_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_product_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspAuthencate.user_product_info)
}
inline void CtpRspAuthencate::set_user_product_info(const char* value, size_t size) {
  
  user_product_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspAuthencate.user_product_info)
}
inline ::std::string* CtpRspAuthencate::mutable_user_product_info() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspAuthencate.user_product_info)
  return user_product_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspAuthencate::release_user_product_info() {
  // @@protoc_insertion_point(field_release:pb.CtpRspAuthencate.user_product_info)
  
  return user_product_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspAuthencate::set_allocated_user_product_info(::std::string* user_product_info) {
  if (user_product_info != nullptr) {
    
  } else {
    
  }
  user_product_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_product_info);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspAuthencate.user_product_info)
}

// -------------------------------------------------------------------

// CtpReqUserLogin

// string broker_id = 1;
inline void CtpReqUserLogin::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqUserLogin::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqUserLogin.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpReqUserLogin::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqUserLogin.broker_id)
}
#if LANG_CXX11
inline void CtpReqUserLogin::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqUserLogin.broker_id)
}
#endif
inline void CtpReqUserLogin::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqUserLogin.broker_id)
}
inline void CtpReqUserLogin::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqUserLogin.broker_id)
}
inline ::std::string* CtpReqUserLogin::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqUserLogin.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqUserLogin::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqUserLogin.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqUserLogin::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqUserLogin.broker_id)
}

// string account = 2;
inline void CtpReqUserLogin::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqUserLogin::account() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqUserLogin.account)
  return account_.GetNoArena();
}
inline void CtpReqUserLogin::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqUserLogin.account)
}
#if LANG_CXX11
inline void CtpReqUserLogin::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqUserLogin.account)
}
#endif
inline void CtpReqUserLogin::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqUserLogin.account)
}
inline void CtpReqUserLogin::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqUserLogin.account)
}
inline ::std::string* CtpReqUserLogin::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqUserLogin.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqUserLogin::release_account() {
  // @@protoc_insertion_point(field_release:pb.CtpReqUserLogin.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqUserLogin::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqUserLogin.account)
}

// string password = 3;
inline void CtpReqUserLogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqUserLogin::password() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqUserLogin.password)
  return password_.GetNoArena();
}
inline void CtpReqUserLogin::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqUserLogin.password)
}
#if LANG_CXX11
inline void CtpReqUserLogin::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqUserLogin.password)
}
#endif
inline void CtpReqUserLogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqUserLogin.password)
}
inline void CtpReqUserLogin::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqUserLogin.password)
}
inline ::std::string* CtpReqUserLogin::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqUserLogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqUserLogin::release_password() {
  // @@protoc_insertion_point(field_release:pb.CtpReqUserLogin.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqUserLogin::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqUserLogin.password)
}

// -------------------------------------------------------------------

// CtpRspUserLogin

// int32 error_id = 1;
inline void CtpRspUserLogin::clear_error_id() {
  error_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspUserLogin::error_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.error_id)
  return error_id_;
}
inline void CtpRspUserLogin::set_error_id(::google::protobuf::int32 value) {
  
  error_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.error_id)
}

// string error_msg = 2;
inline void CtpRspUserLogin::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::error_msg() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.error_msg)
  return error_msg_.GetNoArena();
}
inline void CtpRspUserLogin::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.error_msg)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_error_msg(::std::string&& value) {
  
  error_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.error_msg)
}
#endif
inline void CtpRspUserLogin::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.error_msg)
}
inline void CtpRspUserLogin::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.error_msg)
}
inline ::std::string* CtpRspUserLogin::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_error_msg() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != nullptr) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.error_msg)
}

// int32 request_id = 3;
inline void CtpRspUserLogin::clear_request_id() {
  request_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspUserLogin::request_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.request_id)
  return request_id_;
}
inline void CtpRspUserLogin::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.request_id)
}

// bool is_last = 4;
inline void CtpRspUserLogin::clear_is_last() {
  is_last_ = false;
}
inline bool CtpRspUserLogin::is_last() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.is_last)
  return is_last_;
}
inline void CtpRspUserLogin::set_is_last(bool value) {
  
  is_last_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.is_last)
}

// string trading_day = 5;
inline void CtpRspUserLogin::clear_trading_day() {
  trading_day_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::trading_day() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.trading_day)
  return trading_day_.GetNoArena();
}
inline void CtpRspUserLogin::set_trading_day(const ::std::string& value) {
  
  trading_day_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.trading_day)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_trading_day(::std::string&& value) {
  
  trading_day_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.trading_day)
}
#endif
inline void CtpRspUserLogin::set_trading_day(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  trading_day_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.trading_day)
}
inline void CtpRspUserLogin::set_trading_day(const char* value, size_t size) {
  
  trading_day_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.trading_day)
}
inline ::std::string* CtpRspUserLogin::mutable_trading_day() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.trading_day)
  return trading_day_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_trading_day() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.trading_day)
  
  return trading_day_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_trading_day(::std::string* trading_day) {
  if (trading_day != nullptr) {
    
  } else {
    
  }
  trading_day_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trading_day);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.trading_day)
}

// string login_time = 6;
inline void CtpRspUserLogin::clear_login_time() {
  login_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::login_time() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.login_time)
  return login_time_.GetNoArena();
}
inline void CtpRspUserLogin::set_login_time(const ::std::string& value) {
  
  login_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.login_time)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_login_time(::std::string&& value) {
  
  login_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.login_time)
}
#endif
inline void CtpRspUserLogin::set_login_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  login_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.login_time)
}
inline void CtpRspUserLogin::set_login_time(const char* value, size_t size) {
  
  login_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.login_time)
}
inline ::std::string* CtpRspUserLogin::mutable_login_time() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.login_time)
  return login_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_login_time() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.login_time)
  
  return login_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_login_time(::std::string* login_time) {
  if (login_time != nullptr) {
    
  } else {
    
  }
  login_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_time);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.login_time)
}

// string broker_id = 7;
inline void CtpRspUserLogin::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpRspUserLogin::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.broker_id)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.broker_id)
}
#endif
inline void CtpRspUserLogin::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.broker_id)
}
inline void CtpRspUserLogin::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.broker_id)
}
inline ::std::string* CtpRspUserLogin::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.broker_id)
}

// string user_id = 8;
inline void CtpRspUserLogin::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::user_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.user_id)
  return user_id_.GetNoArena();
}
inline void CtpRspUserLogin::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.user_id)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.user_id)
}
#endif
inline void CtpRspUserLogin::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.user_id)
}
inline void CtpRspUserLogin::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.user_id)
}
inline ::std::string* CtpRspUserLogin::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_user_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.user_id)
}

// string system_name = 9;
inline void CtpRspUserLogin::clear_system_name() {
  system_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::system_name() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.system_name)
  return system_name_.GetNoArena();
}
inline void CtpRspUserLogin::set_system_name(const ::std::string& value) {
  
  system_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.system_name)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_system_name(::std::string&& value) {
  
  system_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.system_name)
}
#endif
inline void CtpRspUserLogin::set_system_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  system_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.system_name)
}
inline void CtpRspUserLogin::set_system_name(const char* value, size_t size) {
  
  system_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.system_name)
}
inline ::std::string* CtpRspUserLogin::mutable_system_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.system_name)
  return system_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_system_name() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.system_name)
  
  return system_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_system_name(::std::string* system_name) {
  if (system_name != nullptr) {
    
  } else {
    
  }
  system_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_name);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.system_name)
}

// int32 front_id = 10;
inline void CtpRspUserLogin::clear_front_id() {
  front_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspUserLogin::front_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.front_id)
  return front_id_;
}
inline void CtpRspUserLogin::set_front_id(::google::protobuf::int32 value) {
  
  front_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.front_id)
}

// int32 session_id = 11;
inline void CtpRspUserLogin::clear_session_id() {
  session_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspUserLogin::session_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.session_id)
  return session_id_;
}
inline void CtpRspUserLogin::set_session_id(::google::protobuf::int32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.session_id)
}

// string max_order_ref = 12;
inline void CtpRspUserLogin::clear_max_order_ref() {
  max_order_ref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::max_order_ref() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.max_order_ref)
  return max_order_ref_.GetNoArena();
}
inline void CtpRspUserLogin::set_max_order_ref(const ::std::string& value) {
  
  max_order_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.max_order_ref)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_max_order_ref(::std::string&& value) {
  
  max_order_ref_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.max_order_ref)
}
#endif
inline void CtpRspUserLogin::set_max_order_ref(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  max_order_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.max_order_ref)
}
inline void CtpRspUserLogin::set_max_order_ref(const char* value, size_t size) {
  
  max_order_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.max_order_ref)
}
inline ::std::string* CtpRspUserLogin::mutable_max_order_ref() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.max_order_ref)
  return max_order_ref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_max_order_ref() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.max_order_ref)
  
  return max_order_ref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_max_order_ref(::std::string* max_order_ref) {
  if (max_order_ref != nullptr) {
    
  } else {
    
  }
  max_order_ref_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), max_order_ref);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.max_order_ref)
}

// string shfe_time = 13;
inline void CtpRspUserLogin::clear_shfe_time() {
  shfe_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::shfe_time() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.shfe_time)
  return shfe_time_.GetNoArena();
}
inline void CtpRspUserLogin::set_shfe_time(const ::std::string& value) {
  
  shfe_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.shfe_time)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_shfe_time(::std::string&& value) {
  
  shfe_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.shfe_time)
}
#endif
inline void CtpRspUserLogin::set_shfe_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  shfe_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.shfe_time)
}
inline void CtpRspUserLogin::set_shfe_time(const char* value, size_t size) {
  
  shfe_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.shfe_time)
}
inline ::std::string* CtpRspUserLogin::mutable_shfe_time() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.shfe_time)
  return shfe_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_shfe_time() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.shfe_time)
  
  return shfe_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_shfe_time(::std::string* shfe_time) {
  if (shfe_time != nullptr) {
    
  } else {
    
  }
  shfe_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shfe_time);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.shfe_time)
}

// string dce_time = 14;
inline void CtpRspUserLogin::clear_dce_time() {
  dce_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::dce_time() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.dce_time)
  return dce_time_.GetNoArena();
}
inline void CtpRspUserLogin::set_dce_time(const ::std::string& value) {
  
  dce_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.dce_time)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_dce_time(::std::string&& value) {
  
  dce_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.dce_time)
}
#endif
inline void CtpRspUserLogin::set_dce_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dce_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.dce_time)
}
inline void CtpRspUserLogin::set_dce_time(const char* value, size_t size) {
  
  dce_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.dce_time)
}
inline ::std::string* CtpRspUserLogin::mutable_dce_time() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.dce_time)
  return dce_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_dce_time() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.dce_time)
  
  return dce_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_dce_time(::std::string* dce_time) {
  if (dce_time != nullptr) {
    
  } else {
    
  }
  dce_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dce_time);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.dce_time)
}

// string czce_time = 15;
inline void CtpRspUserLogin::clear_czce_time() {
  czce_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::czce_time() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.czce_time)
  return czce_time_.GetNoArena();
}
inline void CtpRspUserLogin::set_czce_time(const ::std::string& value) {
  
  czce_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.czce_time)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_czce_time(::std::string&& value) {
  
  czce_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.czce_time)
}
#endif
inline void CtpRspUserLogin::set_czce_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  czce_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.czce_time)
}
inline void CtpRspUserLogin::set_czce_time(const char* value, size_t size) {
  
  czce_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.czce_time)
}
inline ::std::string* CtpRspUserLogin::mutable_czce_time() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.czce_time)
  return czce_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_czce_time() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.czce_time)
  
  return czce_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_czce_time(::std::string* czce_time) {
  if (czce_time != nullptr) {
    
  } else {
    
  }
  czce_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), czce_time);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.czce_time)
}

// string cffex_time = 16;
inline void CtpRspUserLogin::clear_cffex_time() {
  cffex_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::cffex_time() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.cffex_time)
  return cffex_time_.GetNoArena();
}
inline void CtpRspUserLogin::set_cffex_time(const ::std::string& value) {
  
  cffex_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.cffex_time)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_cffex_time(::std::string&& value) {
  
  cffex_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.cffex_time)
}
#endif
inline void CtpRspUserLogin::set_cffex_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cffex_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.cffex_time)
}
inline void CtpRspUserLogin::set_cffex_time(const char* value, size_t size) {
  
  cffex_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.cffex_time)
}
inline ::std::string* CtpRspUserLogin::mutable_cffex_time() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.cffex_time)
  return cffex_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_cffex_time() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.cffex_time)
  
  return cffex_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_cffex_time(::std::string* cffex_time) {
  if (cffex_time != nullptr) {
    
  } else {
    
  }
  cffex_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cffex_time);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.cffex_time)
}

// string ine_time = 17;
inline void CtpRspUserLogin::clear_ine_time() {
  ine_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspUserLogin::ine_time() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspUserLogin.ine_time)
  return ine_time_.GetNoArena();
}
inline void CtpRspUserLogin::set_ine_time(const ::std::string& value) {
  
  ine_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspUserLogin.ine_time)
}
#if LANG_CXX11
inline void CtpRspUserLogin::set_ine_time(::std::string&& value) {
  
  ine_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspUserLogin.ine_time)
}
#endif
inline void CtpRspUserLogin::set_ine_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ine_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspUserLogin.ine_time)
}
inline void CtpRspUserLogin::set_ine_time(const char* value, size_t size) {
  
  ine_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspUserLogin.ine_time)
}
inline ::std::string* CtpRspUserLogin::mutable_ine_time() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspUserLogin.ine_time)
  return ine_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspUserLogin::release_ine_time() {
  // @@protoc_insertion_point(field_release:pb.CtpRspUserLogin.ine_time)
  
  return ine_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspUserLogin::set_allocated_ine_time(::std::string* ine_time) {
  if (ine_time != nullptr) {
    
  } else {
    
  }
  ine_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ine_time);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspUserLogin.ine_time)
}

// -------------------------------------------------------------------

// CtpReqConnect

// string address = 1;
inline void CtpReqConnect::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqConnect::address() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqConnect.address)
  return address_.GetNoArena();
}
inline void CtpReqConnect::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqConnect.address)
}
#if LANG_CXX11
inline void CtpReqConnect::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqConnect.address)
}
#endif
inline void CtpReqConnect::set_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqConnect.address)
}
inline void CtpReqConnect::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqConnect.address)
}
inline ::std::string* CtpReqConnect::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqConnect.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqConnect::release_address() {
  // @@protoc_insertion_point(field_release:pb.CtpReqConnect.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqConnect::set_allocated_address(::std::string* address) {
  if (address != nullptr) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqConnect.address)
}

// string account = 2;
inline void CtpReqConnect::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqConnect::account() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqConnect.account)
  return account_.GetNoArena();
}
inline void CtpReqConnect::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqConnect.account)
}
#if LANG_CXX11
inline void CtpReqConnect::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqConnect.account)
}
#endif
inline void CtpReqConnect::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqConnect.account)
}
inline void CtpReqConnect::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqConnect.account)
}
inline ::std::string* CtpReqConnect::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqConnect.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqConnect::release_account() {
  // @@protoc_insertion_point(field_release:pb.CtpReqConnect.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqConnect::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqConnect.account)
}

// string directory = 3;
inline void CtpReqConnect::clear_directory() {
  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqConnect::directory() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqConnect.directory)
  return directory_.GetNoArena();
}
inline void CtpReqConnect::set_directory(const ::std::string& value) {
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqConnect.directory)
}
#if LANG_CXX11
inline void CtpReqConnect::set_directory(::std::string&& value) {
  
  directory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqConnect.directory)
}
#endif
inline void CtpReqConnect::set_directory(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqConnect.directory)
}
inline void CtpReqConnect::set_directory(const char* value, size_t size) {
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqConnect.directory)
}
inline ::std::string* CtpReqConnect::mutable_directory() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqConnect.directory)
  return directory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqConnect::release_directory() {
  // @@protoc_insertion_point(field_release:pb.CtpReqConnect.directory)
  
  return directory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqConnect::set_allocated_directory(::std::string* directory) {
  if (directory != nullptr) {
    
  } else {
    
  }
  directory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), directory);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqConnect.directory)
}

// -------------------------------------------------------------------

// CtpOnFrontConnected

// -------------------------------------------------------------------

// CtpOnFrontDisconnected

// -------------------------------------------------------------------

// CtpReqSettlementInfoConfirm

// string broker_id = 1;
inline void CtpReqSettlementInfoConfirm::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqSettlementInfoConfirm::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqSettlementInfoConfirm.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpReqSettlementInfoConfirm::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqSettlementInfoConfirm.broker_id)
}
#if LANG_CXX11
inline void CtpReqSettlementInfoConfirm::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqSettlementInfoConfirm.broker_id)
}
#endif
inline void CtpReqSettlementInfoConfirm::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqSettlementInfoConfirm.broker_id)
}
inline void CtpReqSettlementInfoConfirm::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqSettlementInfoConfirm.broker_id)
}
inline ::std::string* CtpReqSettlementInfoConfirm::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqSettlementInfoConfirm.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqSettlementInfoConfirm::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqSettlementInfoConfirm.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqSettlementInfoConfirm::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqSettlementInfoConfirm.broker_id)
}

// string investor_id = 2;
inline void CtpReqSettlementInfoConfirm::clear_investor_id() {
  investor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqSettlementInfoConfirm::investor_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqSettlementInfoConfirm.investor_id)
  return investor_id_.GetNoArena();
}
inline void CtpReqSettlementInfoConfirm::set_investor_id(const ::std::string& value) {
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqSettlementInfoConfirm.investor_id)
}
#if LANG_CXX11
inline void CtpReqSettlementInfoConfirm::set_investor_id(::std::string&& value) {
  
  investor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqSettlementInfoConfirm.investor_id)
}
#endif
inline void CtpReqSettlementInfoConfirm::set_investor_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqSettlementInfoConfirm.investor_id)
}
inline void CtpReqSettlementInfoConfirm::set_investor_id(const char* value, size_t size) {
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqSettlementInfoConfirm.investor_id)
}
inline ::std::string* CtpReqSettlementInfoConfirm::mutable_investor_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqSettlementInfoConfirm.investor_id)
  return investor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqSettlementInfoConfirm::release_investor_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqSettlementInfoConfirm.investor_id)
  
  return investor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqSettlementInfoConfirm::set_allocated_investor_id(::std::string* investor_id) {
  if (investor_id != nullptr) {
    
  } else {
    
  }
  investor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investor_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqSettlementInfoConfirm.investor_id)
}

// -------------------------------------------------------------------

// CtpOnRspSettlementInfoConfirm

// int32 error_id = 1;
inline void CtpOnRspSettlementInfoConfirm::clear_error_id() {
  error_id_ = 0;
}
inline ::google::protobuf::int32 CtpOnRspSettlementInfoConfirm::error_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.error_id)
  return error_id_;
}
inline void CtpOnRspSettlementInfoConfirm::set_error_id(::google::protobuf::int32 value) {
  
  error_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.error_id)
}

// string error_msg = 2;
inline void CtpOnRspSettlementInfoConfirm::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpOnRspSettlementInfoConfirm::error_msg() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.error_msg)
  return error_msg_.GetNoArena();
}
inline void CtpOnRspSettlementInfoConfirm::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.error_msg)
}
#if LANG_CXX11
inline void CtpOnRspSettlementInfoConfirm::set_error_msg(::std::string&& value) {
  
  error_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpOnRspSettlementInfoConfirm.error_msg)
}
#endif
inline void CtpOnRspSettlementInfoConfirm::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpOnRspSettlementInfoConfirm.error_msg)
}
inline void CtpOnRspSettlementInfoConfirm::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpOnRspSettlementInfoConfirm.error_msg)
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpOnRspSettlementInfoConfirm.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::release_error_msg() {
  // @@protoc_insertion_point(field_release:pb.CtpOnRspSettlementInfoConfirm.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpOnRspSettlementInfoConfirm::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != nullptr) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpOnRspSettlementInfoConfirm.error_msg)
}

// int32 request_id = 3;
inline void CtpOnRspSettlementInfoConfirm::clear_request_id() {
  request_id_ = 0;
}
inline ::google::protobuf::int32 CtpOnRspSettlementInfoConfirm::request_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.request_id)
  return request_id_;
}
inline void CtpOnRspSettlementInfoConfirm::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.request_id)
}

// bool is_last = 4;
inline void CtpOnRspSettlementInfoConfirm::clear_is_last() {
  is_last_ = false;
}
inline bool CtpOnRspSettlementInfoConfirm::is_last() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.is_last)
  return is_last_;
}
inline void CtpOnRspSettlementInfoConfirm::set_is_last(bool value) {
  
  is_last_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.is_last)
}

// string broker_id = 5;
inline void CtpOnRspSettlementInfoConfirm::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpOnRspSettlementInfoConfirm::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpOnRspSettlementInfoConfirm::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.broker_id)
}
#if LANG_CXX11
inline void CtpOnRspSettlementInfoConfirm::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpOnRspSettlementInfoConfirm.broker_id)
}
#endif
inline void CtpOnRspSettlementInfoConfirm::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpOnRspSettlementInfoConfirm.broker_id)
}
inline void CtpOnRspSettlementInfoConfirm::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpOnRspSettlementInfoConfirm.broker_id)
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpOnRspSettlementInfoConfirm.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpOnRspSettlementInfoConfirm.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpOnRspSettlementInfoConfirm::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpOnRspSettlementInfoConfirm.broker_id)
}

// string investor_id = 6;
inline void CtpOnRspSettlementInfoConfirm::clear_investor_id() {
  investor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpOnRspSettlementInfoConfirm::investor_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.investor_id)
  return investor_id_.GetNoArena();
}
inline void CtpOnRspSettlementInfoConfirm::set_investor_id(const ::std::string& value) {
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.investor_id)
}
#if LANG_CXX11
inline void CtpOnRspSettlementInfoConfirm::set_investor_id(::std::string&& value) {
  
  investor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpOnRspSettlementInfoConfirm.investor_id)
}
#endif
inline void CtpOnRspSettlementInfoConfirm::set_investor_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpOnRspSettlementInfoConfirm.investor_id)
}
inline void CtpOnRspSettlementInfoConfirm::set_investor_id(const char* value, size_t size) {
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpOnRspSettlementInfoConfirm.investor_id)
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::mutable_investor_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpOnRspSettlementInfoConfirm.investor_id)
  return investor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::release_investor_id() {
  // @@protoc_insertion_point(field_release:pb.CtpOnRspSettlementInfoConfirm.investor_id)
  
  return investor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpOnRspSettlementInfoConfirm::set_allocated_investor_id(::std::string* investor_id) {
  if (investor_id != nullptr) {
    
  } else {
    
  }
  investor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investor_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpOnRspSettlementInfoConfirm.investor_id)
}

// string confirm_date = 7;
inline void CtpOnRspSettlementInfoConfirm::clear_confirm_date() {
  confirm_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpOnRspSettlementInfoConfirm::confirm_date() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.confirm_date)
  return confirm_date_.GetNoArena();
}
inline void CtpOnRspSettlementInfoConfirm::set_confirm_date(const ::std::string& value) {
  
  confirm_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.confirm_date)
}
#if LANG_CXX11
inline void CtpOnRspSettlementInfoConfirm::set_confirm_date(::std::string&& value) {
  
  confirm_date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpOnRspSettlementInfoConfirm.confirm_date)
}
#endif
inline void CtpOnRspSettlementInfoConfirm::set_confirm_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  confirm_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpOnRspSettlementInfoConfirm.confirm_date)
}
inline void CtpOnRspSettlementInfoConfirm::set_confirm_date(const char* value, size_t size) {
  
  confirm_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpOnRspSettlementInfoConfirm.confirm_date)
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::mutable_confirm_date() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpOnRspSettlementInfoConfirm.confirm_date)
  return confirm_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::release_confirm_date() {
  // @@protoc_insertion_point(field_release:pb.CtpOnRspSettlementInfoConfirm.confirm_date)
  
  return confirm_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpOnRspSettlementInfoConfirm::set_allocated_confirm_date(::std::string* confirm_date) {
  if (confirm_date != nullptr) {
    
  } else {
    
  }
  confirm_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), confirm_date);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpOnRspSettlementInfoConfirm.confirm_date)
}

// string confirm_time = 8;
inline void CtpOnRspSettlementInfoConfirm::clear_confirm_time() {
  confirm_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpOnRspSettlementInfoConfirm::confirm_time() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.confirm_time)
  return confirm_time_.GetNoArena();
}
inline void CtpOnRspSettlementInfoConfirm::set_confirm_time(const ::std::string& value) {
  
  confirm_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.confirm_time)
}
#if LANG_CXX11
inline void CtpOnRspSettlementInfoConfirm::set_confirm_time(::std::string&& value) {
  
  confirm_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpOnRspSettlementInfoConfirm.confirm_time)
}
#endif
inline void CtpOnRspSettlementInfoConfirm::set_confirm_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  confirm_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpOnRspSettlementInfoConfirm.confirm_time)
}
inline void CtpOnRspSettlementInfoConfirm::set_confirm_time(const char* value, size_t size) {
  
  confirm_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpOnRspSettlementInfoConfirm.confirm_time)
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::mutable_confirm_time() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpOnRspSettlementInfoConfirm.confirm_time)
  return confirm_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::release_confirm_time() {
  // @@protoc_insertion_point(field_release:pb.CtpOnRspSettlementInfoConfirm.confirm_time)
  
  return confirm_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpOnRspSettlementInfoConfirm::set_allocated_confirm_time(::std::string* confirm_time) {
  if (confirm_time != nullptr) {
    
  } else {
    
  }
  confirm_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), confirm_time);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpOnRspSettlementInfoConfirm.confirm_time)
}

// int32 settlement_id = 9;
inline void CtpOnRspSettlementInfoConfirm::clear_settlement_id() {
  settlement_id_ = 0;
}
inline ::google::protobuf::int32 CtpOnRspSettlementInfoConfirm::settlement_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.settlement_id)
  return settlement_id_;
}
inline void CtpOnRspSettlementInfoConfirm::set_settlement_id(::google::protobuf::int32 value) {
  
  settlement_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.settlement_id)
}

// string account_id = 10;
inline void CtpOnRspSettlementInfoConfirm::clear_account_id() {
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpOnRspSettlementInfoConfirm::account_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.account_id)
  return account_id_.GetNoArena();
}
inline void CtpOnRspSettlementInfoConfirm::set_account_id(const ::std::string& value) {
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.account_id)
}
#if LANG_CXX11
inline void CtpOnRspSettlementInfoConfirm::set_account_id(::std::string&& value) {
  
  account_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpOnRspSettlementInfoConfirm.account_id)
}
#endif
inline void CtpOnRspSettlementInfoConfirm::set_account_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpOnRspSettlementInfoConfirm.account_id)
}
inline void CtpOnRspSettlementInfoConfirm::set_account_id(const char* value, size_t size) {
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpOnRspSettlementInfoConfirm.account_id)
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::mutable_account_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpOnRspSettlementInfoConfirm.account_id)
  return account_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::release_account_id() {
  // @@protoc_insertion_point(field_release:pb.CtpOnRspSettlementInfoConfirm.account_id)
  
  return account_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpOnRspSettlementInfoConfirm::set_allocated_account_id(::std::string* account_id) {
  if (account_id != nullptr) {
    
  } else {
    
  }
  account_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpOnRspSettlementInfoConfirm.account_id)
}

// string currency_id = 11;
inline void CtpOnRspSettlementInfoConfirm::clear_currency_id() {
  currency_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpOnRspSettlementInfoConfirm::currency_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpOnRspSettlementInfoConfirm.currency_id)
  return currency_id_.GetNoArena();
}
inline void CtpOnRspSettlementInfoConfirm::set_currency_id(const ::std::string& value) {
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpOnRspSettlementInfoConfirm.currency_id)
}
#if LANG_CXX11
inline void CtpOnRspSettlementInfoConfirm::set_currency_id(::std::string&& value) {
  
  currency_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpOnRspSettlementInfoConfirm.currency_id)
}
#endif
inline void CtpOnRspSettlementInfoConfirm::set_currency_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpOnRspSettlementInfoConfirm.currency_id)
}
inline void CtpOnRspSettlementInfoConfirm::set_currency_id(const char* value, size_t size) {
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpOnRspSettlementInfoConfirm.currency_id)
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::mutable_currency_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpOnRspSettlementInfoConfirm.currency_id)
  return currency_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpOnRspSettlementInfoConfirm::release_currency_id() {
  // @@protoc_insertion_point(field_release:pb.CtpOnRspSettlementInfoConfirm.currency_id)
  
  return currency_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpOnRspSettlementInfoConfirm::set_allocated_currency_id(::std::string* currency_id) {
  if (currency_id != nullptr) {
    
  } else {
    
  }
  currency_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpOnRspSettlementInfoConfirm.currency_id)
}

// -------------------------------------------------------------------

// CtpReqQryInvestor

// -------------------------------------------------------------------

// CtpRspQryInvestor

// int32 error_id = 1;
inline void CtpRspQryInvestor::clear_error_id() {
  error_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryInvestor::error_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.error_id)
  return error_id_;
}
inline void CtpRspQryInvestor::set_error_id(::google::protobuf::int32 value) {
  
  error_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.error_id)
}

// string error_msg = 2;
inline void CtpRspQryInvestor::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryInvestor::error_msg() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.error_msg)
  return error_msg_.GetNoArena();
}
inline void CtpRspQryInvestor::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.error_msg)
}
#if LANG_CXX11
inline void CtpRspQryInvestor::set_error_msg(::std::string&& value) {
  
  error_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryInvestor.error_msg)
}
#endif
inline void CtpRspQryInvestor::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryInvestor.error_msg)
}
inline void CtpRspQryInvestor::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryInvestor.error_msg)
}
inline ::std::string* CtpRspQryInvestor::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryInvestor.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryInvestor::release_error_msg() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryInvestor.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryInvestor::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != nullptr) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryInvestor.error_msg)
}

// int32 request_id = 3;
inline void CtpRspQryInvestor::clear_request_id() {
  request_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryInvestor::request_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.request_id)
  return request_id_;
}
inline void CtpRspQryInvestor::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.request_id)
}

// bool is_last = 4;
inline void CtpRspQryInvestor::clear_is_last() {
  is_last_ = false;
}
inline bool CtpRspQryInvestor::is_last() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.is_last)
  return is_last_;
}
inline void CtpRspQryInvestor::set_is_last(bool value) {
  
  is_last_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.is_last)
}

// string investor_id = 5;
inline void CtpRspQryInvestor::clear_investor_id() {
  investor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryInvestor::investor_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.investor_id)
  return investor_id_.GetNoArena();
}
inline void CtpRspQryInvestor::set_investor_id(const ::std::string& value) {
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.investor_id)
}
#if LANG_CXX11
inline void CtpRspQryInvestor::set_investor_id(::std::string&& value) {
  
  investor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryInvestor.investor_id)
}
#endif
inline void CtpRspQryInvestor::set_investor_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryInvestor.investor_id)
}
inline void CtpRspQryInvestor::set_investor_id(const char* value, size_t size) {
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryInvestor.investor_id)
}
inline ::std::string* CtpRspQryInvestor::mutable_investor_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryInvestor.investor_id)
  return investor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryInvestor::release_investor_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryInvestor.investor_id)
  
  return investor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryInvestor::set_allocated_investor_id(::std::string* investor_id) {
  if (investor_id != nullptr) {
    
  } else {
    
  }
  investor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investor_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryInvestor.investor_id)
}

// string broker_id = 6;
inline void CtpRspQryInvestor::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryInvestor::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpRspQryInvestor::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.broker_id)
}
#if LANG_CXX11
inline void CtpRspQryInvestor::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryInvestor.broker_id)
}
#endif
inline void CtpRspQryInvestor::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryInvestor.broker_id)
}
inline void CtpRspQryInvestor::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryInvestor.broker_id)
}
inline ::std::string* CtpRspQryInvestor::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryInvestor.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryInvestor::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryInvestor.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryInvestor::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryInvestor.broker_id)
}

// string investor_group_id = 7;
inline void CtpRspQryInvestor::clear_investor_group_id() {
  investor_group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryInvestor::investor_group_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.investor_group_id)
  return investor_group_id_.GetNoArena();
}
inline void CtpRspQryInvestor::set_investor_group_id(const ::std::string& value) {
  
  investor_group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.investor_group_id)
}
#if LANG_CXX11
inline void CtpRspQryInvestor::set_investor_group_id(::std::string&& value) {
  
  investor_group_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryInvestor.investor_group_id)
}
#endif
inline void CtpRspQryInvestor::set_investor_group_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  investor_group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryInvestor.investor_group_id)
}
inline void CtpRspQryInvestor::set_investor_group_id(const char* value, size_t size) {
  
  investor_group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryInvestor.investor_group_id)
}
inline ::std::string* CtpRspQryInvestor::mutable_investor_group_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryInvestor.investor_group_id)
  return investor_group_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryInvestor::release_investor_group_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryInvestor.investor_group_id)
  
  return investor_group_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryInvestor::set_allocated_investor_group_id(::std::string* investor_group_id) {
  if (investor_group_id != nullptr) {
    
  } else {
    
  }
  investor_group_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investor_group_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryInvestor.investor_group_id)
}

// string investor_name = 8;
inline void CtpRspQryInvestor::clear_investor_name() {
  investor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryInvestor::investor_name() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.investor_name)
  return investor_name_.GetNoArena();
}
inline void CtpRspQryInvestor::set_investor_name(const ::std::string& value) {
  
  investor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.investor_name)
}
#if LANG_CXX11
inline void CtpRspQryInvestor::set_investor_name(::std::string&& value) {
  
  investor_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryInvestor.investor_name)
}
#endif
inline void CtpRspQryInvestor::set_investor_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  investor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryInvestor.investor_name)
}
inline void CtpRspQryInvestor::set_investor_name(const char* value, size_t size) {
  
  investor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryInvestor.investor_name)
}
inline ::std::string* CtpRspQryInvestor::mutable_investor_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryInvestor.investor_name)
  return investor_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryInvestor::release_investor_name() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryInvestor.investor_name)
  
  return investor_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryInvestor::set_allocated_investor_name(::std::string* investor_name) {
  if (investor_name != nullptr) {
    
  } else {
    
  }
  investor_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investor_name);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryInvestor.investor_name)
}

// int32 identified_card_type = 9;
inline void CtpRspQryInvestor::clear_identified_card_type() {
  identified_card_type_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryInvestor::identified_card_type() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.identified_card_type)
  return identified_card_type_;
}
inline void CtpRspQryInvestor::set_identified_card_type(::google::protobuf::int32 value) {
  
  identified_card_type_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.identified_card_type)
}

// string identified_card_no = 10;
inline void CtpRspQryInvestor::clear_identified_card_no() {
  identified_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryInvestor::identified_card_no() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.identified_card_no)
  return identified_card_no_.GetNoArena();
}
inline void CtpRspQryInvestor::set_identified_card_no(const ::std::string& value) {
  
  identified_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.identified_card_no)
}
#if LANG_CXX11
inline void CtpRspQryInvestor::set_identified_card_no(::std::string&& value) {
  
  identified_card_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryInvestor.identified_card_no)
}
#endif
inline void CtpRspQryInvestor::set_identified_card_no(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  identified_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryInvestor.identified_card_no)
}
inline void CtpRspQryInvestor::set_identified_card_no(const char* value, size_t size) {
  
  identified_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryInvestor.identified_card_no)
}
inline ::std::string* CtpRspQryInvestor::mutable_identified_card_no() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryInvestor.identified_card_no)
  return identified_card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryInvestor::release_identified_card_no() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryInvestor.identified_card_no)
  
  return identified_card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryInvestor::set_allocated_identified_card_no(::std::string* identified_card_no) {
  if (identified_card_no != nullptr) {
    
  } else {
    
  }
  identified_card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identified_card_no);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryInvestor.identified_card_no)
}

// bool is_active = 11;
inline void CtpRspQryInvestor::clear_is_active() {
  is_active_ = false;
}
inline bool CtpRspQryInvestor::is_active() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.is_active)
  return is_active_;
}
inline void CtpRspQryInvestor::set_is_active(bool value) {
  
  is_active_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.is_active)
}

// string telphone = 12;
inline void CtpRspQryInvestor::clear_telphone() {
  telphone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryInvestor::telphone() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.telphone)
  return telphone_.GetNoArena();
}
inline void CtpRspQryInvestor::set_telphone(const ::std::string& value) {
  
  telphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.telphone)
}
#if LANG_CXX11
inline void CtpRspQryInvestor::set_telphone(::std::string&& value) {
  
  telphone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryInvestor.telphone)
}
#endif
inline void CtpRspQryInvestor::set_telphone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  telphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryInvestor.telphone)
}
inline void CtpRspQryInvestor::set_telphone(const char* value, size_t size) {
  
  telphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryInvestor.telphone)
}
inline ::std::string* CtpRspQryInvestor::mutable_telphone() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryInvestor.telphone)
  return telphone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryInvestor::release_telphone() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryInvestor.telphone)
  
  return telphone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryInvestor::set_allocated_telphone(::std::string* telphone) {
  if (telphone != nullptr) {
    
  } else {
    
  }
  telphone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), telphone);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryInvestor.telphone)
}

// string address = 13;
inline void CtpRspQryInvestor::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryInvestor::address() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.address)
  return address_.GetNoArena();
}
inline void CtpRspQryInvestor::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.address)
}
#if LANG_CXX11
inline void CtpRspQryInvestor::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryInvestor.address)
}
#endif
inline void CtpRspQryInvestor::set_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryInvestor.address)
}
inline void CtpRspQryInvestor::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryInvestor.address)
}
inline ::std::string* CtpRspQryInvestor::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryInvestor.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryInvestor::release_address() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryInvestor.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryInvestor::set_allocated_address(::std::string* address) {
  if (address != nullptr) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryInvestor.address)
}

// string open_date = 14;
inline void CtpRspQryInvestor::clear_open_date() {
  open_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryInvestor::open_date() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.open_date)
  return open_date_.GetNoArena();
}
inline void CtpRspQryInvestor::set_open_date(const ::std::string& value) {
  
  open_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.open_date)
}
#if LANG_CXX11
inline void CtpRspQryInvestor::set_open_date(::std::string&& value) {
  
  open_date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryInvestor.open_date)
}
#endif
inline void CtpRspQryInvestor::set_open_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  open_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryInvestor.open_date)
}
inline void CtpRspQryInvestor::set_open_date(const char* value, size_t size) {
  
  open_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryInvestor.open_date)
}
inline ::std::string* CtpRspQryInvestor::mutable_open_date() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryInvestor.open_date)
  return open_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryInvestor::release_open_date() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryInvestor.open_date)
  
  return open_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryInvestor::set_allocated_open_date(::std::string* open_date) {
  if (open_date != nullptr) {
    
  } else {
    
  }
  open_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), open_date);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryInvestor.open_date)
}

// string mobile = 15;
inline void CtpRspQryInvestor::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryInvestor::mobile() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryInvestor.mobile)
  return mobile_.GetNoArena();
}
inline void CtpRspQryInvestor::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryInvestor.mobile)
}
#if LANG_CXX11
inline void CtpRspQryInvestor::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryInvestor.mobile)
}
#endif
inline void CtpRspQryInvestor::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryInvestor.mobile)
}
inline void CtpRspQryInvestor::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryInvestor.mobile)
}
inline ::std::string* CtpRspQryInvestor::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryInvestor.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryInvestor::release_mobile() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryInvestor.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryInvestor::set_allocated_mobile(::std::string* mobile) {
  if (mobile != nullptr) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryInvestor.mobile)
}

// -------------------------------------------------------------------

// CtpReqQryTransferBank

// string broker_id = 1;
inline void CtpReqQryTransferBank::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqQryTransferBank::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqQryTransferBank.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpReqQryTransferBank::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqQryTransferBank.broker_id)
}
#if LANG_CXX11
inline void CtpReqQryTransferBank::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqQryTransferBank.broker_id)
}
#endif
inline void CtpReqQryTransferBank::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqQryTransferBank.broker_id)
}
inline void CtpReqQryTransferBank::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqQryTransferBank.broker_id)
}
inline ::std::string* CtpReqQryTransferBank::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqQryTransferBank.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqQryTransferBank::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqQryTransferBank.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqQryTransferBank::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqQryTransferBank.broker_id)
}

// string investor_id = 2;
inline void CtpReqQryTransferBank::clear_investor_id() {
  investor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqQryTransferBank::investor_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqQryTransferBank.investor_id)
  return investor_id_.GetNoArena();
}
inline void CtpReqQryTransferBank::set_investor_id(const ::std::string& value) {
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqQryTransferBank.investor_id)
}
#if LANG_CXX11
inline void CtpReqQryTransferBank::set_investor_id(::std::string&& value) {
  
  investor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqQryTransferBank.investor_id)
}
#endif
inline void CtpReqQryTransferBank::set_investor_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqQryTransferBank.investor_id)
}
inline void CtpReqQryTransferBank::set_investor_id(const char* value, size_t size) {
  
  investor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqQryTransferBank.investor_id)
}
inline ::std::string* CtpReqQryTransferBank::mutable_investor_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqQryTransferBank.investor_id)
  return investor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqQryTransferBank::release_investor_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqQryTransferBank.investor_id)
  
  return investor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqQryTransferBank::set_allocated_investor_id(::std::string* investor_id) {
  if (investor_id != nullptr) {
    
  } else {
    
  }
  investor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), investor_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqQryTransferBank.investor_id)
}

// -------------------------------------------------------------------

// CtpRspQryTransferBank

// int32 error_id = 1;
inline void CtpRspQryTransferBank::clear_error_id() {
  error_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryTransferBank::error_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryTransferBank.error_id)
  return error_id_;
}
inline void CtpRspQryTransferBank::set_error_id(::google::protobuf::int32 value) {
  
  error_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryTransferBank.error_id)
}

// string error_msg = 2;
inline void CtpRspQryTransferBank::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryTransferBank::error_msg() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryTransferBank.error_msg)
  return error_msg_.GetNoArena();
}
inline void CtpRspQryTransferBank::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryTransferBank.error_msg)
}
#if LANG_CXX11
inline void CtpRspQryTransferBank::set_error_msg(::std::string&& value) {
  
  error_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryTransferBank.error_msg)
}
#endif
inline void CtpRspQryTransferBank::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryTransferBank.error_msg)
}
inline void CtpRspQryTransferBank::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryTransferBank.error_msg)
}
inline ::std::string* CtpRspQryTransferBank::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryTransferBank.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryTransferBank::release_error_msg() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryTransferBank.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryTransferBank::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != nullptr) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryTransferBank.error_msg)
}

// int32 request_id = 3;
inline void CtpRspQryTransferBank::clear_request_id() {
  request_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspQryTransferBank::request_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryTransferBank.request_id)
  return request_id_;
}
inline void CtpRspQryTransferBank::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryTransferBank.request_id)
}

// bool is_last = 4;
inline void CtpRspQryTransferBank::clear_is_last() {
  is_last_ = false;
}
inline bool CtpRspQryTransferBank::is_last() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryTransferBank.is_last)
  return is_last_;
}
inline void CtpRspQryTransferBank::set_is_last(bool value) {
  
  is_last_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspQryTransferBank.is_last)
}

// string broker_id = 5;
inline void CtpRspQryTransferBank::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryTransferBank::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryTransferBank.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpRspQryTransferBank::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryTransferBank.broker_id)
}
#if LANG_CXX11
inline void CtpRspQryTransferBank::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryTransferBank.broker_id)
}
#endif
inline void CtpRspQryTransferBank::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryTransferBank.broker_id)
}
inline void CtpRspQryTransferBank::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryTransferBank.broker_id)
}
inline ::std::string* CtpRspQryTransferBank::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryTransferBank.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryTransferBank::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryTransferBank.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryTransferBank::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryTransferBank.broker_id)
}

// string bank_id = 6;
inline void CtpRspQryTransferBank::clear_bank_id() {
  bank_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryTransferBank::bank_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryTransferBank.bank_id)
  return bank_id_.GetNoArena();
}
inline void CtpRspQryTransferBank::set_bank_id(const ::std::string& value) {
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryTransferBank.bank_id)
}
#if LANG_CXX11
inline void CtpRspQryTransferBank::set_bank_id(::std::string&& value) {
  
  bank_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryTransferBank.bank_id)
}
#endif
inline void CtpRspQryTransferBank::set_bank_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryTransferBank.bank_id)
}
inline void CtpRspQryTransferBank::set_bank_id(const char* value, size_t size) {
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryTransferBank.bank_id)
}
inline ::std::string* CtpRspQryTransferBank::mutable_bank_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryTransferBank.bank_id)
  return bank_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryTransferBank::release_bank_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryTransferBank.bank_id)
  
  return bank_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryTransferBank::set_allocated_bank_id(::std::string* bank_id) {
  if (bank_id != nullptr) {
    
  } else {
    
  }
  bank_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryTransferBank.bank_id)
}

// string bank_branch_id = 7;
inline void CtpRspQryTransferBank::clear_bank_branch_id() {
  bank_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryTransferBank::bank_branch_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryTransferBank.bank_branch_id)
  return bank_branch_id_.GetNoArena();
}
inline void CtpRspQryTransferBank::set_bank_branch_id(const ::std::string& value) {
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryTransferBank.bank_branch_id)
}
#if LANG_CXX11
inline void CtpRspQryTransferBank::set_bank_branch_id(::std::string&& value) {
  
  bank_branch_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryTransferBank.bank_branch_id)
}
#endif
inline void CtpRspQryTransferBank::set_bank_branch_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryTransferBank.bank_branch_id)
}
inline void CtpRspQryTransferBank::set_bank_branch_id(const char* value, size_t size) {
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryTransferBank.bank_branch_id)
}
inline ::std::string* CtpRspQryTransferBank::mutable_bank_branch_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryTransferBank.bank_branch_id)
  return bank_branch_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryTransferBank::release_bank_branch_id() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryTransferBank.bank_branch_id)
  
  return bank_branch_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryTransferBank::set_allocated_bank_branch_id(::std::string* bank_branch_id) {
  if (bank_branch_id != nullptr) {
    
  } else {
    
  }
  bank_branch_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_branch_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryTransferBank.bank_branch_id)
}

// string bank_name = 8;
inline void CtpRspQryTransferBank::clear_bank_name() {
  bank_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspQryTransferBank::bank_name() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspQryTransferBank.bank_name)
  return bank_name_.GetNoArena();
}
inline void CtpRspQryTransferBank::set_bank_name(const ::std::string& value) {
  
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspQryTransferBank.bank_name)
}
#if LANG_CXX11
inline void CtpRspQryTransferBank::set_bank_name(::std::string&& value) {
  
  bank_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspQryTransferBank.bank_name)
}
#endif
inline void CtpRspQryTransferBank::set_bank_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspQryTransferBank.bank_name)
}
inline void CtpRspQryTransferBank::set_bank_name(const char* value, size_t size) {
  
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspQryTransferBank.bank_name)
}
inline ::std::string* CtpRspQryTransferBank::mutable_bank_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspQryTransferBank.bank_name)
  return bank_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspQryTransferBank::release_bank_name() {
  // @@protoc_insertion_point(field_release:pb.CtpRspQryTransferBank.bank_name)
  
  return bank_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspQryTransferBank::set_allocated_bank_name(::std::string* bank_name) {
  if (bank_name != nullptr) {
    
  } else {
    
  }
  bank_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_name);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspQryTransferBank.bank_name)
}

// -------------------------------------------------------------------

// CtpReqTransfer

// string trade_code = 1;
inline void CtpReqTransfer::clear_trade_code() {
  trade_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::trade_code() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.trade_code)
  return trade_code_.GetNoArena();
}
inline void CtpReqTransfer::set_trade_code(const ::std::string& value) {
  
  trade_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.trade_code)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_trade_code(::std::string&& value) {
  
  trade_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.trade_code)
}
#endif
inline void CtpReqTransfer::set_trade_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  trade_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.trade_code)
}
inline void CtpReqTransfer::set_trade_code(const char* value, size_t size) {
  
  trade_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.trade_code)
}
inline ::std::string* CtpReqTransfer::mutable_trade_code() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.trade_code)
  return trade_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_trade_code() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.trade_code)
  
  return trade_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_trade_code(::std::string* trade_code) {
  if (trade_code != nullptr) {
    
  } else {
    
  }
  trade_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trade_code);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.trade_code)
}

// string bank_id = 2;
inline void CtpReqTransfer::clear_bank_id() {
  bank_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::bank_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.bank_id)
  return bank_id_.GetNoArena();
}
inline void CtpReqTransfer::set_bank_id(const ::std::string& value) {
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.bank_id)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_bank_id(::std::string&& value) {
  
  bank_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.bank_id)
}
#endif
inline void CtpReqTransfer::set_bank_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.bank_id)
}
inline void CtpReqTransfer::set_bank_id(const char* value, size_t size) {
  
  bank_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.bank_id)
}
inline ::std::string* CtpReqTransfer::mutable_bank_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.bank_id)
  return bank_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_bank_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.bank_id)
  
  return bank_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_bank_id(::std::string* bank_id) {
  if (bank_id != nullptr) {
    
  } else {
    
  }
  bank_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.bank_id)
}

// string bank_branch_id = 3;
inline void CtpReqTransfer::clear_bank_branch_id() {
  bank_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::bank_branch_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.bank_branch_id)
  return bank_branch_id_.GetNoArena();
}
inline void CtpReqTransfer::set_bank_branch_id(const ::std::string& value) {
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.bank_branch_id)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_bank_branch_id(::std::string&& value) {
  
  bank_branch_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.bank_branch_id)
}
#endif
inline void CtpReqTransfer::set_bank_branch_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.bank_branch_id)
}
inline void CtpReqTransfer::set_bank_branch_id(const char* value, size_t size) {
  
  bank_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.bank_branch_id)
}
inline ::std::string* CtpReqTransfer::mutable_bank_branch_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.bank_branch_id)
  return bank_branch_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_bank_branch_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.bank_branch_id)
  
  return bank_branch_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_bank_branch_id(::std::string* bank_branch_id) {
  if (bank_branch_id != nullptr) {
    
  } else {
    
  }
  bank_branch_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_branch_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.bank_branch_id)
}

// string broker_id = 4;
inline void CtpReqTransfer::clear_broker_id() {
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::broker_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.broker_id)
  return broker_id_.GetNoArena();
}
inline void CtpReqTransfer::set_broker_id(const ::std::string& value) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.broker_id)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_broker_id(::std::string&& value) {
  
  broker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.broker_id)
}
#endif
inline void CtpReqTransfer::set_broker_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.broker_id)
}
inline void CtpReqTransfer::set_broker_id(const char* value, size_t size) {
  
  broker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.broker_id)
}
inline ::std::string* CtpReqTransfer::mutable_broker_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.broker_id)
  return broker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_broker_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.broker_id)
  
  return broker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_broker_id(::std::string* broker_id) {
  if (broker_id != nullptr) {
    
  } else {
    
  }
  broker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.broker_id)
}

// string broker_branch_id = 5;
inline void CtpReqTransfer::clear_broker_branch_id() {
  broker_branch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::broker_branch_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.broker_branch_id)
  return broker_branch_id_.GetNoArena();
}
inline void CtpReqTransfer::set_broker_branch_id(const ::std::string& value) {
  
  broker_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.broker_branch_id)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_broker_branch_id(::std::string&& value) {
  
  broker_branch_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.broker_branch_id)
}
#endif
inline void CtpReqTransfer::set_broker_branch_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  broker_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.broker_branch_id)
}
inline void CtpReqTransfer::set_broker_branch_id(const char* value, size_t size) {
  
  broker_branch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.broker_branch_id)
}
inline ::std::string* CtpReqTransfer::mutable_broker_branch_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.broker_branch_id)
  return broker_branch_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_broker_branch_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.broker_branch_id)
  
  return broker_branch_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_broker_branch_id(::std::string* broker_branch_id) {
  if (broker_branch_id != nullptr) {
    
  } else {
    
  }
  broker_branch_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker_branch_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.broker_branch_id)
}

// string trade_date = 6;
inline void CtpReqTransfer::clear_trade_date() {
  trade_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::trade_date() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.trade_date)
  return trade_date_.GetNoArena();
}
inline void CtpReqTransfer::set_trade_date(const ::std::string& value) {
  
  trade_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.trade_date)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_trade_date(::std::string&& value) {
  
  trade_date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.trade_date)
}
#endif
inline void CtpReqTransfer::set_trade_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  trade_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.trade_date)
}
inline void CtpReqTransfer::set_trade_date(const char* value, size_t size) {
  
  trade_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.trade_date)
}
inline ::std::string* CtpReqTransfer::mutable_trade_date() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.trade_date)
  return trade_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_trade_date() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.trade_date)
  
  return trade_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_trade_date(::std::string* trade_date) {
  if (trade_date != nullptr) {
    
  } else {
    
  }
  trade_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trade_date);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.trade_date)
}

// string trade_time = 7;
inline void CtpReqTransfer::clear_trade_time() {
  trade_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::trade_time() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.trade_time)
  return trade_time_.GetNoArena();
}
inline void CtpReqTransfer::set_trade_time(const ::std::string& value) {
  
  trade_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.trade_time)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_trade_time(::std::string&& value) {
  
  trade_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.trade_time)
}
#endif
inline void CtpReqTransfer::set_trade_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  trade_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.trade_time)
}
inline void CtpReqTransfer::set_trade_time(const char* value, size_t size) {
  
  trade_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.trade_time)
}
inline ::std::string* CtpReqTransfer::mutable_trade_time() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.trade_time)
  return trade_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_trade_time() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.trade_time)
  
  return trade_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_trade_time(::std::string* trade_time) {
  if (trade_time != nullptr) {
    
  } else {
    
  }
  trade_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trade_time);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.trade_time)
}

// string bank_serial = 8;
inline void CtpReqTransfer::clear_bank_serial() {
  bank_serial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::bank_serial() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.bank_serial)
  return bank_serial_.GetNoArena();
}
inline void CtpReqTransfer::set_bank_serial(const ::std::string& value) {
  
  bank_serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.bank_serial)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_bank_serial(::std::string&& value) {
  
  bank_serial_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.bank_serial)
}
#endif
inline void CtpReqTransfer::set_bank_serial(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.bank_serial)
}
inline void CtpReqTransfer::set_bank_serial(const char* value, size_t size) {
  
  bank_serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.bank_serial)
}
inline ::std::string* CtpReqTransfer::mutable_bank_serial() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.bank_serial)
  return bank_serial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_bank_serial() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.bank_serial)
  
  return bank_serial_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_bank_serial(::std::string* bank_serial) {
  if (bank_serial != nullptr) {
    
  } else {
    
  }
  bank_serial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_serial);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.bank_serial)
}

// string trading_day = 9;
inline void CtpReqTransfer::clear_trading_day() {
  trading_day_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::trading_day() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.trading_day)
  return trading_day_.GetNoArena();
}
inline void CtpReqTransfer::set_trading_day(const ::std::string& value) {
  
  trading_day_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.trading_day)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_trading_day(::std::string&& value) {
  
  trading_day_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.trading_day)
}
#endif
inline void CtpReqTransfer::set_trading_day(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  trading_day_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.trading_day)
}
inline void CtpReqTransfer::set_trading_day(const char* value, size_t size) {
  
  trading_day_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.trading_day)
}
inline ::std::string* CtpReqTransfer::mutable_trading_day() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.trading_day)
  return trading_day_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_trading_day() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.trading_day)
  
  return trading_day_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_trading_day(::std::string* trading_day) {
  if (trading_day != nullptr) {
    
  } else {
    
  }
  trading_day_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trading_day);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.trading_day)
}

// int32 plate_serieal = 10;
inline void CtpReqTransfer::clear_plate_serieal() {
  plate_serieal_ = 0;
}
inline ::google::protobuf::int32 CtpReqTransfer::plate_serieal() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.plate_serieal)
  return plate_serieal_;
}
inline void CtpReqTransfer::set_plate_serieal(::google::protobuf::int32 value) {
  
  plate_serieal_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.plate_serieal)
}

// string last_fragment = 11;
inline void CtpReqTransfer::clear_last_fragment() {
  last_fragment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::last_fragment() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.last_fragment)
  return last_fragment_.GetNoArena();
}
inline void CtpReqTransfer::set_last_fragment(const ::std::string& value) {
  
  last_fragment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.last_fragment)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_last_fragment(::std::string&& value) {
  
  last_fragment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.last_fragment)
}
#endif
inline void CtpReqTransfer::set_last_fragment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_fragment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.last_fragment)
}
inline void CtpReqTransfer::set_last_fragment(const char* value, size_t size) {
  
  last_fragment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.last_fragment)
}
inline ::std::string* CtpReqTransfer::mutable_last_fragment() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.last_fragment)
  return last_fragment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_last_fragment() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.last_fragment)
  
  return last_fragment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_last_fragment(::std::string* last_fragment) {
  if (last_fragment != nullptr) {
    
  } else {
    
  }
  last_fragment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_fragment);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.last_fragment)
}

// int32 session_id = 12;
inline void CtpReqTransfer::clear_session_id() {
  session_id_ = 0;
}
inline ::google::protobuf::int32 CtpReqTransfer::session_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.session_id)
  return session_id_;
}
inline void CtpReqTransfer::set_session_id(::google::protobuf::int32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.session_id)
}

// string customer_name = 13;
inline void CtpReqTransfer::clear_customer_name() {
  customer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::customer_name() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.customer_name)
  return customer_name_.GetNoArena();
}
inline void CtpReqTransfer::set_customer_name(const ::std::string& value) {
  
  customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.customer_name)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_customer_name(::std::string&& value) {
  
  customer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.customer_name)
}
#endif
inline void CtpReqTransfer::set_customer_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.customer_name)
}
inline void CtpReqTransfer::set_customer_name(const char* value, size_t size) {
  
  customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.customer_name)
}
inline ::std::string* CtpReqTransfer::mutable_customer_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.customer_name)
  return customer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_customer_name() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.customer_name)
  
  return customer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_customer_name(::std::string* customer_name) {
  if (customer_name != nullptr) {
    
  } else {
    
  }
  customer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_name);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.customer_name)
}

// int32 id_card_type = 14;
inline void CtpReqTransfer::clear_id_card_type() {
  id_card_type_ = 0;
}
inline ::google::protobuf::int32 CtpReqTransfer::id_card_type() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.id_card_type)
  return id_card_type_;
}
inline void CtpReqTransfer::set_id_card_type(::google::protobuf::int32 value) {
  
  id_card_type_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.id_card_type)
}

// string identified_card_no = 15;
inline void CtpReqTransfer::clear_identified_card_no() {
  identified_card_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::identified_card_no() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.identified_card_no)
  return identified_card_no_.GetNoArena();
}
inline void CtpReqTransfer::set_identified_card_no(const ::std::string& value) {
  
  identified_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.identified_card_no)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_identified_card_no(::std::string&& value) {
  
  identified_card_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.identified_card_no)
}
#endif
inline void CtpReqTransfer::set_identified_card_no(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  identified_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.identified_card_no)
}
inline void CtpReqTransfer::set_identified_card_no(const char* value, size_t size) {
  
  identified_card_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.identified_card_no)
}
inline ::std::string* CtpReqTransfer::mutable_identified_card_no() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.identified_card_no)
  return identified_card_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_identified_card_no() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.identified_card_no)
  
  return identified_card_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_identified_card_no(::std::string* identified_card_no) {
  if (identified_card_no != nullptr) {
    
  } else {
    
  }
  identified_card_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identified_card_no);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.identified_card_no)
}

// string cust_type = 16;
inline void CtpReqTransfer::clear_cust_type() {
  cust_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::cust_type() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.cust_type)
  return cust_type_.GetNoArena();
}
inline void CtpReqTransfer::set_cust_type(const ::std::string& value) {
  
  cust_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.cust_type)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_cust_type(::std::string&& value) {
  
  cust_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.cust_type)
}
#endif
inline void CtpReqTransfer::set_cust_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cust_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.cust_type)
}
inline void CtpReqTransfer::set_cust_type(const char* value, size_t size) {
  
  cust_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.cust_type)
}
inline ::std::string* CtpReqTransfer::mutable_cust_type() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.cust_type)
  return cust_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_cust_type() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.cust_type)
  
  return cust_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_cust_type(::std::string* cust_type) {
  if (cust_type != nullptr) {
    
  } else {
    
  }
  cust_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cust_type);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.cust_type)
}

// string bank_account = 17;
inline void CtpReqTransfer::clear_bank_account() {
  bank_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::bank_account() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.bank_account)
  return bank_account_.GetNoArena();
}
inline void CtpReqTransfer::set_bank_account(const ::std::string& value) {
  
  bank_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.bank_account)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_bank_account(::std::string&& value) {
  
  bank_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.bank_account)
}
#endif
inline void CtpReqTransfer::set_bank_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.bank_account)
}
inline void CtpReqTransfer::set_bank_account(const char* value, size_t size) {
  
  bank_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.bank_account)
}
inline ::std::string* CtpReqTransfer::mutable_bank_account() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.bank_account)
  return bank_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_bank_account() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.bank_account)
  
  return bank_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_bank_account(::std::string* bank_account) {
  if (bank_account != nullptr) {
    
  } else {
    
  }
  bank_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_account);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.bank_account)
}

// string bank_password = 18;
inline void CtpReqTransfer::clear_bank_password() {
  bank_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::bank_password() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.bank_password)
  return bank_password_.GetNoArena();
}
inline void CtpReqTransfer::set_bank_password(const ::std::string& value) {
  
  bank_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.bank_password)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_bank_password(::std::string&& value) {
  
  bank_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.bank_password)
}
#endif
inline void CtpReqTransfer::set_bank_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.bank_password)
}
inline void CtpReqTransfer::set_bank_password(const char* value, size_t size) {
  
  bank_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.bank_password)
}
inline ::std::string* CtpReqTransfer::mutable_bank_password() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.bank_password)
  return bank_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_bank_password() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.bank_password)
  
  return bank_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_bank_password(::std::string* bank_password) {
  if (bank_password != nullptr) {
    
  } else {
    
  }
  bank_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_password);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.bank_password)
}

// string account_id = 19;
inline void CtpReqTransfer::clear_account_id() {
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::account_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.account_id)
  return account_id_.GetNoArena();
}
inline void CtpReqTransfer::set_account_id(const ::std::string& value) {
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.account_id)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_account_id(::std::string&& value) {
  
  account_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.account_id)
}
#endif
inline void CtpReqTransfer::set_account_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.account_id)
}
inline void CtpReqTransfer::set_account_id(const char* value, size_t size) {
  
  account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.account_id)
}
inline ::std::string* CtpReqTransfer::mutable_account_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.account_id)
  return account_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_account_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.account_id)
  
  return account_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_account_id(::std::string* account_id) {
  if (account_id != nullptr) {
    
  } else {
    
  }
  account_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.account_id)
}

// string password = 20;
inline void CtpReqTransfer::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::password() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.password)
  return password_.GetNoArena();
}
inline void CtpReqTransfer::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.password)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.password)
}
#endif
inline void CtpReqTransfer::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.password)
}
inline void CtpReqTransfer::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.password)
}
inline ::std::string* CtpReqTransfer::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_password() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.password)
}

// int32 install_id = 21;
inline void CtpReqTransfer::clear_install_id() {
  install_id_ = 0;
}
inline ::google::protobuf::int32 CtpReqTransfer::install_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.install_id)
  return install_id_;
}
inline void CtpReqTransfer::set_install_id(::google::protobuf::int32 value) {
  
  install_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.install_id)
}

// int32 future_serial = 22;
inline void CtpReqTransfer::clear_future_serial() {
  future_serial_ = 0;
}
inline ::google::protobuf::int32 CtpReqTransfer::future_serial() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.future_serial)
  return future_serial_;
}
inline void CtpReqTransfer::set_future_serial(::google::protobuf::int32 value) {
  
  future_serial_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.future_serial)
}

// string user_id = 23;
inline void CtpReqTransfer::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::user_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.user_id)
  return user_id_.GetNoArena();
}
inline void CtpReqTransfer::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.user_id)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.user_id)
}
#endif
inline void CtpReqTransfer::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.user_id)
}
inline void CtpReqTransfer::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.user_id)
}
inline ::std::string* CtpReqTransfer::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_user_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.user_id)
}

// string verify_cert_no_flag = 24;
inline void CtpReqTransfer::clear_verify_cert_no_flag() {
  verify_cert_no_flag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::verify_cert_no_flag() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.verify_cert_no_flag)
  return verify_cert_no_flag_.GetNoArena();
}
inline void CtpReqTransfer::set_verify_cert_no_flag(const ::std::string& value) {
  
  verify_cert_no_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.verify_cert_no_flag)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_verify_cert_no_flag(::std::string&& value) {
  
  verify_cert_no_flag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.verify_cert_no_flag)
}
#endif
inline void CtpReqTransfer::set_verify_cert_no_flag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  verify_cert_no_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.verify_cert_no_flag)
}
inline void CtpReqTransfer::set_verify_cert_no_flag(const char* value, size_t size) {
  
  verify_cert_no_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.verify_cert_no_flag)
}
inline ::std::string* CtpReqTransfer::mutable_verify_cert_no_flag() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.verify_cert_no_flag)
  return verify_cert_no_flag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_verify_cert_no_flag() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.verify_cert_no_flag)
  
  return verify_cert_no_flag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_verify_cert_no_flag(::std::string* verify_cert_no_flag) {
  if (verify_cert_no_flag != nullptr) {
    
  } else {
    
  }
  verify_cert_no_flag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verify_cert_no_flag);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.verify_cert_no_flag)
}

// string currency_id = 25;
inline void CtpReqTransfer::clear_currency_id() {
  currency_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::currency_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.currency_id)
  return currency_id_.GetNoArena();
}
inline void CtpReqTransfer::set_currency_id(const ::std::string& value) {
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.currency_id)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_currency_id(::std::string&& value) {
  
  currency_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.currency_id)
}
#endif
inline void CtpReqTransfer::set_currency_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.currency_id)
}
inline void CtpReqTransfer::set_currency_id(const char* value, size_t size) {
  
  currency_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.currency_id)
}
inline ::std::string* CtpReqTransfer::mutable_currency_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.currency_id)
  return currency_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_currency_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.currency_id)
  
  return currency_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_currency_id(::std::string* currency_id) {
  if (currency_id != nullptr) {
    
  } else {
    
  }
  currency_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.currency_id)
}

// double trade_amount = 26;
inline void CtpReqTransfer::clear_trade_amount() {
  trade_amount_ = 0;
}
inline double CtpReqTransfer::trade_amount() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.trade_amount)
  return trade_amount_;
}
inline void CtpReqTransfer::set_trade_amount(double value) {
  
  trade_amount_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.trade_amount)
}

// double future_fetch_amount = 27;
inline void CtpReqTransfer::clear_future_fetch_amount() {
  future_fetch_amount_ = 0;
}
inline double CtpReqTransfer::future_fetch_amount() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.future_fetch_amount)
  return future_fetch_amount_;
}
inline void CtpReqTransfer::set_future_fetch_amount(double value) {
  
  future_fetch_amount_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.future_fetch_amount)
}

// int32 fee_pay_flag = 28;
inline void CtpReqTransfer::clear_fee_pay_flag() {
  fee_pay_flag_ = 0;
}
inline ::google::protobuf::int32 CtpReqTransfer::fee_pay_flag() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.fee_pay_flag)
  return fee_pay_flag_;
}
inline void CtpReqTransfer::set_fee_pay_flag(::google::protobuf::int32 value) {
  
  fee_pay_flag_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.fee_pay_flag)
}

// double cust_fee = 29;
inline void CtpReqTransfer::clear_cust_fee() {
  cust_fee_ = 0;
}
inline double CtpReqTransfer::cust_fee() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.cust_fee)
  return cust_fee_;
}
inline void CtpReqTransfer::set_cust_fee(double value) {
  
  cust_fee_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.cust_fee)
}

// double broker_fee = 30;
inline void CtpReqTransfer::clear_broker_fee() {
  broker_fee_ = 0;
}
inline double CtpReqTransfer::broker_fee() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.broker_fee)
  return broker_fee_;
}
inline void CtpReqTransfer::set_broker_fee(double value) {
  
  broker_fee_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.broker_fee)
}

// string message = 31;
inline void CtpReqTransfer::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::message() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.message)
  return message_.GetNoArena();
}
inline void CtpReqTransfer::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.message)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.message)
}
#endif
inline void CtpReqTransfer::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.message)
}
inline void CtpReqTransfer::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.message)
}
inline ::std::string* CtpReqTransfer::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_message() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.message)
}

// string digest = 32;
inline void CtpReqTransfer::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::digest() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.digest)
  return digest_.GetNoArena();
}
inline void CtpReqTransfer::set_digest(const ::std::string& value) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.digest)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_digest(::std::string&& value) {
  
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.digest)
}
#endif
inline void CtpReqTransfer::set_digest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.digest)
}
inline void CtpReqTransfer::set_digest(const char* value, size_t size) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.digest)
}
inline ::std::string* CtpReqTransfer::mutable_digest() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_digest() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.digest)
  
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_digest(::std::string* digest) {
  if (digest != nullptr) {
    
  } else {
    
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.digest)
}

// int32 bank_acc_type = 33;
inline void CtpReqTransfer::clear_bank_acc_type() {
  bank_acc_type_ = 0;
}
inline ::google::protobuf::int32 CtpReqTransfer::bank_acc_type() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.bank_acc_type)
  return bank_acc_type_;
}
inline void CtpReqTransfer::set_bank_acc_type(::google::protobuf::int32 value) {
  
  bank_acc_type_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.bank_acc_type)
}

// string device_id = 34;
inline void CtpReqTransfer::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::device_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.device_id)
  return device_id_.GetNoArena();
}
inline void CtpReqTransfer::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.device_id)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_device_id(::std::string&& value) {
  
  device_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.device_id)
}
#endif
inline void CtpReqTransfer::set_device_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.device_id)
}
inline void CtpReqTransfer::set_device_id(const char* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.device_id)
}
inline ::std::string* CtpReqTransfer::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_device_id() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_device_id(::std::string* device_id) {
  if (device_id != nullptr) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.device_id)
}

// string bank_secu_acc = 35;
inline void CtpReqTransfer::clear_bank_secu_acc() {
  bank_secu_acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::bank_secu_acc() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.bank_secu_acc)
  return bank_secu_acc_.GetNoArena();
}
inline void CtpReqTransfer::set_bank_secu_acc(const ::std::string& value) {
  
  bank_secu_acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.bank_secu_acc)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_bank_secu_acc(::std::string&& value) {
  
  bank_secu_acc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.bank_secu_acc)
}
#endif
inline void CtpReqTransfer::set_bank_secu_acc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_secu_acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.bank_secu_acc)
}
inline void CtpReqTransfer::set_bank_secu_acc(const char* value, size_t size) {
  
  bank_secu_acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.bank_secu_acc)
}
inline ::std::string* CtpReqTransfer::mutable_bank_secu_acc() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.bank_secu_acc)
  return bank_secu_acc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_bank_secu_acc() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.bank_secu_acc)
  
  return bank_secu_acc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_bank_secu_acc(::std::string* bank_secu_acc) {
  if (bank_secu_acc != nullptr) {
    
  } else {
    
  }
  bank_secu_acc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_secu_acc);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.bank_secu_acc)
}

// string bank_pwd_flag = 36;
inline void CtpReqTransfer::clear_bank_pwd_flag() {
  bank_pwd_flag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::bank_pwd_flag() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.bank_pwd_flag)
  return bank_pwd_flag_.GetNoArena();
}
inline void CtpReqTransfer::set_bank_pwd_flag(const ::std::string& value) {
  
  bank_pwd_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.bank_pwd_flag)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_bank_pwd_flag(::std::string&& value) {
  
  bank_pwd_flag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.bank_pwd_flag)
}
#endif
inline void CtpReqTransfer::set_bank_pwd_flag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bank_pwd_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.bank_pwd_flag)
}
inline void CtpReqTransfer::set_bank_pwd_flag(const char* value, size_t size) {
  
  bank_pwd_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.bank_pwd_flag)
}
inline ::std::string* CtpReqTransfer::mutable_bank_pwd_flag() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.bank_pwd_flag)
  return bank_pwd_flag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_bank_pwd_flag() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.bank_pwd_flag)
  
  return bank_pwd_flag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_bank_pwd_flag(::std::string* bank_pwd_flag) {
  if (bank_pwd_flag != nullptr) {
    
  } else {
    
  }
  bank_pwd_flag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_pwd_flag);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.bank_pwd_flag)
}

// string secu_pwd_flag = 37;
inline void CtpReqTransfer::clear_secu_pwd_flag() {
  secu_pwd_flag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::secu_pwd_flag() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.secu_pwd_flag)
  return secu_pwd_flag_.GetNoArena();
}
inline void CtpReqTransfer::set_secu_pwd_flag(const ::std::string& value) {
  
  secu_pwd_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.secu_pwd_flag)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_secu_pwd_flag(::std::string&& value) {
  
  secu_pwd_flag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.secu_pwd_flag)
}
#endif
inline void CtpReqTransfer::set_secu_pwd_flag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secu_pwd_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.secu_pwd_flag)
}
inline void CtpReqTransfer::set_secu_pwd_flag(const char* value, size_t size) {
  
  secu_pwd_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.secu_pwd_flag)
}
inline ::std::string* CtpReqTransfer::mutable_secu_pwd_flag() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.secu_pwd_flag)
  return secu_pwd_flag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_secu_pwd_flag() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.secu_pwd_flag)
  
  return secu_pwd_flag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_secu_pwd_flag(::std::string* secu_pwd_flag) {
  if (secu_pwd_flag != nullptr) {
    
  } else {
    
  }
  secu_pwd_flag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secu_pwd_flag);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.secu_pwd_flag)
}

// string oper_no = 38;
inline void CtpReqTransfer::clear_oper_no() {
  oper_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::oper_no() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.oper_no)
  return oper_no_.GetNoArena();
}
inline void CtpReqTransfer::set_oper_no(const ::std::string& value) {
  
  oper_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.oper_no)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_oper_no(::std::string&& value) {
  
  oper_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.oper_no)
}
#endif
inline void CtpReqTransfer::set_oper_no(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  oper_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.oper_no)
}
inline void CtpReqTransfer::set_oper_no(const char* value, size_t size) {
  
  oper_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.oper_no)
}
inline ::std::string* CtpReqTransfer::mutable_oper_no() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.oper_no)
  return oper_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_oper_no() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.oper_no)
  
  return oper_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_oper_no(::std::string* oper_no) {
  if (oper_no != nullptr) {
    
  } else {
    
  }
  oper_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oper_no);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.oper_no)
}

// int32 request_id = 39;
inline void CtpReqTransfer::clear_request_id() {
  request_id_ = 0;
}
inline ::google::protobuf::int32 CtpReqTransfer::request_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.request_id)
  return request_id_;
}
inline void CtpReqTransfer::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.request_id)
}

// int32 tid = 40;
inline void CtpReqTransfer::clear_tid() {
  tid_ = 0;
}
inline ::google::protobuf::int32 CtpReqTransfer::tid() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.tid)
  return tid_;
}
inline void CtpReqTransfer::set_tid(::google::protobuf::int32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.tid)
}

// string transfer_status = 41;
inline void CtpReqTransfer::clear_transfer_status() {
  transfer_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::transfer_status() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.transfer_status)
  return transfer_status_.GetNoArena();
}
inline void CtpReqTransfer::set_transfer_status(const ::std::string& value) {
  
  transfer_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.transfer_status)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_transfer_status(::std::string&& value) {
  
  transfer_status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.transfer_status)
}
#endif
inline void CtpReqTransfer::set_transfer_status(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transfer_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.transfer_status)
}
inline void CtpReqTransfer::set_transfer_status(const char* value, size_t size) {
  
  transfer_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.transfer_status)
}
inline ::std::string* CtpReqTransfer::mutable_transfer_status() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.transfer_status)
  return transfer_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_transfer_status() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.transfer_status)
  
  return transfer_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_transfer_status(::std::string* transfer_status) {
  if (transfer_status != nullptr) {
    
  } else {
    
  }
  transfer_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transfer_status);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.transfer_status)
}

// string long_customer_name = 42;
inline void CtpReqTransfer::clear_long_customer_name() {
  long_customer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpReqTransfer::long_customer_name() const {
  // @@protoc_insertion_point(field_get:pb.CtpReqTransfer.long_customer_name)
  return long_customer_name_.GetNoArena();
}
inline void CtpReqTransfer::set_long_customer_name(const ::std::string& value) {
  
  long_customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpReqTransfer.long_customer_name)
}
#if LANG_CXX11
inline void CtpReqTransfer::set_long_customer_name(::std::string&& value) {
  
  long_customer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpReqTransfer.long_customer_name)
}
#endif
inline void CtpReqTransfer::set_long_customer_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  long_customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpReqTransfer.long_customer_name)
}
inline void CtpReqTransfer::set_long_customer_name(const char* value, size_t size) {
  
  long_customer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpReqTransfer.long_customer_name)
}
inline ::std::string* CtpReqTransfer::mutable_long_customer_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpReqTransfer.long_customer_name)
  return long_customer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpReqTransfer::release_long_customer_name() {
  // @@protoc_insertion_point(field_release:pb.CtpReqTransfer.long_customer_name)
  
  return long_customer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpReqTransfer::set_allocated_long_customer_name(::std::string* long_customer_name) {
  if (long_customer_name != nullptr) {
    
  } else {
    
  }
  long_customer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), long_customer_name);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpReqTransfer.long_customer_name)
}

// -------------------------------------------------------------------

// CtpRspTransfer

// int32 error_id = 1;
inline void CtpRspTransfer::clear_error_id() {
  error_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspTransfer::error_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspTransfer.error_id)
  return error_id_;
}
inline void CtpRspTransfer::set_error_id(::google::protobuf::int32 value) {
  
  error_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspTransfer.error_id)
}

// string error_msg = 2;
inline void CtpRspTransfer::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CtpRspTransfer::error_msg() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspTransfer.error_msg)
  return error_msg_.GetNoArena();
}
inline void CtpRspTransfer::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CtpRspTransfer.error_msg)
}
#if LANG_CXX11
inline void CtpRspTransfer::set_error_msg(::std::string&& value) {
  
  error_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.CtpRspTransfer.error_msg)
}
#endif
inline void CtpRspTransfer::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CtpRspTransfer.error_msg)
}
inline void CtpRspTransfer::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CtpRspTransfer.error_msg)
}
inline ::std::string* CtpRspTransfer::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:pb.CtpRspTransfer.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CtpRspTransfer::release_error_msg() {
  // @@protoc_insertion_point(field_release:pb.CtpRspTransfer.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CtpRspTransfer::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != nullptr) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspTransfer.error_msg)
}

// int32 request_id = 3;
inline void CtpRspTransfer::clear_request_id() {
  request_id_ = 0;
}
inline ::google::protobuf::int32 CtpRspTransfer::request_id() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspTransfer.request_id)
  return request_id_;
}
inline void CtpRspTransfer::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspTransfer.request_id)
}

// bool is_last = 4;
inline void CtpRspTransfer::clear_is_last() {
  is_last_ = false;
}
inline bool CtpRspTransfer::is_last() const {
  // @@protoc_insertion_point(field_get:pb.CtpRspTransfer.is_last)
  return is_last_;
}
inline void CtpRspTransfer::set_is_last(bool value) {
  
  is_last_ = value;
  // @@protoc_insertion_point(field_set:pb.CtpRspTransfer.is_last)
}

// .pb.CtpReqTransfer req = 5;
inline bool CtpRspTransfer::has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline void CtpRspTransfer::clear_req() {
  if (GetArenaNoVirtual() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
inline const ::pb::CtpReqTransfer& CtpRspTransfer::req() const {
  const ::pb::CtpReqTransfer* p = req_;
  // @@protoc_insertion_point(field_get:pb.CtpRspTransfer.req)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::CtpReqTransfer*>(
      &::pb::_CtpReqTransfer_default_instance_);
}
inline ::pb::CtpReqTransfer* CtpRspTransfer::release_req() {
  // @@protoc_insertion_point(field_release:pb.CtpRspTransfer.req)
  
  ::pb::CtpReqTransfer* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::CtpReqTransfer* CtpRspTransfer::mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::CtpReqTransfer>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.CtpRspTransfer.req)
  return req_;
}
inline void CtpRspTransfer::set_allocated_req(::pb::CtpReqTransfer* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.CtpRspTransfer.req)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::BindingCallType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::BindingCallType>() {
  return ::pb::BindingCallType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_binding_2eproto
